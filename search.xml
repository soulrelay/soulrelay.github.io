<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[发布Library到JCenter，步步为营]]></title>
      <url>/2017/08/03/%E5%8F%91%E5%B8%83Library%E5%88%B0JCenter%EF%BC%8C%E6%AD%A5%E6%AD%A5%E4%B8%BA%E8%90%A5/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><font color="#C4573C" size="5" face="黑体">前言</font></h1><p>将自己写的库上传到Jcenter或者Maven提供给自己或者别人使用，在构建项目的时候只要写上一行如下类似的引用代码即可引用自己的库<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile <span class="string">'com.sus.library:imagelib:1.0.0'</span></div></pre></td></tr></table></figure></p>
<p>看到这篇文章的同学可能之前已经踩了不少坑，希望下面的介绍可以帮你解惑<br>如果有什么问题欢迎提出！趁热乎哈！</p>
<p>下面将逐步介绍如何将Library发布到JCenter</p>
<p>具体案例为：<a href="https://github.com/soulrelay/ImageLoaderUtil" target="_blank" rel="external">ImageLoaderUtil</a><br>所有下文涉及到的文件和配置都包含在其中，如果你觉得对你有用，麻烦STAR一下</p>
<h3 id="1、进入Bintray官网"><a href="#1、进入Bintray官网" class="headerlink" title="1、进入Bintray官网"></a><font color="#C4573C" size="4" face="黑体">1、进入<a href="https://bintray.com" target="_blank" rel="external">Bintray</a>官网</font></h3><p><img src="http://upload-images.jianshu.io/upload_images/1814304-c002779dfbdfcedf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240/h/620" alt="Bintray官网首页"></p>
<blockquote>
<ul>
<li>这里选择“For an Open Source Account Sign Up Here”,而非“START YOUR FREE TRIAL”，如果选择 “START YOUR FREE TRIAL”，可能会碰到下面的问题  <a href="https://stackoverflow.com/questions/41953886/bintray-link-to-jcenter-missing" target="_blank" rel="external">Bintray link to jcenter missing</a></li>
<li>问题结论就是：”Add To JCenter” is not enabled for Enterprise Trial users. You need to be OSS or Premium organization/user in order to link your packages to JCenter.</li>
</ul>
</blockquote>
<h3 id="2、注册账号"><a href="#2、注册账号" class="headerlink" title="2、注册账号"></a><font color="#C4573C" size="4" face="黑体">2、注册账号</font></h3><p><img src="http://upload-images.jianshu.io/upload_images/1814304-a377bf8127073659.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240/h/620" alt="账号注册页面"><br>填写相关信息，邮箱尽量使用Gmail邮箱地址（国内邮箱有可能无法注册或者注册成功无法收到激活邮件），注册完成之后到你填写的邮箱里面去激活Bintray账号即可<br>举例：</p>
<blockquote>
<ul>
<li>First Name : Shuai</li>
<li>Last Name : Su</li>
<li>Username : su2008shuai</li>
<li>Password : xxxxxxxxxxxxxx</li>
<li>Emai Address : su2008shuai@gmail.com</li>
<li>Select Country : China</li>
</ul>
</blockquote>
<h3 id="3、创建代码仓库"><a href="#3、创建代码仓库" class="headerlink" title="3、创建代码仓库"></a><font color="#C4573C" size="4" face="黑体">3、创建代码仓库</font></h3><p><img src="http://upload-images.jianshu.io/upload_images/1814304-50ecfd641940a7da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240/h/620" alt="View Profile"></p>
<p>点击上图所示的“Add NewRepository”按钮，添加代码仓库，点击后就会跳转到下图的界面</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1814304-58552f3f7e61c4fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620/1240" alt="创建仓库"></p>
<p>举例：</p>
<blockquote>
<ul>
<li>Name : me</li>
<li>Type : Maven</li>
</ul>
</blockquote>
<h3 id="4、获取头像对应的API-KEY"><a href="#4、获取头像对应的API-KEY" class="headerlink" title="4、获取头像对应的API KEY"></a><font color="#C4573C" size="4" face="黑体">4、获取头像对应的API KEY</font></h3><p>点击右上角个人头像进入到个人信息主界面，点击Edit按钮即可进入到下图所示的界面。点击“API KEY”，输入Bintray本账号的登陆密码，即可查看到本账号的API KEY<br><img src="http://upload-images.jianshu.io/upload_images/1814304-c7229a3e316c3b4e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240/h/620" alt="API KEY"></p>
<h3 id="5、Add-New-Package"><a href="#5、Add-New-Package" class="headerlink" title="5、Add New Package"></a><font color="#C4573C" size="4" face="黑体">5、Add New Package</font></h3><p><img src="http://upload-images.jianshu.io/upload_images/1814304-3e4a1570454101d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620/h/1240" alt="创建包"><br>举例：</p>
<blockquote>
<ul>
<li>Name : imagelib</li>
<li>License : Apache-2.0</li>
<li>Version control : <a href="https://github.com/soulrelay/ImageLoaderUtil" target="_blank" rel="external">https://github.com/soulrelay/ImageLoaderUtil</a></li>
</ul>
</blockquote>
<h3 id="6、Project的build-gradle添加如下信息"><a href="#6、Project的build-gradle添加如下信息" class="headerlink" title="6、Project的build.gradle添加如下信息"></a><font color="#C4573C" size="4" face="黑体">6、Project的build.gradle添加如下信息</font></h3><p>在Project的build.gradle添加如下信息:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//用于打包Maven所需文件</span></div><div class="line">classpath <span class="string">'com.github.dcendents:android-maven-gradle-plugin:1.4.1'</span> </div><div class="line"><span class="comment">//用于上传Maven生成的文件到Bintray</span></div><div class="line">classpath <span class="string">'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'</span></div></pre></td></tr></table></figure></p>
<p>我的Project的build.gradle的完整信息：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></div><div class="line">buildscript &#123;</div><div class="line">repositories &#123;</div><div class="line">jcenter()</div><div class="line">&#125;</div><div class="line">dependencies &#123;</div><div class="line">classpath <span class="string">'com.android.tools.build:gradle:2.3.0'</span></div><div class="line"></div><div class="line"><span class="comment">//用于打包Maven所需文件</span></div><div class="line">classpath <span class="string">'com.github.dcendents:android-maven-gradle-plugin:1.4.1'</span> </div><div class="line"><span class="comment">//用于上传Maven生成的文件到Bintray</span></div><div class="line">classpath <span class="string">'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'</span> </div><div class="line"></div><div class="line"><span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></div><div class="line"><span class="comment">// in the individual module build.gradle files</span></div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">allprojects &#123;</div><div class="line">repositories &#123;</div><div class="line">jcenter()</div><div class="line">maven &#123;</div><div class="line">name <span class="string">'glide-snapshot'</span></div><div class="line">url <span class="string">'http://oss.sonatype.org/content/repositories/snapshots'</span></div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">tasks.withType(Javadoc) &#123;</div><div class="line">options.addStringOption(<span class="string">'Xdoclint:none'</span>, <span class="string">'-quiet'</span>)</div><div class="line">options.addStringOption(<span class="string">'encoding'</span>, <span class="string">'UTF-8'</span>)</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">task <span class="title">clean</span><span class="params">(type: Delete)</span> </span>&#123;</div><div class="line">delete rootProject.buildDir</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="7、配置并应用bintrayUpload-gradle，配置bintray-properties和project-properties"><a href="#7、配置并应用bintrayUpload-gradle，配置bintray-properties和project-properties" class="headerlink" title="7、配置并应用bintrayUpload.gradle，配置bintray.properties和project.properties"></a><font color="#C4573C" size="4" face="黑体">7、配置并应用bintrayUpload.gradle，配置bintray.properties和project.properties</font></h3><p><img src="http://upload-images.jianshu.io/upload_images/1814304-5e7a1d909f9dcbe2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/620/h/1240" alt="project目录结构"></p>
<h4 id="7-1-在imagelib-Module的根目录下创建bintrayUpload-gradle文件"><a href="#7-1-在imagelib-Module的根目录下创建bintrayUpload-gradle文件" class="headerlink" title="7.1 在imagelib Module的根目录下创建bintrayUpload.gradle文件"></a><font color="#C4573C" size="3" face="黑体">7.1 在imagelib Module的根目录下创建bintrayUpload.gradle文件</font></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'com.github.dcendents.android-maven'</span></div><div class="line">apply plugin: <span class="string">'com.jfrog.bintray'</span></div><div class="line"></div><div class="line"><span class="comment">//加载属性文件</span></div><div class="line">Properties properties = <span class="keyword">new</span> Properties()</div><div class="line">File localPropertiesFile = project.file(<span class="string">"bintray.properties"</span>);</div><div class="line"><span class="keyword">if</span> (localPropertiesFile.exists()) &#123;</div><div class="line">properties.load(localPropertiesFile.newDataInputStream())</div><div class="line">&#125;</div><div class="line">File projectPropertiesFile = project.file(<span class="string">"project.properties"</span>);</div><div class="line"><span class="keyword">if</span> (projectPropertiesFile.exists()) &#123;</div><div class="line">properties.load(projectPropertiesFile.newDataInputStream())</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//读取属性</span></div><div class="line">def projectRepositoryName = properties.getProperty(<span class="string">"project.repositoryName"</span>)</div><div class="line">def projectName = properties.getProperty(<span class="string">"project.name"</span>)</div><div class="line">def projectGroupId = properties.getProperty(<span class="string">"project.groupId"</span>)</div><div class="line">def projectArtifactId = properties.getProperty(<span class="string">"project.artifactId"</span>)</div><div class="line">def projectVersionName = android.defaultConfig.versionName</div><div class="line">def projectPackaging = properties.getProperty(<span class="string">"project.packaging"</span>)</div><div class="line">def projectSiteUrl = properties.getProperty(<span class="string">"project.siteUrl"</span>)</div><div class="line">def projectGitUrl = properties.getProperty(<span class="string">"project.gitUrl"</span>)</div><div class="line">def projectVersionDesc = properties.getProperty(<span class="string">"project.versiondesc"</span>)</div><div class="line">def projectVersionVcsTag = properties.getProperty(<span class="string">"project.versionvcstag"</span>)</div><div class="line"></div><div class="line">def developerId = properties.getProperty(<span class="string">"developer.id"</span>)</div><div class="line">def developerName = properties.getProperty(<span class="string">"developer.name"</span>)</div><div class="line">def developerEmail = properties.getProperty(<span class="string">"developer.email"</span>)</div><div class="line"></div><div class="line">def bintrayUser = properties.getProperty(<span class="string">"bintray.user"</span>)</div><div class="line">def bintrayApikey = properties.getProperty(<span class="string">"bintray.apiKey"</span>)</div><div class="line">def bintrayOrganizationId = properties.getProperty(<span class="string">"bintray.organizationId"</span>);</div><div class="line"></div><div class="line">def javadocName = properties.getProperty(<span class="string">"javadoc.name"</span>)</div><div class="line"></div><div class="line">group = projectGroupId</div><div class="line"></div><div class="line"><span class="comment">// 配置生成POM.xml文件的参数</span></div><div class="line">install &#123;</div><div class="line">repositories.mavenInstaller &#123;</div><div class="line">pom &#123;</div><div class="line">project &#123;</div><div class="line">name projectName</div><div class="line">groupId projectGroupId</div><div class="line">artifactId projectArtifactId</div><div class="line">version projectVersionName</div><div class="line">packaging projectPackaging</div><div class="line">url projectSiteUrl</div><div class="line">licenses &#123;</div><div class="line">license &#123;</div><div class="line">name <span class="string">'The Apache Software License, Version 2.0'</span></div><div class="line">url <span class="string">'http://www.apache.org/licenses/LICENSE-2.0.txt'</span></div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">developers &#123;</div><div class="line">developer &#123;</div><div class="line">id developerId</div><div class="line">name developerName</div><div class="line">email developerEmail</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">scm &#123;</div><div class="line">connection projectGitUrl</div><div class="line">developerConnection projectGitUrl</div><div class="line">url projectSiteUrl</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//生成sources.jar</span></div><div class="line"><span class="function">task <span class="title">sourcesJar</span><span class="params">(type: Jar)</span> </span>&#123;</div><div class="line">from android.sourceSets.main.java.srcDirs</div><div class="line">classifier = <span class="string">'sources'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">task <span class="title">javadoc</span><span class="params">(type: Javadoc)</span> </span>&#123;</div><div class="line">source = android.sourceSets.main.java.srcDirs</div><div class="line">classpath += project.files(android.getBootClasspath().join(File.pathSeparator))</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//生成javadoc.jar</span></div><div class="line"><span class="function">task <span class="title">javadocJar</span><span class="params">(type: Jar, dependsOn: javadoc)</span> </span>&#123;</div><div class="line">classifier = <span class="string">'javadoc'</span></div><div class="line">from javadoc.destinationDir</div><div class="line">&#125;</div><div class="line"></div><div class="line">artifacts &#123;</div><div class="line">archives javadocJar</div><div class="line">archives sourcesJar</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//javadoc的配置</span></div><div class="line">javadoc &#123;</div><div class="line">options &#123;</div><div class="line">encoding <span class="string">"UTF-8"</span></div><div class="line">charSet <span class="string">'UTF-8'</span></div><div class="line">author <span class="keyword">true</span></div><div class="line">version projectVersionName</div><div class="line">links <span class="string">"http://docs.oracle.com/javase/7/docs/api"</span></div><div class="line">title javadocName</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">bintray &#123;</div><div class="line">user = bintrayUser</div><div class="line">key = bintrayApikey</div><div class="line">configurations = [<span class="string">'archives'</span>]</div><div class="line">pkg &#123;</div><div class="line"><span class="comment">//userOrg = bintrayOrganizationId</span></div><div class="line">repo = projectRepositoryName</div><div class="line">name = projectName</div><div class="line">websiteUrl = projectSiteUrl</div><div class="line">vcsUrl = projectGitUrl</div><div class="line">licenses = [<span class="string">"Apache-2.0"</span>]</div><div class="line">publish = <span class="keyword">true</span></div><div class="line">version &#123;</div><div class="line">name = projectVersionName</div><div class="line">desc = projectVersionDesc</div><div class="line">vcsTag = projectVersionVcsTag</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="7-2-在imagelib-Module的build-gradle中应用上面创建的bintrayUpload-gradle文件，添加如下代码"><a href="#7-2-在imagelib-Module的build-gradle中应用上面创建的bintrayUpload-gradle文件，添加如下代码" class="headerlink" title="7.2 在imagelib Module的build.gradle中应用上面创建的bintrayUpload.gradle文件，添加如下代码"></a><font color="#C4573C" size="3" face="黑体">7.2 在imagelib Module的build.gradle中应用上面创建的bintrayUpload.gradle文件，添加如下代码</font></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apply from: <span class="string">"bintrayUpload.gradle"</span></div></pre></td></tr></table></figure>
<p>这里注意会遇到一个奇葩问题：</p>
<blockquote>
<ul>
<li>Where:<br>Script ‘/Users/sus/share/ImageLoaderUtil/imagelib/bintrayUpload.gradle’ line: 85<br>*What went wrong:<br>A problem occurred evaluating script.<br>android.compileSdkVersion is missing!</li>
</ul>
</blockquote>
<p>其实就是「 android.compileSdkVersion is missing!」 这个问题很奇葩，需要把<br>apply from: “bintrayUpload.gradle”这句话放在最下面，如下完整文件信息所示，我碰到这个问题的时候是直接把这句话放在apply plugin: ‘com.android.library’的后面了</p>
<p>完整文件信息：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'com.android.library'</span></div><div class="line"></div><div class="line">android &#123;</div><div class="line">compileSdkVersion <span class="number">24</span></div><div class="line">buildToolsVersion <span class="string">'25.0.0'</span></div><div class="line">defaultConfig &#123;</div><div class="line">minSdkVersion <span class="number">15</span></div><div class="line">targetSdkVersion <span class="number">25</span></div><div class="line">versionCode <span class="number">1</span></div><div class="line">versionName <span class="string">"1.0.0"</span></div><div class="line">testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></div><div class="line">&#125;</div><div class="line">buildTypes &#123;</div><div class="line">release &#123;</div><div class="line">minifyEnabled <span class="keyword">false</span></div><div class="line"><span class="function">proguardFiles <span class="title">getDefaultProguardFile</span><span class="params">(<span class="string">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro'</span></div><div class="line"><span class="function">&#125;</span></div><div class="line"><span class="function">&#125;</span></div><div class="line"><span class="function">&#125;</span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function">dependencies </span>&#123;</div><div class="line"><span class="function">compile <span class="title">fileTree</span><span class="params">(include: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</span></span></div><div class="line"><span class="function"><span class="title">androidTestCompile</span><span class="params">(<span class="string">'com.android.support.test.espresso:espresso-core:2.2.2'</span>, &#123;</span></span></div><div class="line"><span class="function"><span class="params">exclude group: <span class="string">'com.android.support'</span>, <span class="keyword">module</span>: <span class="string">'support-annotations'</span></span></span></div><div class="line"><span class="function"><span class="params">&#125;)</span></span></div><div class="line"><span class="function">compile 'com.android.support:appcompat-v7:24.2.1'</span></div><div class="line"><span class="function">testCompile 'junit:junit:4.12'</span></div><div class="line"><span class="function">compile 'com.android.support:support-v4:24.2.1'</span></div><div class="line"><span class="function">compile 'com.squareup.okhttp3:okhttp:3.4.2'</span></div><div class="line"><span class="function">compile 'com.github.bumptech.glide:glide:3.8.0-SNAPSHOT'</span></div><div class="line"><span class="function">compile 'com.github.bumptech.glide:okhttp-integration:1.5.0-SNAPSHOT'</span></div><div class="line"><span class="function">&#125;</span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function">apply from: "bintrayUpload.gradle"</span></div></pre></td></tr></table></figure>
<h4 id="7-3-在imagelib-Module的根目录下创建7-1要读取的配置文件"><a href="#7-3-在imagelib-Module的根目录下创建7-1要读取的配置文件" class="headerlink" title="7.3 在imagelib Module的根目录下创建7.1要读取的配置文件"></a><font color="#C4573C" size="3" face="黑体">7.3 在imagelib Module的根目录下创建7.1要读取的配置文件</font></h4><p>创建bintray.properties用于配置bintray和开发者信息</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#配置bintray账号相关信息</div><div class="line">#bintray用户名,不是登陆邮箱,是个人中心右上角显示的名字</div><div class="line">bintray.user=su2008shuai</div><div class="line">#bintray的ApiKey</div><div class="line">bintray.apiKey=xxxxxxxxxxxxx</div><div class="line"></div><div class="line">#bintray的Organization Id</div><div class="line">#bintray.organizationId=soulrelay</div><div class="line"></div><div class="line"></div><div class="line">#配置开发者信息</div><div class="line">#昵称</div><div class="line">developer.id=sushuai</div><div class="line">#姓名</div><div class="line">developer.name=sushuai</div><div class="line">#邮箱</div><div class="line">developer.email=su2008shuai<span class="meta">@gmail</span>.com</div></pre></td></tr></table></figure>
<p>创建project.properties用于配置项目信息</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">#project</div><div class="line">#仓库名称，就是在bintray官网建立的仓库的名称</div><div class="line">project.repositoryName=me</div><div class="line">#项目名称</div><div class="line">project.name=imagelib</div><div class="line">#项目组id</div><div class="line">project.groupId=com.sus.library</div><div class="line">#项目id,一般同project.name</div><div class="line">project.artifactId=imagelib</div><div class="line">#打包类型</div><div class="line">project.packaging=aar</div><div class="line">#项目官方网站地址</div><div class="line">project.siteUrl=https:<span class="comment">//github.com/soulrelay/ImageLoaderUtil</span></div><div class="line">#项目git地址</div><div class="line">project.gitUrl=https:<span class="comment">//github.com/soulrelay/ImageLoaderUtil</span></div><div class="line">#生成的javadoc名称</div><div class="line">javadoc.name=imagelib</div><div class="line"></div><div class="line">project.versiondesc = <span class="number">1.0</span>.0 normal</div><div class="line">project.versionvcstag = <span class="number">1.0</span>.0 tag</div></pre></td></tr></table></figure>
<h4 id="7-4-在Terminal窗口下输入如下指令上传到Bintray"><a href="#7-4-在Terminal窗口下输入如下指令上传到Bintray" class="headerlink" title="7.4 在Terminal窗口下输入如下指令上传到Bintray"></a><font color="#C4573C" size="3" face="黑体">7.4 在Terminal窗口下输入如下指令上传到Bintray</font></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gradlew install</div><div class="line">gradlew bintrayUpload</div></pre></td></tr></table></figure>
<p>期间可能会碰到如下问题</p>
<blockquote>
<ul>
<li>-bash: gradlew: command not found</li>
</ul>
</blockquote>
<p>解决方案：<br>gradlew is not in your global path. To execute the ‘clean’ task (or any task for that matter) using the gradle wrapper (gradlew) in your project directory in your terminal, specify the current directory with the ‘./‘:</p>
<blockquote>
<ul>
<li>./gradlew clean</li>
</ul>
</blockquote>
<p>Running mac, you also have to do “chmod 755 gradlew” on the file before to make it executable.</p>
<p>归结起来的话：</p>
<blockquote>
<ul>
<li>chmod 755 gradlew</li>
<li>./gradlew install</li>
<li>./gradlew bintrayUpload</li>
</ul>
</blockquote>
<p>若出现BUILD SUCCESSFUL则说明成功上传到了Bintray(有时候在执行./gradlew bintrayUpload的时候报错，但这时去bintray官网查看它也上传成功了，可能是缓存的问题，可以Invalidate Caches or clean restart一下试试)</p>
<h3 id="8、添加imagelib-Package到JCenter"><a href="#8、添加imagelib-Package到JCenter" class="headerlink" title="8、添加imagelib Package到JCenter"></a><font color="#C4573C" size="4" face="黑体">8、添加imagelib Package到JCenter</font></h3><p>进入到Bintray网站，找到刚才上传的项目，点击右下角的“Add To JCenter”按钮<br>然后填写项目描述点击“Send”提交审核即可（这里可以什么都不干，直接点击Send按钮），如果审核成功，它会给你发送一封站内信（同时你注册的邮箱优也会收到通知，1天之内肯定可以收到通知）通知你。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1814304-f862140619fdecaa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="审核成功通知"></p>
<p>访问这个链接：<a href="https://jcenter.bintray.com/com/sus/library/imagelib/1.0.0/" target="_blank" rel="external">https://jcenter.bintray.com/com/sus/library/imagelib/1.0.0/</a></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1814304-7a9ef92c5c879d3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="jcenter库链接"><br><img src="http://upload-images.jianshu.io/upload_images/1814304-da1865ced355d93c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="审核成功后的包结构"></p>
<h3 id="9、其它问题和说明"><a href="#9、其它问题和说明" class="headerlink" title="9、其它问题和说明"></a><font color="#C4573C" size="4" face="黑体">9、其它问题和说明</font></h3><blockquote>
<ul>
<li><p>Could not upload to ‘<a href="https://api.bintray.com/content/su2008shuai/me/ImageLoaderUtil/1.0/ImageLoaderUtil/imagelib/1.0/imagelib-1.0-javadoc.jar" target="_blank" rel="external">https://api.bintray.com/content/su2008shuai/me/ImageLoaderUtil/1.0/ImageLoaderUtil/imagelib/1.0/imagelib-1.0-javadoc.jar</a>‘: HTTP/1.1 400 Bad Request [message:Failed to resolve package name]</p>
</li>
<li><p>Error:Could not find ImageLoaderUtil.jar (com.sus.library:ImageLoaderUtil:1.0.1).<br>Searched in the following locations:<br><a href="https://jcenter.bintray.com/com/sus/library/ImageLoaderUtil/1.0.1/ImageLoaderUtil-1.0.1.jar" target="_blank" rel="external">https://jcenter.bintray.com/com/sus/library/ImageLoaderUtil/1.0.1/ImageLoaderUtil-1.0.1.jar</a></p>
</li>
</ul>
</blockquote>
<p>类似上面的问题的原因都是配置不对，bintray.properties和project.properties上的配置一定要和bintray线上的配置一致，否则会报各种找不到xx的问题</p>
<blockquote>
<ul>
<li>我的CSDN博客地址：<a href="http://blog.csdn.net/s003603u" target="_blank" rel="external">http://blog.csdn.net/s003603u</a></li>
<li>我的GitHub地址：<a href="https://github.com/soulrelay" target="_blank" rel="external">https://github.com/soulrelay</a></li>
<li>我的简书地址：<a href="http://www.jianshu.com/u/514ca03bbc17" target="_blank" rel="external">http://www.jianshu.com/u/514ca03bbc17</a></li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Jcenter </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[基于Activity、Fragment的生命周期避免MVP模式内存泄露的问题]]></title>
      <url>/2017/02/23/%E5%9F%BA%E4%BA%8EActivity%E3%80%81Fragment%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%81%BF%E5%85%8DMVP%E6%A8%A1%E5%BC%8F%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><font color="#C4573C" size="5" face="黑体">前言</font></h2><h3 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a><font color="#C4573C" size="4" face="黑体">回顾</font></h3><p>之前对MVP做过相关研究《<a href="http://blog.csdn.net/s003603u/article/details/51393218" target="_blank" rel="external">Android-architecture之MVC、MVP、MVVM、Data-Binding</a>》，也做过简单的分享《<a href="http://blog.csdn.net/s003603u/article/details/51485709" target="_blank" rel="external">Android Architecture（Is Activity God？）</a>》，在《<a href="http://blog.csdn.net/s003603u/article/details/52095855" target="_blank" rel="external">列表全家桶之刷新、加载更多、悬浮、左滑删除</a>》中也提到过希望对MVP相关做进一步的升级，抽取出了BasePresenter、BaseView、MVPBaseActivity、MVPBaseFragment，并通过使用弱引用预防可能发生的内存泄露问题 ，遂抽空着手整理一下</p>
<h3 id="框架模式、设计模式、架构的关系"><a href="#框架模式、设计模式、架构的关系" class="headerlink" title="框架模式、设计模式、架构的关系"></a><font color="#C4573C" size="4" face="黑体">框架模式、设计模式、架构的关系</font></h3><blockquote>
<ul>
<li>框架模式通常是对（面向相同行为代码的重用）代码的重用，是大智慧，用来对软件设计进行分工</li>
<li>设计模式通常是对（面向相同结构代码的重用）设计的重用，是小技巧，对具体问题提出解决方案，以提高代码复用率，降低耦合度</li>
<li>架构则介于框架和设计之间</li>
<li>我们所说的MVC、MVP、MVVM是一种框架模式而非设计模式</li>
<li><a href="http://blog.csdn.net/s003603u/article/details/53436089" target="_blank" rel="external">Android图片加载库的封装实战</a>即是通过设计模式完成对图片加载框架Glide进行封装的案例<h3 id="问题发现"><a href="#问题发现" class="headerlink" title="问题发现"></a><font color="#C4573C" size="4" face="黑体">问题发现</font></h3>MVP有很多优点，例如：</li>
<li>易于维护</li>
<li>易于测试</li>
<li>松耦合</li>
<li>复用性高</li>
<li>健壮稳定</li>
<li>易于扩展</li>
</ul>
</blockquote>
<p>但是，由于Presenter经常性地需要执行一些耗时操作，例如请求网络数据，而Presenter持有了Activity或者Fragment的强引用，如果在请求结束之前Activity或者Fragment被销毁了，那么由于网络请求还没有返回，导致Presenter一直持有Activity或者Fragment的对象，使得Activity或者Fragment对象无法回收，此时就发生了内存泄露</p>
<h2 id="MVP模式内存泄露问题的解决"><a href="#MVP模式内存泄露问题的解决" class="headerlink" title="MVP模式内存泄露问题的解决"></a><font color="#C4573C" size="5" face="黑体">MVP模式内存泄露问题的解决</font></h2><p>答案就是，通过弱引用和Activity、Fragment的生命周期来解决这个问题，首先建立一个Presenter对象，我们命名为BasePresenter，它是一个泛型类，泛型类型为View角色要实现的接口类型，具体代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Author:    SuS</span></div><div class="line"><span class="comment"> * Version    V1.0</span></div><div class="line"><span class="comment"> * Date:      17/02/23 </span></div><div class="line"><span class="comment"> * Description:通过弱引用和Activity以及Fragment的生命周期预防内存泄露的问题</span></div><div class="line"><span class="comment"> * Modification  History:</span></div><div class="line"><span class="comment"> * Date             Author              Version         Description</span></div><div class="line"><span class="comment"> * -----------------------------------------------------------------------------------</span></div><div class="line"><span class="comment"> * 17/02/23      SuS            1.0                    1.0</span></div><div class="line"><span class="comment"> * Why &amp; What is modified:</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BasePresenter</span>&lt;<span class="title">V</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> Reference&lt;V&gt; mViewRef;<span class="comment">//View 接口类型的弱引用</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attachView</span><span class="params">(V view)</span> </span>&#123;</div><div class="line">        mViewRef = <span class="keyword">new</span> WeakReference&lt;V&gt;(view);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> V <span class="title">getView</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mViewRef.get();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isViewAttached</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mViewRef != <span class="keyword">null</span> &amp;&amp; mViewRef.get() != <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">detachView</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mViewRef != <span class="keyword">null</span>) &#123;</div><div class="line">            mViewRef.clear();</div><div class="line">            mViewRef = <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//每个Presenter都会有初始化的工作，可以在这里统一处理</span></div><div class="line">    <span class="comment">// 当然也可以不处理，这里只是一个公用的示范方法</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>;</div><div class="line">    </div><div class="line">    <span class="comment">//这里也可以理解为一个公用的示范方法</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>除了start和update两个公用的示范方法，BasePresenter还有4个方法，分别与View建立关联、解除关联、判断是否与View建立了关联、获取View。View类型通过BasePresenter的泛型类型传递进来，Presenter对这个View持有弱引用。通常情况下这个View类型应该是实现了某个特定接口的Activity或者Fragment等类型。<br>创建一个MVPBaseActivity基类，通过这个基类的生命周期函数来控制它与Presenter的关系，相关代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">/**</span></div><div class="line"><span class="comment"> * Author:    SuS</span></div><div class="line"><span class="comment"> * Version    V1.0</span></div><div class="line"><span class="comment"> * Date:      17/02/23 </span></div><div class="line"><span class="comment"> * Description:MVP Activity基类</span></div><div class="line"><span class="comment"> * Modification  History:</span></div><div class="line"><span class="comment"> * Date             Author              Version         Description</span></div><div class="line"><span class="comment"> * -----------------------------------------------------------------------------------</span></div><div class="line"><span class="comment"> * 17/02/23      SuS            1.0                    1.0</span></div><div class="line"><span class="comment"> * Why &amp; What is modified:</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">MVPBaseActivity</span>&lt;<span class="title">V</span>,<span class="title">P</span> <span class="keyword">extends</span> <span class="title">BasePresenter</span>&lt;<span class="title">V</span>&gt;&gt; <span class="keyword">extends</span> <span class="title">BaseActivity</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"MVPBaseActivity"</span>;</div><div class="line">    <span class="keyword">protected</span> P mPresenter;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        mPresenter = createPresenter();<span class="comment">//创建Presenter</span></div><div class="line">        mPresenter.attachView((V)<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">        mPresenter.detachView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> P <span class="title">createPresenter</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>MVPBaseActivity含有两个泛型参数，第一个是View接口类型，第二个是Presenter的具体类型，通过泛型参数，使得一些通用的逻辑可以抽象到MVPBaseActivity类中。例如，在MVPBaseActivity的onCreate函数中，会通过createPresenter函数创建一个具体的Presenter，这个Presenter的类型就是BasePresenter<v>类型。构建Presenter之后调用attachView函数与Activity建立关联，而在onDestroy函数中，则会与Activity解除关联，从而避免内存泄露。<br>疑问：如果在onDestroy中解除了对Activity的引用，那么就没有必要再用弱引用了<br>解惑：并不是在任何情况下Activity的onDestroy都会被调用（其它原因导致Activity对象还在被引用，就不会回调onDestroy方法），一旦这种情况发生，弱引用也能够保证不会造成内存泄露。而通过MVPBaseActivity的封装维护Presenter与View关联关系的代码，使得子类可以避免重复的代码。<br>当然我们也可以把同样的思想用到更广阔的范围，例如可以为Fragment或者FragmentActivity建立类似这样的基类</v></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">/**</span></div><div class="line"><span class="comment"> * Author:    SuS</span></div><div class="line"><span class="comment"> * Version    V1.0</span></div><div class="line"><span class="comment"> * Date:      17/02/23 </span></div><div class="line"><span class="comment"> * Description:MVP Fragment基类</span></div><div class="line"><span class="comment"> * Modification  History:</span></div><div class="line"><span class="comment"> * Date             Author              Version         Description</span></div><div class="line"><span class="comment"> * -----------------------------------------------------------------------------------</span></div><div class="line"><span class="comment"> * 17/02/23      SuS            1.0                    1.0</span></div><div class="line"><span class="comment"> * Why &amp; What is modified:</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">MVPBaseFragment</span>&lt;<span class="title">V</span>,<span class="title">P</span> <span class="keyword">extends</span> <span class="title">BasePresenter</span>&lt;<span class="title">V</span>&gt;&gt; <span class="keyword">extends</span> <span class="title">BaseFragment</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"MVPBaseFragment"</span>;</div><div class="line">    <span class="keyword">protected</span> P mPresenter;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        mPresenter = createPresenter();<span class="comment">//创建Presenter</span></div><div class="line">        mPresenter.attachView((V)<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">        mPresenter.detachView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> P <span class="title">createPresenter</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>补充：其实我们在Activity中嵌套Fragment的情况下也可以通过如下方式将Presenter从Activity注入到Fragment</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BaseView</span>&lt;<span class="title">P</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//这个可以在Activity中包裹Fragment的时候应用，这时候继承MVPBaseActivity</span></div><div class="line">    <span class="comment">//Activity中初始化Presenter的实例 ，然后通过view调用该方法将Presenter塞给Fragment</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setPresenter</span><span class="params">(P presenter)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="定义自己的MVP框架"><a href="#定义自己的MVP框架" class="headerlink" title="定义自己的MVP框架"></a><font color="#C4573C" size="5" face="黑体">定义自己的MVP框架</font></h2><p>提供一个MVPContract ，封装MVP需要的所有基础接口，View和InteractionListener中使用的泛型为加载的数据类型，假设为MVPItem类型<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MVPContract</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Model</span> </span>&#123;</div><div class="line">        <span class="comment">//请求数据</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">loadContent</span><span class="params">(<span class="keyword">boolean</span> isLoadMore, String lastKey)</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">View</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line">        <span class="comment">//销毁加载页面</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">dismissLoadingViews</span><span class="params">()</span></span>;</div><div class="line">        <span class="comment">//展示加载页面</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">showLoadingViews</span><span class="params">()</span></span>;</div><div class="line">        <span class="comment">//展示异常页面</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">showErrorViews</span><span class="params">(<span class="keyword">int</span> errorCode, String msg)</span></span>;</div><div class="line">        <span class="comment">//刷新块数据的内容</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">refreshContentView</span><span class="params">(ArrayList&lt;T&gt; contentList)</span></span>;</div><div class="line">        <span class="comment">//加载更多块数据的内容</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">loadMoreContentView</span><span class="params">(ArrayList&lt;T&gt; contentList)</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Presenter</span> </span>&#123;</div><div class="line">        <span class="comment">//下拉刷新请求</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">requestRefresh</span><span class="params">()</span></span>;</div><div class="line">        <span class="comment">//加载更多数据</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">requestLoadMore</span><span class="params">()</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">InteractionListener</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line">        <span class="comment">//请求成功</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onInteractionSuccess</span><span class="params">(T t)</span></span>;</div><div class="line">        <span class="comment">//请求失败</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onInteractionFail</span><span class="params">(<span class="keyword">int</span> errorCode, String errorMsg)</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>实现自己的Presenter，命名为MVPPresenter</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MVPPresenter</span> <span class="keyword">extends</span> <span class="title">BasePresenter</span>&lt;<span class="title">MVPContract</span> .<span class="title">View</span>&lt;<span class="title">MVPItem</span>&gt;&gt; <span class="keyword">implements</span> <span class="title">MVPContract</span> .<span class="title">InteractionListener</span>&lt;<span class="title">ArrayList</span>&lt;<span class="title">MVPItem</span>&gt;&gt;,<span class="title">MVPContract</span> .<span class="title">Presenter</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MVPContract .View&lt;MVPItem&gt; mView;</div><div class="line">    <span class="keyword">private</span> MVPContract .Model mModel;</div><div class="line">    <span class="keyword">private</span> String param1;</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;MVPItem&gt; mList;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isLoading = <span class="keyword">false</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isLoadMore = <span class="keyword">false</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MVPPresenter</span> <span class="params">(String param, MVPContract .View&lt;MVPItem&gt; view)</span></span>&#123;</div><div class="line">        <span class="keyword">this</span>.param= param;</div><div class="line">        <span class="keyword">this</span>.mView = view;</div><div class="line">        mModel = <span class="keyword">new</span> MVPModel(param,<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInteractionSuccess</span><span class="params">(ArrayList&lt;MVPItem&gt; list)</span> </span>&#123;</div><div class="line">        isLoading = <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">if</span>(isLoadMore)&#123;</div><div class="line">            <span class="keyword">this</span>.mList.addAll(list);</div><div class="line">            mView.loadMoreContentView(list);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">this</span>.mList = list;</div><div class="line">            mView.refreshContentView(list);</div><div class="line">        &#125;</div><div class="line">        mView.dismissLoadingViews();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInteractionFail</span><span class="params">(<span class="keyword">int</span> errorCode, String errorMsg)</span> </span>&#123;</div><div class="line">        isLoading = <span class="keyword">false</span>;</div><div class="line">        mView.dismissLoadingViews();</div><div class="line">        mView.showErrorViews(errorCode, errorMsg);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">requestRefresh</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isLoading) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        isLoading = <span class="keyword">true</span>;</div><div class="line">        isLoadMore = <span class="keyword">false</span>;</div><div class="line">        mModel.loadContent(<span class="keyword">false</span>,<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">requestLoadMore</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isLoading) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (mList == <span class="keyword">null</span> || mList.size() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        isLoading = <span class="keyword">true</span>;</div><div class="line">        isLoadMore = <span class="keyword">true</span>;</div><div class="line">        mModel.loadContent(<span class="keyword">true</span>,mList.get(mList.size() - <span class="number">1</span>).getKey());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isLoading) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        isLoading = <span class="keyword">true</span>;</div><div class="line">        isLoadMore = <span class="keyword">false</span>;</div><div class="line">        mView.showLoadingViews();</div><div class="line">        mModel.loadContent(<span class="keyword">false</span>,<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>实现自己的Model，命名为MVPModel</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MVPModel</span> <span class="keyword">implements</span> <span class="title">MVPContract</span>.<span class="title">Model</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MVPContract.InteractionListener&lt;ArrayList&lt;MVPItem&gt;&gt; mListener;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> String param;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MVPModel</span><span class="params">(String param, MVPContract.InteractionListener&lt;ArrayList&lt;MVPItem&gt;&gt; listener)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.param = param;</div><div class="line">        <span class="keyword">this</span>.mListener = listener;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadContent</span><span class="params">(<span class="keyword">boolean</span> isLoadMore, String lastKey)</span> </span>&#123;</div><div class="line">        <span class="comment">//网络请求</span></div><div class="line">        <span class="comment">//数据处理</span></div><div class="line">        <span class="comment">//成功或者失败的回调</span></div><div class="line">        <span class="comment">//伪代码</span></div><div class="line">        <span class="keyword">if</span>（success）&#123;</div><div class="line">        mListener.onInteractionSuccess(<span class="string">"结果数据"</span>);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">        mListener.onInteractionFail(<span class="string">"错误码"</span>,<span class="string">"错误信息"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>例如MVPFragment 继承自MVPBaseFragment的实现如下：<br>此时，Presenter的创建以及与View建立关联等操作都被封装到MVPBaseFragment中，消除了子类重复代码的同时又避免了内存泄露的问题</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MVPFragment</span> <span class="keyword">extends</span> <span class="title">MVPBaseFragment</span>&lt;<span class="title">MVPContract</span>.<span class="title">View</span>&lt;<span class="title">MVPItem</span>&gt;, <span class="title">MVPPresenter</span>&gt; <span class="keyword">implements</span> <span class="title">MVPContract</span>.<span class="title">View</span>&lt;<span class="title">MVPItem</span>&gt;, <span class="title">MVPListView</span>.<span class="title">IListener</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = MVPFragment.class.getSimpleName();</div><div class="line"> </div><div class="line">    <span class="keyword">private</span> String param;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MVPFragment</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// Required empty public constructor</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MVPFragment <span class="title">newInstance</span><span class="params">(String param)</span> </span>&#123;</div><div class="line">        MVPFragment fragment = <span class="keyword">new</span> MVPFragment();</div><div class="line">        Bundle args = <span class="keyword">new</span> Bundle();</div><div class="line">        args.putString(<span class="string">"param"</span>, param);</div><div class="line">        fragment.setArguments(args);</div><div class="line">        <span class="keyword">return</span> fragment;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (getArguments() != <span class="keyword">null</span>) &#123;</div><div class="line">            param = getArguments().getString(<span class="string">"param"</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> MVPPresenter <span class="title">createPresenter</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MVPPresenter(param, <span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span></div><div class="line"><span class="function"><span class="params">                             Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="comment">// Inflate the layout for this fragment</span></div><div class="line">        View v = inflater.inflate(R.layout.fragment_mvp, container, <span class="keyword">false</span>);</div><div class="line">        initView(v);</div><div class="line">        <span class="keyword">return</span> v;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onActivityCreated</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onActivityCreated(savedInstanceState);</div><div class="line">        initData();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">   </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">        mPresenter.start();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dismissLoadingViews</span><span class="params">()</span> </span>&#123;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showLoadingViews</span><span class="params">()</span> </span>&#123;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showErrorViews</span><span class="params">(<span class="keyword">int</span> errorCode, String msg)</span> </span>&#123;</div><div class="line">     </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refreshContentView</span><span class="params">(ArrayList&lt;MVPItem&gt; contentList)</span> </span>&#123;</div><div class="line"> </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadMoreContentView</span><span class="params">(ArrayList&lt;MVPItem&gt; contentList)</span> </span>&#123;</div><div class="line">      </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</div><div class="line">        mPresenter.requestRefresh();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLoadMore</span><span class="params">()</span> </span>&#123;</div><div class="line">        mPresenter.requestLoadMore();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">   </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里的MVPListView.IListener如下：（仅做参考）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Implements this interface to get refresh/load more event.</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IListener</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLoadMore</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a><font color="#C4573C" size="5" face="黑体">小结</font></h2><blockquote>
<ul>
<li>从整体效果来说，MVP是开发过程中非常值得推荐的架构模式，它能够将各组件进行解耦，并且带来良好的可扩展性、可测试性、稳定性、可维护性，同时使得每个类型的职责相对单一、简单，避免了大量的“胖”的程序存在，例如数千行的Activity类。它有效的将业务逻辑、数据处理等工作从Activity等View元素中抽离出来，使得每个类尽可能简单，同时每个模块能够独立进行演化。它的思想也非常好地体现了面向对象的设计原则，即抽象、单一指责、最小化、低耦合。</li>
<li>当然，需要说明的是，你的项目并不一定非要用MVP/MVVM或者别的什么模式，模式都有它们自身应用的范围，利弊并存，但了解是必需的，不然你很难扩展自己的技能范围，高级的开发应该学会判断某个项目是否合适一些现成的模式，合理的使用模式会让你的应用框架更加清晰并且易于维护和扩展。</li>
</ul>
</blockquote>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a><font color="#C4573C" size="5" face="黑体">参考</font></h2><p>Android源码设计模式解析与实战</p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MVP </tag>
            
            <tag> 内存泄漏 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android基于ImageLoaderUtil封装库的图集实现]]></title>
      <url>/2017/02/17/Android%E5%9F%BA%E4%BA%8EImageLoaderUtil%E5%B0%81%E8%A3%85%E5%BA%93%E7%9A%84%E5%9B%BE%E9%9B%86%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><font color="#C4573C" size="5" face="黑体">前言</font></h2><p>之前写了一篇<a href="https://github.com/soulrelay/ImageLoaderUtil" target="_blank" rel="external">图片加载库的封装案例</a>，其中基于Glide完成了图片加载库<a href="https://github.com/soulrelay/ImageLoaderUtil" target="_blank" rel="external">ImageLoaderUtil</a>的封装，ImageLoaderUtil提供了诸多图片加载相关的接口：</p>
<blockquote>
<ul>
<li>正常加载图片</li>
<li>针对于GIF图片的特殊加载</li>
<li>加载图片的进度回调</li>
<li>清除缓存</li>
<li>获取缓存大小</li>
<li>图片本地保存</li>
<li>进度回调和本地保存均支持GIF</li>
</ul>
</blockquote>
<p>经过一段时间的检验，<a href="https://github.com/soulrelay/ImageLoaderUtil" target="_blank" rel="external">ImageLoaderUtil</a>在实际项目中表现良好，并且随着各种问题的暴露、跟进、解决，ImageLoaderUtil也逐渐趋于完善，能够满足项目中大部分关于图片加载的需求，之前的ImageLoaderUtil只是给出了一个很简单的案例来证明这套图片加载库可用，并没有很全面地呈现ImageLoaderUtil真正的价值，因此，我准备基于ImageLoaderUtil来实现一个图集功能，一个大部分APP中都会呈现的一个功能</p>
<h2 id="图集功能简介"><a href="#图集功能简介" class="headerlink" title="图集功能简介"></a><font color="#C4573C" size="5" face="黑体">图集功能简介</font></h2><p>一般图集的入口是这样的：（不过这不是重点，我们主要实现点击进去的图集详情页）</p>
<p><center><br><img src="http://img.blog.csdn.net/20170216153433383?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvczAwMzYwM3U=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br></center><br>点击进入是这样的：</p>
<p><center><br><img src="http://img.blog.csdn.net/20170215200838740?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvczAwMzYwM3U=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br></center><br>不要在意数据的不匹配，数据都是随便搞的，哈哈哈</p>
<p>言归正传！<br>来捋一下一个图集详情页应有的基本功能：</p>
<blockquote>
<ul>
<li>支持图片的手势滑动（ViewPager），多点触控放大缩小（PhotoView）</li>
<li>伴随图片切换的标题简介切换</li>
<li>图集的保存、分享（暂无）、评论（暂无）、收藏（暂无）</li>
<li>当前图集浏览完毕，支持切换到相关的图集推荐（目前很简陋）</li>
<li>图集推荐同时又是一个进入图集详情页的入口</li>
</ul>
</blockquote>
<h2 id="部分功能点分析"><a href="#部分功能点分析" class="headerlink" title="部分功能点分析"></a><font color="#C4573C" size="5" face="黑体">部分功能点分析</font></h2><h3 id="Gallery中的页面UI结构"><a href="#Gallery中的页面UI结构" class="headerlink" title="Gallery中的页面UI结构"></a><font color="#C4573C" size="4" face="黑体">Gallery中的页面UI结构</font></h3><p><center><br><img src="http://img.blog.csdn.net/20170216155931486?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvczAwMzYwM3U=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br></center><br><a href="https://github.com/soulrelay/Gallery" target="_blank" rel="external">参考源码，了解更多</a></p>
<h3 id="通过ImageLoaderUtil提供的loadImageWithProgress实现图片加载的进度回调"><a href="#通过ImageLoaderUtil提供的loadImageWithProgress实现图片加载的进度回调" class="headerlink" title="通过ImageLoaderUtil提供的loadImageWithProgress实现图片加载的进度回调"></a><font color="#C4573C" size="4" face="黑体">通过ImageLoaderUtil提供的loadImageWithProgress实现图片加载的进度回调</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showImage</span><span class="params">(<span class="keyword">final</span> View retryView, ImageItem item, <span class="keyword">final</span> PhotoView photoView, <span class="keyword">final</span> TextView progressStr, <span class="keyword">final</span> View progressLayout)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (item == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    String url = item.getImage();</div><div class="line">    ImageLoaderUtil.getInstance().loadImageWithProgress(url, photoView, <span class="keyword">new</span> ProgressLoadListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> bytesRead, <span class="keyword">int</span> contentLength)</span> </span>&#123;</div><div class="line">            progressStr.setText(bytesRead * <span class="number">100</span> / contentLength + <span class="string">"%"</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onException</span><span class="params">()</span> </span>&#123;</div><div class="line">            retryView.setVisibility(View.VISIBLE);</div><div class="line">            progressLayout.setVisibility(View.GONE);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResourceReady</span><span class="params">()</span> </span>&#123;</div><div class="line">            progressLayout.setVisibility(View.GONE);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>进度加载效果图如下：</p>
<p><center><br><img src="http://img.blog.csdn.net/20170215200859084?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvczAwMzYwM3U=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br></center></p>
<h3 id="通过ImageLoaderUtil提供的saveImage实现图片加载的本地保存"><a href="#通过ImageLoaderUtil提供的saveImage实现图片加载的本地保存" class="headerlink" title="通过ImageLoaderUtil提供的saveImage实现图片加载的本地保存"></a><font color="#C4573C" size="4" face="黑体">通过ImageLoaderUtil提供的saveImage实现图片加载的本地保存</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">saveImage</span><span class="params">()</span> </span>&#123;</div><div class="line">     <span class="keyword">if</span> (list == <span class="keyword">null</span>) &#123;</div><div class="line">         ToastUtils.toastCenter(getActivity(), R.string.save_image_fail);</div><div class="line">         <span class="keyword">return</span>;</div><div class="line">     &#125;</div><div class="line">     <span class="keyword">final</span> String url = list.get(viewPager.getCurrentItem()).getImage();</div><div class="line">     ThreadPoolUtils.execute(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">         <span class="meta">@Override</span></div><div class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">             ImageLoaderUtil.getInstance().saveImage(getActivity(), url,</div><div class="line">                     Environment.getExternalStorageDirectory().getAbsolutePath() + <span class="string">"/gallery"</span>,</div><div class="line">                     <span class="string">"pic"</span> + System.currentTimeMillis(), <span class="keyword">new</span> ImageSaveListener() &#123;</div><div class="line">                         <span class="meta">@Override</span></div><div class="line">                         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSaveSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">                             handler.obtainMessage(MSG_PIC_SAVE_SUCC).sendToTarget();</div><div class="line">                         &#125;</div><div class="line"></div><div class="line">                         <span class="meta">@Override</span></div><div class="line">                         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSaveFail</span><span class="params">()</span> </span>&#123;</div><div class="line">                             handler.obtainMessage(MSG_PIC_SAVE_FAIL).sendToTarget();</div><div class="line">                         &#125;</div><div class="line">                     &#125;);</div><div class="line">         &#125;</div><div class="line">     &#125;);</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>效果图如下：</p>
<p><center><br><img src="http://img.blog.csdn.net/20170215200919928?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvczAwMzYwM3U=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br></center></p>
<h3 id="Android-六点零-运行时权限处理"><a href="#Android-六点零-运行时权限处理" class="headerlink" title=" Android 六点零 运行时权限处理"></a><font color="#C4573C" size="4" face="黑体"> Android 六点零 运行时权限处理</font></h3><p>上面说到图片的保存功能，自然需要获得内存卡的读写权限，在API23+以上（targetSdkVersion设置到23或者以上时），不止要在AndroidManifest.xml里面添加权限<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_EXTERNAL_STORAGE"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> /&gt;</span></div></pre></td></tr></table></figure></p>
<p>还得在需要该权限的地方主动调用（详情请参考GalleryFragment，同时需要注意Fragment与Activity在申请运行时权限的不同，Activity中使用ActivityCompat.requestPermissions，而Fragment使用自己本身，如GalleryFragment.this.requestPermissions）<br>否则会报（java.io.FileNotFoundException:open failed: EACCES (Permission denied)）</p>
<p>上图即是在targetSdkVersion设置到23，在6.0系统的手机上运行，弹出授权dialog，只有允许才能保存图片成功，否在会报权限拒绝</p>
<p>参考代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Checks if the app has permission to write to device storage</span></div><div class="line"><span class="comment"> * &lt;p&gt;</span></div><div class="line"><span class="comment"> * If the app does not has permission then the user will be prompted to</span></div><div class="line"><span class="comment"> * grant permissions</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> activity</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">verifyStoragePermissions</span><span class="params">(Activity activity)</span> </span>&#123;</div><div class="line">    <span class="comment">// Check if we have write permission</span></div><div class="line">    <span class="keyword">int</span> permission = ActivityCompat.checkSelfPermission(activity,</div><div class="line">            Manifest.permission.WRITE_EXTERNAL_STORAGE);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (permission != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">        <span class="comment">// We don't have permission so prompt the user</span></div><div class="line">        GalleryFragment.<span class="keyword">this</span>.requestPermissions(PERMISSIONS_STORAGE,</div><div class="line">                REQUEST_EXTERNAL_STORAGE);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        saveImage();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, String[] permissions, <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (requestCode == REQUEST_EXTERNAL_STORAGE) &#123;</div><div class="line">        <span class="keyword">if</span> (grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">            saveImage();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">// Permission Denied</span></div><div class="line">            ToastUtils.toastCenter(getActivity(), R.string.permission_denied);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="ViewPaper嵌套相关处理"><a href="#ViewPaper嵌套相关处理" class="headerlink" title=" ViewPaper嵌套相关处理"></a><font color="#C4573C" size="4" face="黑体"> ViewPaper嵌套相关处理</font></h3><p>ViewPaper嵌套使用时，当里面的viewpaper未滑动到最后一个时，<br>外面的viewpaper禁止滑动<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyViewPager</span> <span class="keyword">extends</span> <span class="title">ViewPager</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> OnNeedScrollListener mOnNeedScrollListener;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyViewPager</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyViewPager</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnNeedScrollListener</span><span class="params">(OnNeedScrollListener listener)</span></span>&#123;</div><div class="line">        <span class="keyword">this</span>.mOnNeedScrollListener = listener;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(mOnNeedScrollListener != <span class="keyword">null</span> &amp;&amp; !mOnNeedScrollListener.needScroll())&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">super</span>.onTouchEvent(ev);</div><div class="line">            &#125; <span class="keyword">catch</span> (IllegalArgumentException ex) &#123;</div><div class="line">                ex.printStackTrace();</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onInterceptTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(mOnNeedScrollListener != <span class="keyword">null</span> &amp;&amp; !mOnNeedScrollListener.needScroll())&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">super</span>.onInterceptTouchEvent(event);</div><div class="line">            &#125; <span class="keyword">catch</span> (IllegalArgumentException ex) &#123;</div><div class="line">                ex.printStackTrace();</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnNeedScrollListener</span></span>&#123;</div><div class="line">        <span class="function"><span class="keyword">boolean</span> <span class="title">needScroll</span><span class="params">()</span></span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>只有当GalleryFragment中的ViewPager滑动到最后一个，且图集推荐中有内容，才会触发外层ViewPager的滑动<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">needScroll</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mCurrFragment <span class="keyword">instanceof</span> GalleryFragment) &#123;</div><div class="line">        <span class="keyword">if</span> (!((GalleryFragment) mCurrFragment).isLastItem()) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">//当图集滑动到最后一个时，如果图集推荐没有内容，则禁止滑动</span></div><div class="line">            GalleryRelatedFragment relatedFragment = (GalleryRelatedFragment) fragments.get(<span class="number">1</span>);</div><div class="line">            <span class="keyword">if</span> (!relatedFragment.isHasData()) &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="源码传送门"><a href="#源码传送门" class="headerlink" title="源码传送门"></a><font color="#C4573C" size="5" face="黑体">源码传送门</font></h2><p>github—–&gt;<a href="https://github.com/soulrelay/Gallery" target="_blank" rel="external">Gallery</a></p>
<p>csdn—–&gt;<a href="http://download.csdn.net/detail/s003603u/9756171" target="_blank" rel="external">Gallery</a></p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Glide </tag>
            
            <tag> 图片加载 </tag>
            
            <tag> Gallery </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android图片加载库的封装实战]]></title>
      <url>/2016/12/05/Android%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E5%BA%93%E7%9A%84%E5%B0%81%E8%A3%85%E5%AE%9E%E6%88%98/</url>
      <content type="html"><![CDATA[<h1 id="重磅更新-2017-02-16"><a href="#重磅更新-2017-02-16" class="headerlink" title="重磅更新 || 2017-02-16"></a><font color="#D91717" size="4" face="黑体">重磅更新 || 2017-02-16</font></h1><p>使用ImageLoaderUtil实现一个真正意义的图集功能，持续完善和更新中</p>
<p><a href="https://github.com/soulrelay/Gallery" target="_blank" rel="external">Gallery</a></p>
<p><a href="https://github.com/soulrelay/Gallery" target="_blank" rel="external">Gallery</a></p>
<p><a href="https://github.com/soulrelay/Gallery" target="_blank" rel="external">Gallery</a></p>
<p>重要的东西贴三遍！</p>
<h1 id="2017-05-09-优化圆形图片加载-更新demo"><a href="#2017-05-09-优化圆形图片加载-更新demo" class="headerlink" title="2017-05-09 || 优化圆形图片加载 更新demo"></a><font color="#D91717" size="4" face="黑体">2017-05-09 || 优化圆形图片加载 更新demo</font></h1><p><center><br><img src="http://img.blog.csdn.net/20170509120606770?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvczAwMzYwM3U=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></center></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><font color="#C4573C" size="5" face="黑体">前言</font></h2><blockquote>
<ul>
<li>图片加载是Android开发中最最基础的功能，为了降低开发周期和难度，我们经常会选用一些图片加载的开源库</li>
<li><a href="http://blog.csdn.net/s003603u/article/details/53257859" target="_blank" rel="external">选取第三方SDK需要谨慎</a></li>
<li><a href="http://blog.csdn.net/s003603u/article/details/53257965" target="_blank" rel="external">二次封装</a></li>
</ul>
</blockquote>
<font color="#ff9866" size="4" face="黑体">注意：所有改动更新会同步到</font><a href="https://github.com/soulrelay/ImageLoaderUtil" target="_blank" rel="external">GitHub</a><br><br><font color="#C4573C" size="5" face="黑体">主流图片加载库的对比</font><br>&gt;<em> 共同点
   </em> 使用简单：一句话实现图片的获取和显示<br>   <em> 可配置性高：可配置各种解码、缓存、下载机制
   </em> 自适应程度高：根据系统性能调整配置策略（如CPU核数决定最大并发数、内存决定内存缓存大小、网络状态变化调整最大并发数）<br>   <em> 多级缓存
   </em> 支持多种数据源<br>   <em> 支持多种Displayer
   </em> 兼容性好（可以配合okhttp等库进行使用）<br><font color="#ff9866" size="4" face="黑体">Android-Universal-Image-Loader</font><br>&gt;<em> 简介
      </em> 作者：nostra13<br>      <em> 面世时间：2011
      </em> star数（截止到发稿）：14509<br>      <em> <a href="https://github.com/nostra13/Android-Universal-Image-Loader" target="_blank" rel="external">https://github.com/nostra13/Android-Universal-Image-Loader</a><br>&gt;</em>   优点<br>       <em> 支持下载进度监听（ImageLoadingListener）
       </em> 可在View滚动中暂停图片加载（PauseOnScrollListener）<br>       <em> 默认实现多种内存缓存算法（最大最先删除，使用最少最先删除，最近最少使用，先进先删除，当然自己也可以配置缓存算法）<br>&gt;</em> 缺点<br>      <em> 从2015.11.27之后不再维护，项目中不建议使用<br><br><font color="#ff9866" size="4" face="黑体">Picasso</font><br>&gt;</em> 简介<br>      <em> 作者：JakeWharton（Square）
      </em> 面世时间：2012<br>      <em> star数（截止到发稿）：12076
      </em> <a href="https://github.com/square/picasso" target="_blank" rel="external">https://github.com/square/picasso</a><br>&gt;<em>   优点
       </em> 包较小（100k）<br>       <em> 取消不在视野范围内图片资源的加载
       </em> 使用最少的内存完成复杂的图片转换<br>       <em> 自动添加二级缓存
       </em> 任务调度优先级处理<br>       <em> 并发线程数根据网络类型调整
       </em> 图片的本地缓存交给同为Square出品的okhttp处理，控制图片的过期时间<br>&gt;<em> 缺点
      </em> 功能较为简单<br>      <em> 自身无实现“本地缓存”<br><br><font color="#ff9866" size="4" face="黑体">Glide</font><br>&gt;</em> 简介<br>      <em> 作者：Sam sjudd (Google)
      </em> 面世时间：2013<br>      <em> star数（截止到发稿）：12067
      </em> <a href="https://github.com/bumptech/glide" target="_blank" rel="external">https://github.com/bumptech/glide</a><br>&gt;<em>   优点
       </em> 多种图片格式的缓存，适用于更多的内容表现形式（如Gif、WebP、缩略图、Video）<br>       <em> 生命周期集成（根据Activity或者Fragment的生命周期管理图片加载请求）
       </em> 高效处理Bitmap（bitmap的复用和主动回收，减少系统回收压力）<br>       <em> 高效的缓存策略，灵活（Picasso只会缓存原始尺寸的图片，Glide缓存的是多种规格），加载速度快且内存开销小（默认Bitmap格式的不同，使得内存开销是Picasso的一半）<br>&gt;</em> 缺点<br>      <em> 方法较多较复杂，因为相当于在Picasso上的改进，包较大（500k），影响不是很大<br><br><font color="#ff9866" size="4" face="黑体">Fresco</font><br>&gt;</em> 简介<br>      <em> 作者：Facebook
      </em> 面世时间：2015<br>      <em> star数（截止到发稿）：11235
      </em> <a href="https://github.com/facebook/fresco" target="_blank" rel="external">https://github.com/facebook/fresco</a><br>&gt;<em>   优点
       </em> 最大的优势在于5.0以下(最低2.3)的bitmap加载。在5.0以下系统，Fresco将图片放到一个特别的内存区域(Ashmem区)<br>       <em> 大大减少OOM（在更底层的Native层对OOM进行处理，图片将不再占用App的内存）
       </em> 适用于需要高性能加载大量图片的场景<br>&gt;<em> 缺点
      </em> 包较大（2~3M）<br>      <em> 用法复杂
      </em> 底层涉及c++领域，阅读源码深入学习难度大<br><br><font color="#C4573C" size="5" face="黑体">按需选择图片加载库</font><br>&gt;<em> 图片加载需要支持Gif，之前项目中使用的Android-Universal-Image-Loader不支持Gif且Android-Universal-Image-Loader已经停止维护，遂决定替换图片加载库<br>&gt;</em> 分析完优缺点最终选择Glide的其它理由：<br>  <em> Glide是在Picasso的基础上进行改进的（支持Gif，内存开销小），虽然500k左右的包大小相对于Picasso较大，但是这个数量级的影响可以接受
  </em> 初衷是想一直维持图片的原始ImageView，而 Fresco需要在布局文件中将图片控件声明为库中自定义的SimpleDraweeView，如果切库还需要更改组件，代价会很高<br>  <em> Google推荐（亲儿子），在Google很多开源项目中广泛使用<br><br>&gt;</em>  但不可避免的是，Glide在使用的过程中依然存在着许多坑需要我们去填！<br><br><font color="#C4573C" size="5" face="黑体">如何更好地封装图片加载库</font><br><font color="#ff9866" size="4" face="黑体">为什么要封装？</font><br>先从现在面对的情形来看，项目中使用图片加载的地方都是使用的类似下面的语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ImageLoader.getInstance().displayImage(imageUrl, imageView，options);</div></pre></td></tr></table></figure><br><br>然而现在ImageLoader已经停止维护且已经无法满足项目需求，我们需要替换，这时你会发现如果换库的话，所有涉及到的地方都要修改（Android-Universal-Image-Loader已经和图片加载的业务逻辑严重地耦合在一起了），工作量可见一斑，这就是不封装在切库时面临的窘境！<br>那怎么解决那？<br>计算机史上有个万能的解决方案就是，如果原有层面解决不了问题，那么就请再加一层！<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Created by soulrelay on 2016/10/11 13:42.</span></div><div class="line"><span class="comment"> * Class Note:</span></div><div class="line"><span class="comment"> * use this class to load image,single instance</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImageLoaderUtil</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//图片默认加载类型 以后有可能有多种类型</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PIC_DEFAULT_TYPE = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="comment">//图片默认加载策略 以后有可能有多种图片加载策略</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOAD_STRATEGY_DEFAULT = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ImageLoaderUtil mInstance;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> BaseImageLoaderStrategy mStrategy;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ImageLoaderUtil</span><span class="params">()</span> </span>&#123;</div><div class="line">        mStrategy = <span class="keyword">new</span> GlideImageLoaderStrategy();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//单例模式，节省资源</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ImageLoaderUtil <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mInstance == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">synchronized</span> (ImageLoaderUtil.class) &#123;</div><div class="line">                <span class="keyword">if</span> (mInstance == <span class="keyword">null</span>) &#123;</div><div class="line">                    mInstance = <span class="keyword">new</span> ImageLoaderUtil();</div><div class="line">                    <span class="keyword">return</span> mInstance;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> mInstance;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 统一使用App context</span></div><div class="line"><span class="comment">     * 可能带来的问题：http://stackoverflow.com/questions/31964737/glide-image-loading-with-application-context</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> placeholder</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> imageView</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadImage</span><span class="params">(String url, <span class="keyword">int</span> placeholder, ImageView imageView)</span> </span>&#123;</div><div class="line">        mStrategy.loadImage(imageView.getContext(), url, placeholder, imageView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadGifImage</span><span class="params">(String url, <span class="keyword">int</span> placeholder, ImageView imageView)</span> </span>&#123;</div><div class="line">        mStrategy.loadGifImage(url, placeholder, imageView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadImage</span><span class="params">(String url, ImageView imageView)</span> </span>&#123;</div><div class="line">        mStrategy.loadImage(url, imageView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">     * 展示图片加载进度</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadImageWithProgress</span><span class="params">(String url, ImageView imageView, ProgressLoadListener listener)</span> </span>&#123;</div><div class="line">        mStrategy.loadImageWithProgress(url,imageView,listener);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadGifWithProgress</span><span class="params">(String url, ImageView imageView, ProgressLoadListener listener)</span> </span>&#123;</div><div class="line">        mStrategy.loadGifWithProgress(url,imageView,listener);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 策略模式的注入操作</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> strategy</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoadImgStrategy</span><span class="params">(BaseImageLoaderStrategy strategy)</span> </span>&#123;</div><div class="line">        mStrategy = strategy;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 清除图片磁盘缓存</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearImageDiskCache</span><span class="params">(<span class="keyword">final</span> Context context)</span> </span>&#123;</div><div class="line">        mStrategy.clearImageDiskCache(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 清除图片内存缓存</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearImageMemoryCache</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        mStrategy.clearImageMemoryCache(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 根据不同的内存状态，来响应不同的内存释放策略</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> level</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">trimMemory</span><span class="params">(Context context, <span class="keyword">int</span> level)</span> </span>&#123;</div><div class="line">        mStrategy.trimMemory(context, level);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 清除图片所有缓存</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearImageAllCache</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        clearImageDiskCache(context.getApplicationContext());</div><div class="line">        clearImageMemoryCache(context.getApplicationContext());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 获取缓存大小</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> CacheSize</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCacheSize</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mStrategy.getCacheSize(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>所有需要图片显示的地方使用如下方法进行调用：<br><br>&gt;<em> 入口唯一，所有图片加载都在ImageLoaderUtil这一个地方统一管理，使用了<a href="http://blog.csdn.net/s003603u/article/details/51982140" target="_blank" rel="external">单例模式</a>(据说单元素的枚举类型已经成为实现Singleton的最佳方法，你可以试试 )，<br>&gt;</em> 高效地封装减少了切库(只需要切换图片加载策略)带来的代价，默认采用GlideImageLoaderStrategy<br><br>总结：外部表现一致，内部灵活处理原则。<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 图片加载库的封装演示案例</span></div><div class="line"><span class="comment"> * Created by soulrelay on 2016/12/11 19:18</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@BindView</span>(R.id.iv_normal)</div><div class="line">    ImageView ivNormal;</div><div class="line">    <span class="meta">@BindView</span>(R.id.iv_gif)</div><div class="line">    ImageView ivGif;</div><div class="line">    <span class="meta">@BindView</span>(R.id.iv_gif1)</div><div class="line">    ImageView ivGif1;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        ButterKnife.bind(<span class="keyword">this</span>);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">        ImageLoaderUtil.getInstance().loadImage(<span class="string">"http://image.sports.baofeng.com/25a3dbb0c99c5e48e52e60941ed230be"</span>, R.drawable.bg_default_video_common_small, ivNormal);</div><div class="line">        ImageLoaderUtil.getInstance().loadImage(<span class="string">"http://image.sports.baofeng.com/19ce5d6ac3b4fff255196f200b1d3079"</span>, R.drawable.bg_default_video_common_small, ivGif);</div><div class="line">        ImageLoaderUtil.getInstance().loadGifImage(<span class="string">"http://image.sports.baofeng.com/19ce5d6ac3b4fff255196f200b1d3079"</span>, R.drawable.bg_default_video_common_small, ivGif1);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>效果图如下所示：<br><img src="http://img.blog.csdn.net/20161202172529289" alt="这里写图片描述"><br><font color="#ff9866" size="4" face="黑体">使用策略模式封装图片加载策略</font><br>如果你对策略模式不是很熟，请先参考<a href="http://blog.csdn.net/s003603u/article/details/52033391" target="_blank" rel="external">策略模式和状态模式</a><br>首先我们需要抽象出一个图片加载的基础接口BaseImageLoaderStrategy<br>基本功能主要包括<br>&gt;<em> 正常加载图片<br>&gt;</em> 针对于GIF图片的特殊加载<br>&gt;<em> 加载图片的进度回调<br>&gt;</em> 清除缓存<br>&gt;<em> 获取缓存大小等<br>&gt;</em> 其它特殊需求自己封装，最好不要破坏策略模式的整体结构<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Created by soulrelay on 2016/10/11.</span></div><div class="line"><span class="comment"> * Class Note:</span></div><div class="line"><span class="comment"> * abstract class/interface defined to load image</span></div><div class="line"><span class="comment"> * (Strategy Pattern used here)</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BaseImageLoaderStrategy</span> </span>&#123;</div><div class="line">    <span class="comment">//无占位图</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadImage</span><span class="params">(String url, ImageView imageView)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadImage</span><span class="params">(String url, <span class="keyword">int</span> placeholder, ImageView imageView)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadImage</span><span class="params">(Context context, String url, <span class="keyword">int</span> placeholder, ImageView imageView)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadGifImage</span><span class="params">(String url, <span class="keyword">int</span> placeholder, ImageView imageView)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadImageWithProgress</span><span class="params">(String url, ImageView imageView, ProgressLoadListener listener)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadGifWithProgress</span><span class="params">(String url, ImageView imageView, ProgressLoadListener listener)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">//清除硬盘缓存</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">clearImageDiskCache</span><span class="params">(<span class="keyword">final</span> Context context)</span></span>;</div><div class="line">    <span class="comment">//清除内存缓存</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">clearImageMemoryCache</span><span class="params">(Context context)</span></span>;</div><div class="line">    <span class="comment">//根据不同的内存状态，来响应不同的内存释放策略</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">trimMemory</span><span class="params">(Context context, <span class="keyword">int</span> level)</span></span>;</div><div class="line">    <span class="comment">//获取缓存大小</span></div><div class="line">    <span class="function">String <span class="title">getCacheSize</span><span class="params">(Context context)</span></span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>需要说明的一点是：<br>&gt;<em> 当封装的方法参数比较少时可以按照上述方式进行抽象，如果需要传递的参数较多，可以考虑使用建造者模式<a href="http://blog.csdn.net/s003603u/article/details/51967809" target="_blank" rel="external">建造者模式</a><br>&gt;</em> 例如封装一个ImageLoaderConfiguration，包含如下参数等等，将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示<br>  <em> type 图片加载的类型（大图、小图、中图）
  </em> url 需要解析的url<br>  <em> placeHolder 当没有成功加载的时候显示的图片
  </em> imgView ImageView的实例<br>  <em> loadStrategy 加载策略<br>&gt;</em> 当然这里我没有使用建造模式，考虑到目前使用的对象还不算复杂（传参比较简单），而且如果使用建造者模式有可能每次都要new一个新的对象实例，虽然开销可以接受<br>&gt;<em> 使用ImageLoaderUtil的过程中，注意内存泄露的问题（静态单例的生命周期与App一样，当一个单例的对象长久不用时，不会被垃圾收集机制回收）<br><br>然后基于每个图片库的各自方式来进行相应策略的封装，需要使用哪种策略，只需要通过ImageLoaderUtil的setLoadImgStrategy(BaseImageLoaderStrategy strategy)方法将相应的策略注入，相关类图关系如下所示：<br><br><img src="http://img.blog.csdn.net/20161204205952522" alt="这里写图片描述"><br><br>不同的图片加载库实现不同的图片加载策略<br>这里只是给出Glide的图片加载策略类GlideImageLoaderStrategy作为参考<br>&gt;</em> Glide依赖v4包，且需要配置android.permission.INTERNET和android.permission.WRITE_EXTERNAL_STORAGE（忘记配置权限，图片加载不出来，还看不出什么异常）<br>&gt;<em> 其中部分方法使用到了RequestListener的回调（这里是因为项目中的一些特殊需求而添加，如统计图片首次加载时长来测试一下图片cdn服务器的速度等）<br>&gt;</em> 在使用Glide的过程中遇到了一些问题，部分已经在注释中说明<br>&gt;<em> 之所以针对gif单独封装，是因为在使用的过程中发现，当在列表中加载大量gif会有OOM的问题，所以通过asGif进行特殊标明，即使这样也会出现类似问题，同时暂时通过skipMemoryCache(true)跳过内存缓存，之后有更好的办法会继续补充，各位看官如有良策，希望可以不吝赐教<br>&gt;</em> Glide本身不提供图片的progress回调，所以关于进度回调的解决方案参照的是<br><a href="https://github.com/shangmingchao/ProgressGlide" target="_blank" rel="external">ProgressGlide</a>，并做了些许改动集成到项目中<br>&gt;<em> 期间发现了一个很好的问题<a href="https://www.zhihu.com/question/37804956" target="_blank" rel="external">Android的App中线程池的使用，具体使用多少个线程池？</a>，其中一个答主的关于图片加载库线程池策略的分析很好，值得体会，简单摘录如下：
  </em> UIL的线程池处理非常简单粗暴，没有根据CPU数量来选择，也没有根据网络状况的变化进行调整;<br>  <em>  Picasso的线程池会根据网络状况的变化进行调整，在Wifi下线程数为4,而4G下线程数为3, 3G下为2， 2G下为1，默认状况为3；
 </em>  Glide加载缓存未命中的线程池会根据根据CPU的数量和Java虚拟机中可用的处理器数量来选择合适的线程数，但是最多不超过4;而加载缓存命中的图片的线程池默认大小为1.<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Created by soulrelay on 2016/10/11 13:48.</span></div><div class="line"><span class="comment"> * Class Note:</span></div><div class="line"><span class="comment"> * using &#123;<span class="doctag">@link</span> Glide&#125; to load image</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlideImageLoaderStrategy</span> <span class="keyword">implements</span> <span class="title">BaseImageLoaderStrategy</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadImage</span><span class="params">(String url, <span class="keyword">int</span> placeholder, ImageView imageView)</span> </span>&#123;</div><div class="line">        loadNormal(imageView.getContext(), url, placeholder, imageView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadImage</span><span class="params">(Context context, String url, <span class="keyword">int</span> placeholder, ImageView imageView)</span> </span>&#123;</div><div class="line">        loadNormal(context, url, placeholder, imageView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 无holder的gif加载</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> imageView</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadImage</span><span class="params">(String url, ImageView imageView)</span> </span>&#123;</div><div class="line">        Glide.with(imageView.getContext()).load(url).dontAnimate()</div><div class="line">                .placeholder(imageView.getDrawable())</div><div class="line">                .diskCacheStrategy(DiskCacheStrategy.SOURCE)</div><div class="line">                .into(imageView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadGifImage</span><span class="params">(String url, <span class="keyword">int</span> placeholder, ImageView imageView)</span> </span>&#123;</div><div class="line">        loadGif(imageView.getContext(), url, placeholder, imageView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadImageWithProgress</span><span class="params">(String url, <span class="keyword">final</span> ImageView imageView, <span class="keyword">final</span> ProgressLoadListener listener)</span> </span>&#123;</div><div class="line">        Glide.with(imageView.getContext()).using(<span class="keyword">new</span> ProgressModelLoader(<span class="keyword">new</span> ProgressUIListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> bytesRead, <span class="keyword">final</span> <span class="keyword">int</span> contentLength)</span> </span>&#123;</div><div class="line">                imageView.post(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                        listener.update(bytesRead, contentLength);</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line">        &#125;)).load(url).asBitmap().dontAnimate().</div><div class="line">                listener(<span class="keyword">new</span> RequestListener&lt;Object, Bitmap&gt;() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onException</span><span class="params">(Exception e, Object model, Target&lt;Bitmap&gt; target, <span class="keyword">boolean</span> isFirstResource)</span> </span>&#123;</div><div class="line">                        listener.onException();</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onResourceReady</span><span class="params">(Bitmap resource, Object model, Target&lt;Bitmap&gt; target, <span class="keyword">boolean</span> isFromMemoryCache, <span class="keyword">boolean</span> isFirstResource)</span> </span>&#123;</div><div class="line">                        listener.onResourceReady();</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;).into(imageView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadGifWithProgress</span><span class="params">(String url, <span class="keyword">final</span> ImageView imageView, <span class="keyword">final</span> ProgressLoadListener listener)</span> </span>&#123;</div><div class="line">        Glide.with(imageView.getContext()).using(<span class="keyword">new</span> ProgressModelLoader(<span class="keyword">new</span> ProgressUIListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> bytesRead, <span class="keyword">final</span> <span class="keyword">int</span> contentLength)</span> </span>&#123;</div><div class="line">                imageView.post(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                        listener.update(bytesRead, contentLength);</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line">        &#125;)).load(url).asGif().skipMemoryCache(<span class="keyword">true</span>).dontAnimate().</div><div class="line">                listener(<span class="keyword">new</span> RequestListener&lt;String, GifDrawable&gt;() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onException</span><span class="params">(Exception e, String model, Target&lt;GifDrawable&gt; target, <span class="keyword">boolean</span> isFirstResource)</span> </span>&#123;</div><div class="line">                        listener.onException();</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onResourceReady</span><span class="params">(GifDrawable resource, String model, Target&lt;GifDrawable&gt; target, <span class="keyword">boolean</span> isFromMemoryCache, <span class="keyword">boolean</span> isFirstResource)</span> </span>&#123;</div><div class="line">                        listener.onResourceReady();</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;).into(imageView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearImageDiskCache</span><span class="params">(<span class="keyword">final</span> Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (Looper.myLooper() == Looper.getMainLooper()) &#123;</div><div class="line">                <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                        Glide.get(context.getApplicationContext()).clearDiskCache();</div><div class="line">                    &#125;</div><div class="line">                &#125;).start();</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                Glide.get(context.getApplicationContext()).clearDiskCache();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearImageMemoryCache</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (Looper.myLooper() == Looper.getMainLooper()) &#123; <span class="comment">//只能在主线程执行</span></div><div class="line">                Glide.get(context.getApplicationContext()).clearMemory();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">trimMemory</span><span class="params">(Context context, <span class="keyword">int</span> level)</span> </span>&#123;</div><div class="line">        Glide.get(context).trimMemory(level);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCacheSize</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">return</span> CommonUtils.getFormatSize(CommonUtils.getFolderSize(Glide.getPhotoCacheDir(context.getApplicationContext())));</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * load image with Glide</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadNormal</span><span class="params">(<span class="keyword">final</span> Context ctx, <span class="keyword">final</span> String url, <span class="keyword">int</span> placeholder, ImageView imageView)</span> </span>&#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         *  为其添加缓存策略,其中缓存策略可以为:Source及None,None及为不缓存,Source缓存原型.如果为ALL和Result就不行.然后几个issue的连接:</span></div><div class="line"><span class="comment">         https://github.com/bumptech/glide/issues/513</span></div><div class="line"><span class="comment">         https://github.com/bumptech/glide/issues/281</span></div><div class="line"><span class="comment">         https://github.com/bumptech/glide/issues/600</span></div><div class="line"><span class="comment">         modified by xuqiang</span></div><div class="line"><span class="comment">         */</span></div><div class="line"></div><div class="line">        <span class="comment">//去掉动画 解决与CircleImageView冲突的问题 这个只是其中的一个解决方案</span></div><div class="line">        <span class="comment">//使用SOURCE 图片load结束再显示而不是先显示缩略图再显示最终的图片（导致图片大小不一致变化）</span></div><div class="line">        <span class="keyword">final</span> <span class="keyword">long</span> startTime = System.currentTimeMillis();</div><div class="line">        Glide.with(ctx).load(url).dontAnimate()</div><div class="line">                .placeholder(placeholder)</div><div class="line">                .diskCacheStrategy(DiskCacheStrategy.SOURCE).listener(<span class="keyword">new</span> RequestListener&lt;String, GlideDrawable&gt;() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onException</span><span class="params">(Exception e, String model, Target&lt;GlideDrawable&gt; target, <span class="keyword">boolean</span> isFirstResource)</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onResourceReady</span><span class="params">(GlideDrawable resource, String model, Target&lt;GlideDrawable&gt; target, <span class="keyword">boolean</span> isFromMemoryCache, <span class="keyword">boolean</span> isFirstResource)</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">                .into(imageView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * load image with Glide</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadGif</span><span class="params">(<span class="keyword">final</span> Context ctx, String url, <span class="keyword">int</span> placeholder, ImageView imageView)</span> </span>&#123;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">long</span> startTime = System.currentTimeMillis();</div><div class="line">        Glide.with(ctx).load(url).asGif().dontAnimate()</div><div class="line">                .placeholder(placeholder).skipMemoryCache(<span class="keyword">true</span>)</div><div class="line">                .diskCacheStrategy(DiskCacheStrategy.SOURCE).listener(<span class="keyword">new</span> RequestListener&lt;String, GifDrawable&gt;() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onException</span><span class="params">(Exception e, String model, Target&lt;GifDrawable&gt; target, <span class="keyword">boolean</span> isFirstResource)</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onResourceReady</span><span class="params">(GifDrawable resource, String model, Target&lt;GifDrawable&gt; target, <span class="keyword">boolean</span> isFromMemoryCache, <span class="keyword">boolean</span> isFirstResource)</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">                .into(imageView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><font color="#C4573C" size="5" face="黑体">源码地址</font><br><a href="https://github.com/soulrelay/ImageLoaderUtil" target="_blank" rel="external">ImageLoaderUtil</a><br><br><font color="#C4573C" size="5" face="黑体">部分参考链接</font><br><a href="http://www.jianshu.com/p/97994c9693f9" target="_blank" rel="external">http://www.jianshu.com/p/97994c9693f9</a><br><a href="https://www.zhihu.com/question/37804956" target="_blank" rel="external">https://www.zhihu.com/question/37804956</a><br><a href="http://www.jianshu.com/p/e26130a93289" target="_blank" rel="external">http://www.jianshu.com/p/e26130a93289</a><br><a href="http://www.cnblogs.com/android-blogs/p/5737611.html" target="_blank" rel="external">http://www.cnblogs.com/android-blogs/p/5737611.html</a><br><font color="#C4573C" size="5" face="黑体">更新</font>

<font color="#ff9866" size="4" face="黑体">2016-12-09 ll You must not call setTag() on a view Glide is targeting</font>



<p>项目中在使用Glide图片加载框架时遇到该错误<br>报错原因大致是因为Glide加载的iamgeView调用了setTag()方法导致的错误，因为Glide已经默认为ImageView设置的Tag</p>
<p>相关解决方案已经在Glide 3.6.0<a href="https://github.com/bumptech/glide/issues/370" target="_blank" rel="external">（issue #370）</a>被引进，实测可行<br>在AndroidManifest.xml中加入</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">application</span></span></div><div class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">".App"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>然后在App中添加如下代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate();</div><div class="line">        ViewTarget.setTagId(R.id.glide_tag);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在src/main/values/ids.xml添加如下代码：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">type</span>=<span class="string">"id"</span> <span class="attr">name</span>=<span class="string">"glide_tag"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></div></pre></td></tr></table></figure>
<p><font color="#ff9866" size="4" face="黑体">2016-12-13 ll  添加loadGifWithPrepareCall方法</font><br>2016.12.13</p>
<p>只想知道图片是否准备完毕（包括来自网络或者sdcard），区别于loadImageWithProgress和loadGifWithProgress的进度回调</p>
<p>Tips：使用Glide加载图片注意ImageView的Scaletype的设置<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BaseImageLoaderStrategy</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadGifWithPrepareCall</span><span class="params">(String url, ImageView imageView, SourceReadyListener listener)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlideImageLoaderStrategy</span> <span class="keyword">implements</span> <span class="title">BaseImageLoaderStrategy</span> </span>&#123;</div><div class="line"></div><div class="line">       <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadGifWithPrepareCall</span><span class="params">(String url, ImageView imageView, <span class="keyword">final</span> SourceReadyListener listener)</span> </span>&#123;</div><div class="line">        Glide.with(imageView.getContext()).load(url).asGif().dontAnimate()</div><div class="line">                .skipMemoryCache(<span class="keyword">true</span>)</div><div class="line">                .diskCacheStrategy(DiskCacheStrategy.SOURCE).</div><div class="line">                listener(<span class="keyword">new</span> RequestListener&lt;String, GifDrawable&gt;() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onException</span><span class="params">(Exception e, String model, Target&lt;GifDrawable&gt; target, <span class="keyword">boolean</span> isFirstResource)</span> </span>&#123;</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onResourceReady</span><span class="params">(GifDrawable resource, String model, Target&lt;GifDrawable&gt; target, <span class="keyword">boolean</span> isFromMemoryCache, <span class="keyword">boolean</span> isFirstResource)</span> </span>&#123;</div><div class="line">                        listener.onResourceReady(resource.getIntrinsicWidth(),resource.getIntrinsicHeight());</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;).into(imageView);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImageLoaderUtil</span> </span>&#123;</div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadGifWithPrepareCall</span><span class="params">(String url, ImageView imageView, SourceReadyListener listener)</span> </span>&#123;</div><div class="line">        mStrategy.loadGifWithPrepareCall(url,imageView,listener);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><font color="#ff9866" size="4" face="黑体">2016-12-26 ll  更新loadGifWithProgress方法  </font></p>
<p><font color="#ff9866" size="4" face="黑体">2017-1-10 ll  统一加载图片进度回调方法为loadImageWithProgress，弃用并删除loadGifWithProgress方法 </font><br>具体细节查看GitHub最新代码</p>
<p><font color="#ff9866" size="3" face="黑体">2016-12-26 ll  自定义GlideModule 并将 Glide与okhttp3集成 </font><br> 1.自定义一个GlideModule<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * DES：自定义一个GlideModule</span></div><div class="line"><span class="comment"> * &lt;p&gt;</span></div><div class="line"><span class="comment"> * GlideModule 是一个抽象方法，全局改变 Glide 行为的一个方式，</span></div><div class="line"><span class="comment"> * 通过全局GlideModule 配置Glide，用GlideBuilder设置选项，用Glide注册ModelLoader等。</span></div><div class="line"><span class="comment"> * &lt;p&gt;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyGlideModule</span> <span class="keyword">implements</span> <span class="title">GlideModule</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">applyOptions</span><span class="params">(Context context, GlideBuilder builder)</span> </span>&#123;</div><div class="line">        <span class="comment">// Apply options to the builder here.</span></div><div class="line">        <span class="keyword">int</span> maxMemory = (<span class="keyword">int</span>) Runtime.getRuntime().maxMemory();<span class="comment">//获取系统分配给应用的总内存大小</span></div><div class="line">        <span class="keyword">int</span> memoryCacheSize = maxMemory / <span class="number">8</span>;<span class="comment">//设置图片内存缓存占用八分之一</span></div><div class="line">        <span class="comment">//设置内存缓存大小</span></div><div class="line">        builder.setMemoryCache(<span class="keyword">new</span> LruResourceCache(memoryCacheSize));</div><div class="line">        builder.setBitmapPool(<span class="keyword">new</span> LruBitmapPool(memoryCacheSize));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerComponents</span><span class="params">(Context context, Glide glide)</span> </span>&#123;</div><div class="line">        <span class="comment">// register ModelLoaders here.</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>  2.AndroidManifest.xml注册<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">...</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- ... permissions --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">...</span>&gt;</span></div><div class="line">             <span class="comment">&lt;!-- 自定义GlideModule --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"com.baofeng.soulrelay.utils.imageloader.MyGlideModule"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:value</span>=<span class="string">"GlideModule"</span> /&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 自定义GlideModule --&gt;</span></div><div class="line">        <span class="comment">&lt;!-- ... activities and other components --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>3、 Glide与OkHttp3集成</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">compile <span class="string">'com.squareup.okhttp3:okhttp:3.4.2'</span></div><div class="line">compile <span class="string">'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'</span></div></pre></td></tr></table></figure>
<p>4、添加混淆处理</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">#--------------------Glide-----------------------#</div><div class="line">-keep <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> * <span class="keyword">implements</span> <span class="title">com</span>.<span class="title">bumptech</span>.<span class="title">glide</span>.<span class="title">module</span>.<span class="title">GlideModule</span></span></div><div class="line"><span class="class">-<span class="title">keep</span> <span class="title">public</span> <span class="title">enum</span> <span class="title">com</span>.<span class="title">bumptech</span>.<span class="title">glide</span>.<span class="title">load</span>.<span class="title">resource</span>.<span class="title">bitmap</span>.<span class="title">ImageHeaderParser</span>$** </span>&#123;</div><div class="line">  **[] $VALUES;</div><div class="line">  <span class="keyword">public</span> *;</div><div class="line">&#125;</div><div class="line"></div><div class="line">-keepnames <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">baofeng</span>.<span class="title">soulrelay</span>.<span class="title">utils</span>.<span class="title">imageloader</span>.<span class="title">MyGlideModule</span></span></div><div class="line"># or more generally:</div><div class="line">-keep <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> * <span class="keyword">implements</span> <span class="title">com</span>.<span class="title">bumptech</span>.<span class="title">glide</span>.<span class="title">module</span>.<span class="title">GlideModule</span></span></div><div class="line"><span class="class">-<span class="title">keep</span> <span class="title">class</span> <span class="title">com</span>.<span class="title">bumptech</span>.<span class="title">glide</span>.<span class="title">integration</span>.<span class="title">okhttp3</span>.<span class="title">OkHttpGlideModule</span></span></div><div class="line"><span class="class"></span></div><div class="line"><span class="class">#--------------------<span class="title">Glide</span>-----------------------#</span></div></pre></td></tr></table></figure>
<h3 id="2017-1-6-ll-GIF帧显示不完全-2017-1-10补充说明PS"><a href="#2017-1-6-ll-GIF帧显示不完全-2017-1-10补充说明PS" class="headerlink" title="2017-1-6 ll  GIF帧显示不完全 2017-1-10补充说明PS"></a><font color="#ff9866" size="4" face="黑体">2017-1-6 ll  GIF帧显示不完全 2017-1-10补充说明PS</font></h3><p>相关问题在<a href="https://github.com/bumptech/glide/issues/1649" target="_blank" rel="external">issues1649</a>中被提到和解决（目前glide:3.7.0的确存在这个问题）<br>具体解决方法是：<br> glide:3.8.0-SNAPSHOT修复了关于GIF展示的一些bug，实测可用<br> Gradle配置修改如下：</p>
<blockquote>
<ul>
<li><p>Add the snapshot repo to your list of repositories:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">repositories &#123;</div><div class="line">  jcenter()</div><div class="line">  maven &#123;</div><div class="line">    name <span class="string">'glide-snapshot'</span></div><div class="line">    url <span class="string">'http://oss.sonatype.org/content/repositories/snapshots'</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>And then change your dependencies to the v3 snapshot version:</p>
</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">  compile <span class="string">'com.github.bumptech.glide:glide:3.8.0-SNAPSHOT'</span></div><div class="line">  compile <span class="string">'com.github.bumptech.glide:okhttp-integration:1.5.0-SNAPSHOT'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><font color="#ff9866" size="3" face="黑体">2017-1-10补充说明PS</font><br>PS：提供一个gif图 帧提取工具<a href="http://download.csdn.net/detail/s003603u/9733492" target="_blank" rel="external">GIFFrame.exe</a><br>据我分析，那些没有显示完整的GIF图片，里面的部分帧图片本身就不是完整的，但是之前的Glide并没有做很好的处理，所以显示效果有缺陷，当然最新的3.8.0-SNAPSHOT解决了这个问题，但是在显示的时候仍有瑕疵（有一些重叠，当然我觉得这也跟gif图的做工有关）</p>
<h3 id="2017-1-6-ll-You-cannot-start-a-load-for-a-destroyed-activity"><a href="#2017-1-6-ll-You-cannot-start-a-load-for-a-destroyed-activity" class="headerlink" title="2017-1-6 ll  You cannot start a load for a destroyed activity"></a><font color="#ff9866" size="4" face="黑体">2017-1-6 ll  You cannot start a load for a destroyed activity</font></h3><p>完整异常信息：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">FATAL EXCEPTION: main</div><div class="line">Process: com.sports.baofeng, PID: <span class="number">9170</span></div><div class="line">java.lang.IllegalArgumentException: You cannot start a load <span class="keyword">for</span> a destroyed activity</div><div class="line">at com.bumptech.glide.d.k.b(SourceFile:<span class="number">134</span>)</div><div class="line">at com.bumptech.glide.d.k.a(SourceFile:<span class="number">102</span>)</div><div class="line">at com.bumptech.glide.d.k.a(SourceFile:<span class="number">87</span>)</div><div class="line">at com.bumptech.glide.i.c(SourceFile:<span class="number">629</span>)</div><div class="line">at com.storm.durian.common.utils.imageloader.b.a(SourceFile:<span class="number">1194</span>)</div><div class="line">at com.storm.durian.common.utils.imageloader.c.a(SourceFile:<span class="number">52</span>)</div><div class="line">at com.sports.baofeng.specialtopic.SpecialTopicDetailFixActivity.a(SourceFile:<span class="number">311</span>)</div><div class="line">at com.sports.baofeng.specialtopic.SpecialTopicDetailFixActivity.a(SourceFile:<span class="number">1347</span>)</div><div class="line">at com.sports.baofeng.specialtopic.d.a(SourceFile:<span class="number">1052</span>)</div><div class="line">at com.sports.baofeng.specialtopic.c$<span class="number">1</span>.a(SourceFile:<span class="number">1064</span>)</div><div class="line">at com.storm.durian.common.b.b$<span class="number">1</span>.onPostExecute(SourceFile:<span class="number">57</span>)</div><div class="line">at android.os.AsyncTask.finish(AsyncTask.java:<span class="number">651</span>)</div><div class="line">at android.os.AsyncTask.access$<span class="number">500</span>(AsyncTask.java:<span class="number">180</span>)</div><div class="line">at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:<span class="number">668</span>)</div><div class="line">at android.os.Handler.dispatchMessage(Handler.java:<span class="number">102</span>)</div><div class="line">at android.os.Looper.loop(Looper.java:<span class="number">158</span>)</div><div class="line">at android.app.ActivityThread.main(ActivityThread.java:<span class="number">7225</span>)</div><div class="line">at java.lang.reflect.Method.invoke(Native Method)</div><div class="line">at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:<span class="number">1230</span>)</div><div class="line">at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:<span class="number">1120</span>)</div></pre></td></tr></table></figure></p>
<p>以上异常出现的几率为random<br>初步分析原因是：进入页面然后又迅速退出，导致AsyncTask中的onPostExecute在调用Glide加载图片时出现如上异常，当然也跟对AsyncTask的管理有关<br>同样的问题参考<a href="https://github.com/bumptech/glide/issues/138" target="_blank" rel="external">issues138</a><br>简单的摘要：</p>
<blockquote>
<p>you fire an async task and then finish() in which case you just need to pass getApplicationContext instead of this when creating the callback/asynctask</p>
</blockquote>
<p>按照上面这个理解的话，如果是在AsyncTask中的onPostExecute执行时<br>调用Glide加载图片，context最好使用ApplicationContext</p>
<p>对<a href="https://github.com/soulrelay/ImageLoaderUtil" target="_blank" rel="external">ImageLoaderUtil</a>做如下更新，添加方法</p>
<blockquote>
<ul>
<li><p>BaseImageLoaderStrategy</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//这里的context指定为ApplicationContext</span></div><div class="line">   <span class="function"><span class="keyword">void</span> <span class="title">loadImageWithAppCxt</span><span class="params">(String url, ImageView imageView)</span></span>;</div></pre></td></tr></table></figure>
</li>
<li><p>GlideImageLoaderStrategy</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadImageWithAppCxt</span><span class="params">(String url, ImageView imageView)</span> </span>&#123;</div><div class="line">      Glide.with(imageView.getContext().getApplicationContext()).load(url).dontAnimate()</div><div class="line">              .placeholder(imageView.getDrawable())</div><div class="line">              .diskCacheStrategy(DiskCacheStrategy.SOURCE)</div><div class="line">              .into(imageView);</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>ImageLoaderUtil</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadImageWithAppCxt</span><span class="params">(String url, ImageView imageView)</span> </span>&#123;</div><div class="line">       mStrategy.loadImageWithAppCxt(url,imageView);</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<p><font color="#ff9866" size="4" face="黑体">2017-1-10 ll  简单说说图片适配的问题</font><br>过多的概念不赘述，可以先参考<a href="http://blog.csdn.net/zhaokaiqiang1992/article/details/45419023" target="_blank" rel="external">Android屏幕适配全攻略(最权威的官方适配指导)</a><br>这里主要描述一种现象，明白的话自然觉得很简单！</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/iv_gif"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:scaleType</span>=<span class="string">"centerInside"</span></span></div><div class="line"><span class="tag">             /&gt;</span></div></pre></td></tr></table></figure>
<p>假设现在要加载一张200px <em> 200px的GIF图片（图片基于1280 </em> 720），这张图片的宽高设置为wrap_content，如果在1920 <em> 1080分辨率的手机上显示，相对于1280 </em> 720（假设屏幕尺寸相同），在视觉效果上会显得小，这其实是Android系统基于手机像素密度的一种自适配，单一变化条件下，1920 <em> 1080分辨率的手机的像素密度是1280 </em> 720的1.5倍<br>假设如果系统的自适配让你觉得在高分辨率手机上显得图片过小（像素密度高，200个像素显示起来就比较挤），可以通过自己的计算来改变这种现象<br>ImageLoaderUtil提供如下加载成功回调的方法（并且会把图片的宽高告诉你）：这里有个参数设置，看需求来计算，粗略点可以只使用宽度比例来算，如下面的例子显示，参数为AppParams.screenWidth / 720，当然也可以获取屏幕密度，1920 <em> 1080的屏幕密度为3，1280 </em> 720的为2，所以参数可以设置为AppParams.density/2（在两种分辨率上看着视觉上一样）</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ImageLoaderUtil.getInstance().loadGifWithPrepareCall(url, mImageView, <span class="keyword">new</span> SourceReadyListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResourceReady</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</div><div class="line">                ViewGroup.LayoutParams params = mImageView.getLayoutParams();</div><div class="line">                  params.height = height * AppParams.screenWidth / <span class="number">720</span>;</div><div class="line">                params.width = width * AppParams.screenWidth / <span class="number">720</span>;</div><div class="line">                mImageView.setLayoutParams(params);</div><div class="line">                progressBar.setVisibility(View.GONE);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div></pre></td></tr></table></figure>
<p><font color="#ff9866" size="4" face="黑体">2017-1-10 ll  添加saveImage方法，实现图片的本地自定义保存功能</font><br>已同步到<a href="https://github.com/soulrelay/ImageLoaderUtil" target="_blank" rel="external">GitHub ImageLoaderUtil</a></p>
<blockquote>
<ul>
<li>ImageLoaderUtil相关接口：</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">/**</span></div><div class="line"><span class="comment">    * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">    * <span class="doctag">@param</span> url 图片url</span></div><div class="line"><span class="comment">    * <span class="doctag">@param</span> savePath 保存路径</span></div><div class="line"><span class="comment">    * <span class="doctag">@param</span> saveFileName 保存文件名</span></div><div class="line"><span class="comment">    * <span class="doctag">@param</span> listener 文件保存成功与否的监听器</span></div><div class="line"><span class="comment">    */</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveImage</span><span class="params">(Context context, String url, String savePath, String saveFileName, ImageSaveListener listener)</span> </span>&#123;</div><div class="line">       mStrategy.saveImage(context, url, savePath, saveFileName, listener);</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>在工作线程中调用示例如下：</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ImageLoaderUtil.getInstance().saveImage(getActivity(), url,</div><div class="line">                        Environment.getExternalStorageDirectory().getAbsolutePath() + <span class="string">"/bfsports"</span>,</div><div class="line">                        <span class="string">"bfsports"</span> + System.currentTimeMillis(), <span class="keyword">new</span> ImageSaveListener() &#123;</div><div class="line">                            <span class="meta">@Override</span></div><div class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSaveSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">                                handler.obtainMessage(MSG_PIC_SAVE_SUCC).sendToTarget();</div><div class="line">                            &#125;</div><div class="line"></div><div class="line">                            <span class="meta">@Override</span></div><div class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSaveFail</span><span class="params">()</span> </span>&#123;</div><div class="line">                                handler.obtainMessage(MSG_PIC_SAVE_FAIL).sendToTarget();</div><div class="line">                            &#125;</div><div class="line">                        &#125;);</div></pre></td></tr></table></figure>
<p><font color="#ff9866" size="4" face="黑体">2017-03-08 ll   Glide圆形图片加载封装</font></p>
<blockquote>
<ul>
<li>之前加载圆形图片，一般都是采用自定义的CircleImageview。后来开始使用Glide加载图片，期间遇到Glide和CircleImageview使用冲突的问题（如：有的图片第一次加载的时候只显示占位图，第二次才显示正常的图片，以及CircleImageview带来的崩溃问题），当时采用了一个牺牲动画效果的解决方案</li>
<li>既然已经全面使用Glide，那么就尽量基于Glide来完成加载圆形图片的方案</li>
<li>具体方案请参考<a href="http://blog.csdn.net/s003603u/article/details/60880308" target="_blank" rel="external">Glide圆形图片加载封装</a></li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Glide </tag>
            
            <tag> 图片加载库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[基于ToolBar等MD相关控件实现的沉浸式联动效果]]></title>
      <url>/2016/09/30/%E5%9F%BA%E4%BA%8EToolBar%E7%AD%89MD%E7%9B%B8%E5%85%B3%E6%8E%A7%E4%BB%B6%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%B2%89%E6%B5%B8%E5%BC%8F%E8%81%94%E5%8A%A8%E6%95%88%E6%9E%9C/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><font color="#C4573C" size="5" face="黑体">前言</font></h2><center><br><img src="http://img.blog.csdn.net/20160930134134324" alt="Drawing" width="250px"><br></center>

<p>提前下班了！！！</p>
<h2 id="综述"><a href="#综述" class="headerlink" title="综述"></a><font color="#C4573C" size="5" face="黑体">综述</font></h2><p>先来看一下最终的效果图</p>
<p><center><br><img src="http://img.blog.csdn.net/20160930112259772" alt="这里写图片描述"><br></center></p>
<h3 id="功能点"><a href="#功能点" class="headerlink" title="功能点"></a><font color="#C4573C" size="4" face="黑体">功能点</font></h3><font color="#d91717" size="3" face="黑体">1、CoordinatorLayout、AppBarLayout、CollapsingToolbarLayout、Toolbar、TabLayout、ViewPager联动使用</font>

<font color="#d91717" size="3" face="黑体">2、联动过程中保持沉浸式状态栏效果</font>

<font color="#d91717" size="3" face="黑体">3、ToolBar的基本使用，如自定义居中的title， Toolbar和Menu的结合使用，自定义溢出菜单样式</font><br>期间会涉及控件各种属性的设置，这个比较细碎<br><br>中间遇到一个问题，就是给menu，navigation等设置图片时，图片被拉伸（原因：把基于1280*720的切图放在了drawable文件夹下了，应该放在drawable-xhdpi）<br><br><font color="#d91717" size="3" face="黑体">4、解决应用启动白屏的问题</font>

<h2 id="各个突破"><a href="#各个突破" class="headerlink" title="各个突破"></a><font color="#C4573C" size="5" face="黑体">各个突破</font></h2><h3 id="设置ToolBar"><a href="#设置ToolBar" class="headerlink" title="设置ToolBar"></a><font color="#C4573C" size="4" face="黑体">设置ToolBar</font></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">private void setupToolbar() &#123;</div><div class="line">      toolbar = (Toolbar) findViewById(R.id.toolbar);</div><div class="line"></div><div class="line">      if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</div><div class="line">          int statusBarHeight = getStatusBarHeight(this);</div><div class="line">          FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) toolbar.getLayoutParams();</div><div class="line">          layoutParams.topMargin = statusBarHeight;</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      appbar = (AppBarLayout) findViewById(R.id.appbar);</div><div class="line"></div><div class="line">      setSupportActionBar(toolbar);</div><div class="line">      getSupportActionBar().setDisplayHomeAsUpEnabled(true); //使用系统自带的返回按钮</div><div class="line">      getSupportActionBar().setHomeAsUpIndicator(R.drawable.icon_back_normal);//替换系统自带的返回图标</div><div class="line"></div><div class="line">      toolbar.setOnMenuItemClickListener(onMenuItemClick);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  private Toolbar.OnMenuItemClickListener onMenuItemClick = new Toolbar.OnMenuItemClickListener() &#123;</div><div class="line">      @Override</div><div class="line">      public boolean onMenuItemClick(MenuItem menuItem) &#123;</div><div class="line">          switch (menuItem.getItemId()) &#123;</div><div class="line">              case R.id.action_share:</div><div class="line">                  Toast.makeText(MainActivity.this, &quot;收藏&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                  //其余的省略</div><div class="line">                  break;</div><div class="line">          &#125;</div><div class="line"></div><div class="line">          return true;</div><div class="line">      &#125;</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  private void setupCollapsingToolbar() &#123;</div><div class="line">      collapseToolbar = (CollapsingToolbarLayout) findViewById(</div><div class="line">              R.id.collapse_toolbar);</div><div class="line"></div><div class="line">      collapseToolbar.setTitleEnabled(false);</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<h3 id="OnOffsetChangedListener联动显示"><a href="#OnOffsetChangedListener联动显示" class="headerlink" title="OnOffsetChangedListener联动显示"></a><font color="#C4573C" size="4" face="黑体">OnOffsetChangedListener联动显示</font></h3><p>实现AppBarLayout的OnOffsetChangedListener</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">   @Override</div><div class="line">    protected void onResume() &#123;</div><div class="line">        super.onResume();</div><div class="line">        appbar.addOnOffsetChangedListener(this);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onPause() &#123;</div><div class="line">        super.onPause();</div><div class="line">        appbar.removeOnOffsetChangedListener(this);</div><div class="line">    &#125;</div><div class="line">@Override</div><div class="line">    public void onOffsetChanged(AppBarLayout appBarLayout, int verticalOffset) &#123;</div><div class="line">        if (lastPosition == verticalOffset) &#123;</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        lastPosition = verticalOffset;</div><div class="line">        if (verticalOffset == 0) &#123;</div><div class="line">            getSupportActionBar().setTitle(&quot;&quot;);</div><div class="line">            btnRight.setVisibility(View.GONE);</div><div class="line">            viewTitle.setPadding(0, 6, 0, 0);</div><div class="line">            toolbarTitle.setText(&quot;&quot;);</div><div class="line">            return;</div><div class="line">        &#125; else if (verticalOffset &lt; -dip2px(this, 110)) &#123;</div><div class="line">            viewTitle.setPadding(0, 0, 0, 0);</div><div class="line">            getSupportActionBar().setTitle(&quot;&quot;);</div><div class="line">            btnRight.setVisibility(View.GONE);</div><div class="line">            toolbarTitle.setText(&quot;&quot;);</div><div class="line">        &#125; else &#123;</div><div class="line">            viewTitle.setPadding(0, 6, 0, 0);</div><div class="line">            getSupportActionBar().setTitle(&quot;&quot;);</div><div class="line">            toolbarTitle.setText(&quot;军团再临&quot;);</div><div class="line">            btnRight.setVisibility(View.VISIBLE);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="自定义溢出菜单样式"><a href="#自定义溢出菜单样式" class="headerlink" title="自定义溢出菜单样式"></a><font color="#C4573C" size="4" face="黑体">自定义溢出菜单样式</font></h3><p>定义样式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;!--溢出菜单样式 --&gt;</div><div class="line">  &lt;style name=&quot;OverflowMenuStyle&quot; parent=&quot;@style/Widget.AppCompat.Light.PopupMenu.Overflow&quot;&gt;</div><div class="line">      &lt;item name=&quot;overlapAnchor&quot;&gt;false&lt;/item&gt;</div><div class="line">      &lt;item name=&quot;android:dropDownWidth&quot;&gt;wrap_content&lt;/item&gt;</div><div class="line">      &lt;item name=&quot;android:paddingRight&quot;&gt;5dp&lt;/item&gt;</div><div class="line">      &lt;item name=&quot;android:popupBackground&quot;&gt;@color/dcdcdc&lt;/item&gt;</div><div class="line">      &lt;item name=&quot;android:dropDownVerticalOffset&quot;&gt;4dip&lt;/item&gt;</div><div class="line">      &lt;item name=&quot;android:dropDownHorizontalOffset&quot;&gt;-4dip&lt;/item&gt;</div><div class="line">  &lt;/style&gt;</div></pre></td></tr></table></figure>
<p>添加到application theme中（前两个属性是为了解决启动白屏的问题）</p>
<p><a href="http://www.cnblogs.com/netcorner/p/4883069.html" target="_blank" rel="external">Android 启动白屏或者黑屏闪现解决</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;style name=&quot;Theme.AppStartLoadTranslucent&quot; parent=&quot;AppTheme&quot;&gt;</div><div class="line">      &lt;item name=&quot;android:windowIsTranslucent&quot;&gt;true&lt;/item&gt;</div><div class="line">      &lt;item name=&quot;android:windowNoTitle&quot;&gt;true&lt;/item&gt;</div><div class="line">      &lt;!--&lt;item name=&quot;actionOverflowMenuStyle&quot;&gt;@style/OverflowMenuStyle&lt;/item&gt;--&gt;</div><div class="line">  &lt;/style&gt;</div></pre></td></tr></table></figure></p>
<p>AndroidManifest.xml<br>设置theme为Theme.AppStartLoadTranslucent<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    package=&quot;com.soulrelay.coordinatorlayoutdemo&quot;&gt;</div><div class="line"></div><div class="line">    &lt;!-- To access Google+ APIs: --&gt;</div><div class="line">    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;application</div><div class="line">        android:allowBackup=&quot;true&quot;</div><div class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</div><div class="line">        android:label=&quot;@string/app_name&quot;</div><div class="line">        android:supportsRtl=&quot;true&quot;</div><div class="line">        android:theme=&quot;@style/Theme.AppStartLoadTranslucent&quot;&gt;</div><div class="line">        &lt;activity android:name=&quot;.MainActivity&quot;&gt;</div><div class="line">            &lt;intent-filter&gt;</div><div class="line">                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</div><div class="line"></div><div class="line">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</div><div class="line">            &lt;/intent-filter&gt;</div><div class="line">        &lt;/activity&gt;</div><div class="line">    &lt;/application&gt;</div><div class="line"></div><div class="line">&lt;/manifest&gt;</div></pre></td></tr></table></figure></p>
<p>其实，之前实现类似菜单功能采用popupwindow居多</p>
<h3 id="Toolbar中Menu中图标不显示的问题"><a href="#Toolbar中Menu中图标不显示的问题" class="headerlink" title="Toolbar中Menu中图标不显示的问题"></a><font color="#C4573C" size="4" face="黑体">Toolbar中Menu中图标不显示的问题</font></h3><p>在menu中，图标不会显示。<br>有的人是采用 onMenuOpened() 来写，可是仍然会有问题，对于AppCompactActivity你可以把onPrepareOptionsPanel（View v，Menu menu）代替 onMenuOpened() 。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">    protected boolean onPrepareOptionsPanel(View view, Menu menu) &#123;</div><div class="line">        if (menu != null) &#123;</div><div class="line">            if (menu.getClass() == MenuBuilder.class) &#123;</div><div class="line">                try &#123;</div><div class="line">                    Method m = menu.getClass().getDeclaredMethod(&quot;setOptionalIconsVisible&quot;, Boolean.TYPE);</div><div class="line">                    m.setAccessible(true);</div><div class="line">                    m.invoke(menu, true);</div><div class="line">                &#125; catch (Exception e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return super.onPrepareOptionsPanel(view, menu);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="toolbar-menu中app-showAsAction各个属性值作用"><a href="#toolbar-menu中app-showAsAction各个属性值作用" class="headerlink" title=" toolbar menu中app:showAsAction各个属性值作用"></a><font color="#C4573C" size="4" face="黑体"> toolbar menu中app:showAsAction各个属性值作用</font></h3><p>android:showAsAction。这个属性可接受的值有： </p>
<blockquote>
<ul>
<li>always：使菜单项一直显示在ToolBar上。 </li>
<li>ifRoom：如果有足够的空间，这个值会使菜单项显示在ToolBar上。 </li>
<li>never：使菜单项永远都不出现在ToolBar上,在…的子项中显示。 </li>
<li>withText：使菜单项和它的图标，菜单文本一起显示。<h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a><font color="#C4573C" size="5" face="黑体">源码下载</font></h2><a href="http://download.csdn.net/detail/s003603u/9643815" target="_blank" rel="external">联盟-暗影之月-传送门</a><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a><font color="#C4573C" size="5" face="黑体">参考链接</font></h2><a href="http://blog.csdn.net/zhangphil/article/details/48680055" target="_blank" rel="external">Android布局属性android:clipToPadding的UI设计妙用</a><br><a href="http://www.jianshu.com/p/79604c3ddcae" target="_blank" rel="external">Android开发：最详细的 Toolbar 开发实践总结</a><br><a href="http://www.daxueit.com/article/9354.html" target="_blank" rel="external">fitsSystemWindows</a></li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Material Design </tag>
            
            <tag> ToolBar </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[列表全家桶之刷新、加载更多、悬浮、左滑删除]]></title>
      <url>/2016/09/26/%E5%88%97%E8%A1%A8%E5%85%A8%E5%AE%B6%E6%A1%B6%E4%B9%8B%E5%88%B7%E6%96%B0%E3%80%81%E5%8A%A0%E8%BD%BD%E6%9B%B4%E5%A4%9A%E3%80%81%E6%82%AC%E6%B5%AE%E3%80%81%E5%B7%A6%E6%BB%91%E5%88%A0%E9%99%A4/</url>
      <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a><font color="#C4573C" size="5" face="黑体">需求</font></h2><h3 id="直播入口"><a href="#直播入口" class="headerlink" title="直播入口"></a><font color="#C4573C" size="4" face="黑体">直播入口</font></h3><p><img src="http://img.blog.csdn.net/20160924143742239" alt="这里写图片描述"></p>
<h3 id="功能点"><a href="#功能点" class="headerlink" title="功能点"></a><font color="#C4573C" size="4" face="黑体">功能点</font></h3><blockquote>
<ul>
<li>下拉刷新历史数据（这里自定义了refresh header，颠球，射门一气呵成~~）</li>
<li>上拉加载更多比赛</li>
<li>时间头悬浮</li>
<li>两个“今天”的定位锚点</li>
<li>内部相关的业务模型采用MVP构建<br>算是对<a href="http://blog.csdn.net/s003603u/article/details/51393218%20%E2%80%9CAndroid-architecture%E4%B9%8BMVC%E3%80%81MVP%E3%80%81MVVM%E3%80%81Data-Binding%E2%80%9D" target="_blank" rel="external">Android-architecture之MVC、MVP、MVVM、Data-Binding</a>中的MVP进一步的升级，抽取出了BasePresenter、BaseView、MVPBaseActivity、MVPBaseFragment，并通过使用弱引用预防可能发生的内存泄露问题<br>这里就不做赘述，后续有时间会整理一下（基于MVP模型构建多接口，多嵌套复杂数据类型，多视图的的多交互模型）</li>
</ul>
</blockquote>
<h3 id="我的预约"><a href="#我的预约" class="headerlink" title="我的预约"></a><font color="#C4573C" size="4" face="黑体">我的预约</font></h3><p><img src="http://img.blog.csdn.net/20160923114144939" alt="这里写图片描述"></p>
<h3 id="功能点-1"><a href="#功能点-1" class="headerlink" title="功能点"></a><font color="#C4573C" size="4" face="黑体">功能点</font></h3><blockquote>
<ul>
<li>相对于直播入口少了些相关交互功能</li>
<li>增加了左滑删除取消预约的功能</li>
<li>还有一个隐藏功能，就是多页面的比赛预约同步处理，这里采用<a href="http://blog.csdn.net/s003603u/article/details/51852019" target="_blank" rel="external">EventBus</a>事件总线库进行组件间的通信，然后根据通知做相应的业务处理<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a><font color="#C4573C" size="5" face="黑体">实战</font></h2><h3 id="控件原型搭建"><a href="#控件原型搭建" class="headerlink" title="控件原型搭建"></a><font color="#C4573C" size="4" face="黑体">控件原型搭建</font></h3>秉着不重复造轮子的宗旨，使用了如下著名的开源控件</li>
<li>悬浮头置顶功能<br>  StickyListHeaders<br>  An android library for section headers that stick to the top<br>  <a href="https://github.com/emilsjolander/StickyListHeaders" target="_blank" rel="external">https://github.com/emilsjolander/StickyListHeaders</a></li>
<li>下拉刷新 上拉加载更多<br> SwipeToLoadLayout<br> A reusable pull-to-refresh and pull-to-loadmore widget<br> <a href="https://github.com/Aspsine/SwipeToLoadLayout" target="_blank" rel="external">https://github.com/Aspsine/SwipeToLoadLayout</a></li>
<li>左滑删除见代码中的SwipeLayout，暂时找不到来源了</li>
</ul>
</blockquote>
<h3 id="最终的效果图"><a href="#最终的效果图" class="headerlink" title="最终的效果图"></a><font color="#C4573C" size="4" face="黑体">最终的效果图</font></h3><p>这个是在StickyListHeaders的基础上，整合了SwipeToLoadLayout和SwipeLayout</p>
<p>注意：  基于项目需求对部分开源控件做了相应的调整 </p>
<p><img src="http://img.blog.csdn.net/20160923115023333" alt="这里写图片描述"></p>
<h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a><font color="#C4573C" size="5" face="黑体">源码下载</font></h2><p><a href="http://download.csdn.net/detail/s003603u/9638917" target="_blank" rel="external">军团再临传送门</a></p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> StickyListHeaders </tag>
            
            <tag> SwipeToLoadLayout </tag>
            
            <tag> SwipeLayout </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android View的事件分发机制]]></title>
      <url>/2016/07/29/Android%20View%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91%E6%9C%BA%E5%88%B6/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><font color="#C4573C" size="5" face="黑体">前言</font></h2><p>关于Android View事件分发机制的一个小结，基于他人分析以及个人理解，方便自己记录以及回忆，使用了一些UML图和流程图对部分流程进行了细化，并加入了自己的理解，期间参考了几篇比较优秀（不同博文可能针对的Android代码版本不同，存在些许出入，但是大致逻辑一致）的关于事件分发机制的博文，已在参考链接中列出。</p>
<p>该篇博文更适合那些对事件分发机制基本了解但是仍然缺少一个系统化轮廓的朋友，只是一个总结而非教程，如果完全没有概念的话先从参考链接的博文开始看起！然后再回过头来看这个总结。</p>
<p>如果发现有什么问题，欢迎留言拍砖！</p>
<h2 id="Activity的事件分发逻辑"><a href="#Activity的事件分发逻辑" class="headerlink" title="Activity的事件分发逻辑"></a><font color="#C4573C" size="5" face="黑体">Activity的事件分发逻辑</font></h2><p><img src="http://img.blog.csdn.net/20160729153418582" alt="这里写图片描述"></p>
<blockquote>
<ul>
<li>点击事件最先传递给当前的Activity，由Activity的dispatchToucnEvent来进行事件分发，具体的工作由Activity内部的Window来完成，Window会将事件传递给DecorView，DecorView一般就是当前界面的底层容器（即setContentView所设置的View的父容器），通过Activity.getWindow.getDecorView()可以获得</li>
<li>如果所有的View的onTouchEvent都返回了false，那么Activity的onTouchEvent就会被调用</li>
<li>Window的唯一实现是PhoneWindow</li>
<li>PhoneWindow中通过DecorView往下分发事件</li>
<li>通过((ViewGroup))getWindow().getDecorView().findViewById(android.R.id.content).getChildAt(0)可以获得Activity所设置的View</li>
<li>DecorView继承自FrameLayout且是父View，所以最终事件会传递给View</li>
</ul>
</blockquote>
<p><img src="http://img.blog.csdn.net/20160729153432350" alt="这里写图片描述"></p>
<h2 id="ViewGroup以及View的事件分发逻辑"><a href="#ViewGroup以及View的事件分发逻辑" class="headerlink" title="ViewGroup以及View的事件分发逻辑"></a><font color="#C4573C" size="5" face="黑体">ViewGroup以及View的事件分发逻辑</font></h2><p><img src="http://img.blog.csdn.net/20160729153447488" alt="这里写图片描述"></p>
<blockquote>
<ul>
<li>ViewGroup中的onInterceptTouchEvent用来控制ViewGroup是否拦截事件向下传递</li>
<li>ViewGroup的主要的任务是找一个Target，并且用这个target传递事件</li>
<li>在Down并且不拦截的时候会多出一个寻找Target的过程，在这个过程中遍历子View，如果子View的dispatchTouch为true（如果这里返回false的话，那么接下来的action就不会继续传递，因为这时的target就为空，target为空的话，就会触发ViewGroup作为一个View的dispatchTouchEvent()方法），则这个子View就是当前ViewGroup的Target。找Target是处理Down事件时候特有的，其他事件不会触发找Target。</li>
<li>那么上面说的View的dispatchTouchEvent一定会返回true吗？默认情况下只要View是Clickable或者LongClickable，就一定消费事件，即返回true</li>
<li>找到Target之后如果再次调用ViewGroup的dispatchTouchEvent，就用经过一系列逻辑判断继续调用Target的dispatchTouchEvent</li>
<li>View的onTouchEvent中，当action == MotionEvent.ACTION_UP时，就会触发View的performClick()，所以onClick会晚于onTouch<br><img src="http://img.blog.csdn.net/20160729153503538" alt="这里写图片描述"></li>
</ul>
</blockquote>
<h2 id="总结和参考"><a href="#总结和参考" class="headerlink" title="总结和参考"></a><font color="#C4573C" size="5" face="黑体">总结和参考</font></h2><p>有没有发现，Android View的事件分发就是一个活生生的基于责任链模式实现的经典案例！</p>
<p>建议：可以根据自己不同的理解程度参考如下博文：<br><a href="http://www.nowamagic.net/academy/detail/50160216" target="_blank" rel="external">http://www.nowamagic.net/academy/detail/50160216</a><br><a href="http://blog.csdn.net/duo2005duo/article/details/51604119" target="_blank" rel="external">http://blog.csdn.net/duo2005duo/article/details/51604119</a><br><a href="http://blog.csdn.net/guolin_blog/article/details/9153747" target="_blank" rel="external">http://blog.csdn.net/guolin_blog/article/details/9153747</a><br>《Android开发艺术探索》</p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> View </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[EventBus 更少的代码 更好的体验]]></title>
      <url>/2016/07/07/EventBus%20%E6%9B%B4%E5%B0%91%E7%9A%84%E4%BB%A3%E7%A0%81%20%E6%9B%B4%E5%A5%BD%E7%9A%84%E4%BD%93%E9%AA%8C/</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a><font color="#C4573C" size="5" face="黑体">简介</font></h2><p>事件总线库，极大地简化了 Activities, Fragments, Threads, Services等各组件之间的通信。更少的代码，更好的体检<br><img src="http://img.blog.csdn.net/20160707183142111" alt="这里写图片描述"><br>EventBus的<a href="https://github.com/greenrobot/EventBus" target="_blank" rel="external">github地址</a></p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a><font color="#C4573C" size="5" face="黑体">优点</font></h2><blockquote>
<ul>
<li>简化组件之间的通信,对事件的发送者和接收者进行解耦;在Activity、Fragment、以及后台线程中运转良好;避免复杂和容易出错的依赖关系以及生命周期问题</li>
<li>使你的代码更简单，代码可读性更好</li>
<li>快</li>
<li>小（~ 50K的jar包）</li>
<li>在安装量多达100,000,000+ 的应用中实践，表现优异</li>
<li><p>独具特色的功能，如线程分发，优先级订阅等。<br><center><br><img src="http://img.blog.csdn.net/20160707180921690" alt="这里写图片描述"><br></center></p>
<h2 id="项目实战"><a href="#项目实战" class="headerlink" title="项目实战"></a><font color="#C4573C" size="5" face="黑体">项目实战</font></h2><p><center><br><img src="http://img.blog.csdn.net/20160707181044504" alt="这里写图片描述"><br></center></p>
<h3 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a><font color="#C4573C" size="4" face="黑体">需求背景</font></h3></li>
<li><p>登录、登出成功之后，涉及的相关页面要即时刷新登录数据，做出相应的调整</p>
</li>
<li>多个页面涉及比赛预约的状态，一个页面预约或者取消预约成功，要即时更新其它页面的比赛预约状态</li>
</ul>
</blockquote>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a><font color="#C4573C" size="4" face="黑体">步骤</font></h3><p><strong>部分概念相关的可以参考下面的相关介绍穿插理解</strong></p>
<p><strong>1、首先需要定义消息类，该类可以不继承任何基类也不需要实现任何接口</strong></p>
<p>这里以LoginEvent（用户登录退出场景） 和AppointmentStateEvent （见注释）为例来介绍<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OnEventBusInterface</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnLoginListener</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onEventMainThread</span><span class="params">(LoginEvent event)</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnTopicRefreshListener</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onEventMainThread</span><span class="params">(FollowTopicRefreshEvent event)</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnAppointmentStateListener</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onEventMainThread</span><span class="params">(AppointmentStateEvent event)</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginEvent</span> </span>&#123;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> hasLoginSucc;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">LoginEvent</span><span class="params">(<span class="keyword">boolean</span> loginSucc)</span> </span>&#123;</div><div class="line">            <span class="keyword">this</span>.hasLoginSucc = loginSucc;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasLoginSucc</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> hasLoginSucc;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHasLoginSucc</span><span class="params">(<span class="keyword">boolean</span> hasLoginSucc)</span> </span>&#123;</div><div class="line">            <span class="keyword">this</span>.hasLoginSucc = hasLoginSucc;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//FollowFragment刷新事件</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">FollowTopicRefreshEvent</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 在比赛详情页</span></div><div class="line"><span class="comment">     * 比赛未开始</span></div><div class="line"><span class="comment">     * 从首页直播tab进入或者从球队详情页的比赛tab进入</span></div><div class="line"><span class="comment">     * 在比赛未开始时，可以预约或者取消预约比赛，这个操作完成后再返回上面两个入口时，需要刷新预约状态</span></div><div class="line"><span class="comment">     * 这里传入了matchId作为参数,目前没有用到，因为现在比赛的预约与否是存在本地数据库的</span></div><div class="line"><span class="comment">     * 如果以后预约比赛的状态和用户绑定在服务器，那么可能就需要使用这个matchId了</span></div><div class="line"><span class="comment">     * &lt;p/&gt;</span></div><div class="line"><span class="comment">     * 需要3个有关注状态的地方  互相通知最新的关注状态</span></div><div class="line"><span class="comment">     * add By SuS</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">AppointmentStateEvent</span> </span>&#123;</div><div class="line">        <span class="keyword">private</span> String matchId;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AppointmentStateEvent</span><span class="params">(String matchId)</span> </span>&#123;</div><div class="line">            <span class="keyword">this</span>.matchId = matchId;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getMatchId</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> matchId;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMatchId</span><span class="params">(String matchId)</span> </span>&#123;</div><div class="line">            <span class="keyword">this</span>.matchId = matchId;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p><strong>2、在需要订阅事件的地方注册事件，在需要取消消息订阅的地方取消消息订阅</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseLoginActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivity</span> <span class="keyword">implements</span> <span class="title">OnEventBusInterface</span>.<span class="title">OnLoginListener</span></span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        EventBus.getDefault().register(<span class="keyword">this</span>);<span class="comment">//注册EventBus</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">        EventBus.getDefault().unregister(<span class="keyword">this</span>);<span class="comment">//反注册EventBus</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLoginSuccess</span><span class="params">()</span></span>&#123;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLoginOut</span><span class="params">()</span></span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEventMainThread</span><span class="params">(OnEventBusInterface.LoginEvent event)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(event.hasLoginSucc())&#123;</div><div class="line">            onLoginSuccess();</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            onLoginOut();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseLoginFragment</span> <span class="keyword">extends</span> <span class="title">BaseFragment</span> <span class="keyword">implements</span> <span class="title">IHandlerMessage</span>,<span class="title">OnEventBusInterface</span>.<span class="title">OnLoginListener</span>,<span class="title">OnEventBusInterface</span>.<span class="title">OnTopicRefreshListener</span>,<span class="title">OnEventBusInterface</span>.<span class="title">OnAppointmentStateListener</span> </span>&#123;</div><div class="line">    <span class="keyword">protected</span> Handler handler;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewCreated</span><span class="params">(View view, Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onViewCreated(view, savedInstanceState);</div><div class="line">        handler = <span class="keyword">new</span> CommonHandler&lt;BaseLoginFragment&gt;(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        EventBus.getDefault().register(<span class="keyword">this</span>);<span class="comment">//注册EventBus</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">        EventBus.getDefault().unregister(<span class="keyword">this</span>);<span class="comment">//反注册EventBus</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handlerCallback</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">showLoginWindow</span><span class="params">()</span></span>&#123;</div><div class="line">        StormUtils2.startLoginActivity(getActivity());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLoginSuccess</span><span class="params">()</span></span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLoginOut</span><span class="params">()</span></span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onFollowStatusChanged</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onAppointmentStateChanged</span><span class="params">(String matchId)</span></span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEventMainThread</span><span class="params">(OnEventBusInterface.LoginEvent event)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(event.hasLoginSucc())&#123;</div><div class="line">            onLoginSuccess();</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            onLoginOut();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEventMainThread</span><span class="params">(OnEventBusInterface.FollowTopicRefreshEvent event)</span></span>&#123;</div><div class="line">        onFollowStatusChanged();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEventMainThread</span><span class="params">(OnEventBusInterface.AppointmentStateEvent event)</span> </span>&#123;</div><div class="line">        onAppointmentStateChanged(event.getMatchId());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>3、分发事件，即触发消息</strong></p>
<p><img src="http://img.blog.csdn.net/20160707160724357" alt="这里写图片描述"></p>
<p>这里对BaseActivity小做解释：当通过插件化的方式加载暴风体育的时候，启动登录，通过startActivityForResult的方式调用主版的登录（之所以调用主版的登录是因为主应用和以插件化方式加载的暴风体育第三方登录（QQ，微信）的签名不同），当登录成功获取用户信息后，分发用户登录成功的消息</p>
<p>代码很简洁，具体相关操作如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">EventBus.getDefault().post(<span class="keyword">new</span> OnEventBusInterface.LoginEvent(<span class="keyword">true</span>));<span class="comment">//登录成功</span></div></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">EventBus.getDefault().post(<span class="keyword">new</span> OnEventBusInterface.LoginEvent(<span class="keyword">false</span>));<span class="comment">//登出成功</span></div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">EventBus.getDefault().post(<span class="keyword">new</span> OnEventBusInterface.AppointmentStateEvent(String.valueOf(matchInfo.getId())));<span class="comment">//比赛预约状态改变成功</span></div></pre></td></tr></table></figure>
<p><strong>4、消息处理</strong></p>
<p>这里使用了最普通的方式，没有使用EventBus的注解模式，而且考虑到收到消息后的处理都是在主线程中完成，所以采用了onEventMainThread方法。</p>
<p>继承了BaseLoginActivity的Activity的相关处理：<br><img src="http://img.blog.csdn.net/20160707160737444" alt="这里写图片描述"></p>
<p>继承了BaseLoginFragment的Fragment的相关处理：<br><img src="http://img.blog.csdn.net/20160707160752467" alt="这里写图片描述"></p>
<p><strong>注意</strong>：</p>
<blockquote>
<ul>
<li>在3.0之前，EventBus还没有使用注解方式。消息处理的方法也只能限定于onEvent、onEventMainThread、onEventBackgroundThread和onEventAsync，分别代表四种线程模型。而在3.0之后，消息处理的方法可以随便取名，但是需要添加一个注解@Subscribe，并且要指定线程模型（默认为PostThread）</li>
<li>事件处理函数的访问权限必须为public，否则会报异常</li>
</ul>
</blockquote>
<p><strong>相关代码如下：</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEventMainThread</span><span class="params">(OnEventBusInterface.LoginEvent event)</span></span>&#123;</div><div class="line">     <span class="keyword">if</span>(event.hasLoginSucc())&#123;</div><div class="line">         onLoginSuccess();</div><div class="line">     &#125;<span class="keyword">else</span>&#123;</div><div class="line">         onLoginOut();</div><div class="line">     &#125;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEventMainThread</span><span class="params">(OnEventBusInterface.FollowTopicRefreshEvent event)</span></span>&#123;</div><div class="line">     onFollowStatusChanged();</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> <span class="meta">@Override</span></div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEventMainThread</span><span class="params">(OnEventBusInterface.AppointmentStateEvent event)</span> </span>&#123;</div><div class="line">     onAppointmentStateChanged(event.getMatchId());</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<center><br><img src="http://img.blog.csdn.net/20160707182411945" alt="这里写图片描述"><br></center><br>## <font color="#C4573C" size="5" face="黑体">相关介绍</font><br><br>### <font color="#C4573C" size="4" face="黑体">线程模型</font><br><br>主要包括如下四种：<br><img src="http://img.blog.csdn.net/20160707165447744" alt="这里写图片描述"><br><br><strong>POSTING</strong>：<br>&gt; <em> 发布事件和接收事件在同一个线程<br>&gt; </em> 避免执行耗时操作，否则会阻塞事件的传递，有可能会引起ANR<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Subscribe</span>(threadMode = ThreadMode.POSTING) <span class="comment">// ThreadMode is optional here</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(MessageEvent event)</span> </span>&#123;</div><div class="line">    log(event.message);</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><strong>MAIN</strong>：<br>&gt; <em> 无论事件从哪里发布，接收事件都在UI线程<br>&gt; </em> 可以用来更新UI，但是不能处理耗时操作<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Called in Android UI's main thread</span></div><div class="line"><span class="meta">@Subscribe</span>(threadMode = ThreadMode.MAIN)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(MessageEvent event)</span> </span>&#123;</div><div class="line">    textField.setText(event.message);</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><strong>BACKGROUND</strong>:<br>&gt; <em> 发布事件来自主线程，接收事件则在新的线程中运行；发布事件来自子线 程，接收事件也在该子线程完成<br>&gt; </em> 禁止进行UI更新操作<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Called in the background thread</span></div><div class="line"><span class="meta">@Subscribe</span>(threadMode = ThreadMode.BACKGROUND)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(MessageEvent event)</span></span>&#123;</div><div class="line">    saveToDisk(event.message);</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><strong>ASYNC</strong>：<br>&gt; <em> 无论事件从哪里发布，接收事件都在新的子线程<br>&gt; </em> 禁止进行UI更新操作<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Called in a separate thread</span></div><div class="line"><span class="meta">@Subscribe</span>(threadMode = ThreadMode.ASYNC)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(MessageEvent event)</span></span>&#123;</div><div class="line">    backend.send(event.message);</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>### <font color="#C4573C" size="4" face="黑体">订阅优先级以及事件取消</font><br><br>尽管大多数情况下eventbus是不需要设置订阅的优先级和事件取消，但是某些特殊的场景可能派上用场。例如，当应用程序在前台，存在一个事件可能会触发一些用户界面相关逻辑，但当应用不可见时应该有不同的反应<br><br><strong>优先级设置</strong>:<br>&gt; <em> 默认优先级是0，同样的线程分发模式，优先级更高的订阅者会先收到消息<br>&gt; </em> 不同线程模式的订阅者接收消息的顺序呢不受优先级影响<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Subscribe</span>(priority = <span class="number">1</span>);</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEvent</span><span class="params">(MessageEvent event)</span> </span>&#123;</div><div class="line">…</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><strong>事件取消</strong>：<br>&gt; <em> 事件取消一般都是被高优先级的订阅者调用<br>&gt; </em> 严格限制在线程模式为POSTING的消息处理方法中<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Called in the same thread (default)</span></div><div class="line"><span class="meta">@Subscribe</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEvent</span><span class="params">(MessageEvent event)</span></span>&#123;</div><div class="line"><span class="comment">// Process the event</span></div><div class="line">…</div><div class="line"></div><div class="line">EventBus.getDefault().cancelEventDelivery(event) ;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>### <font color="#C4573C" size="4" face="黑体">粘性事件</font><br>EventBus还支持发送黏性事件，就是在发送事件之后再订阅该事件也能收到该事件，能够收到订阅之前发送的消息。但是它只能收到最新的一次消息。<br><br>这里不做过多介绍，详情请参考<a href="http://greenrobot.org/eventbus/documentation/configuration/sticky-events/" target="_blank" rel="external">Sticky Events</a><br><br>## <font color="#C4573C" size="5" face="黑体">总结</font><br><br>&gt;<em> 简单强大<br>&gt;</em> 实战验证<br>&gt;<em> 高性能<br>&gt;</em> 基于API的简洁注解<br>&gt;<em> 主线程和子线程均可进行消息发布和订阅<br>&gt;</em> 事件以及订阅者继承特点<br>&gt;* 零配置且可配<br><br>码字！排版！画图！终于写完了！<br><center><br><img src="http://img.blog.csdn.net/20160707180337042" alt="这里写图片描述"><br></center>

]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> EventBus </tag>
            
            <tag> 事件总线库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android自定义View之如期相遇的百分比进度条RatioProgress]]></title>
      <url>/2016/05/27/Android%E8%87%AA%E5%AE%9A%E4%B9%89View%E4%B9%8B%E5%A6%82%E6%9C%9F%E7%9B%B8%E9%81%87%E7%9A%84%E7%99%BE%E5%88%86%E6%AF%94%E8%BF%9B%E5%BA%A6%E6%9D%A1RatioProgress/</url>
      <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a><font color="#C4573C" size="5" face="黑体">需求</font></h1><h2 id="简述："><a href="#简述：" class="headerlink" title="简述："></a><font color="#C4573C" size="4" face="黑体">简述：</font></h2><p>当进入比赛详情页面时，根据点赞数按比例分割整个屏幕宽度，这个过程以动态进度条的形式显示</p>
<h2 id="实际应用效果图："><a href="#实际应用效果图：" class="headerlink" title="实际应用效果图："></a><font color="#C4573C" size="4" face="黑体">实际应用效果图：</font></h2><p><img src="http://img.blog.csdn.net/20160526182500108" alt="这里写图片描述"></p>
<h2 id="Demo效果图："><a href="#Demo效果图：" class="headerlink" title="Demo效果图："></a><font color="#C4573C" size="4" face="黑体">Demo效果图：</font></h2><p><img src="http://img.blog.csdn.net/20160526182514271" alt="这里写图片描述"></p>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a><font color="#C4573C" size="5" face="黑体">分析</font></h1><h2 id="自定义View的基本步骤："><a href="#自定义View的基本步骤：" class="headerlink" title="自定义View的基本步骤："></a><font color="#C4573C" size="4" face="黑体">自定义View的基本步骤：</font></h2><blockquote>
<ul>
<li>自定义View的属性</li>
<li>在View的构造方法中获得我们自定义的属性</li>
<li>重写onMesure（非必须，大部分情况下需要）</li>
<li>重写onDraw</li>
</ul>
</blockquote>
<h2 id="自定义View属性："><a href="#自定义View属性：" class="headerlink" title="自定义View属性："></a><font color="#C4573C" size="4" face="黑体">自定义View属性：</font></h2><p>在res/values/  下建立一个attrs.xml ，在里面定义我们的属性和声明我们的整个样式，format是指该属性的取值类型</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">declare-styleable</span> <span class="attr">name</span>=<span class="string">"RatioProgress"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"direction"</span> <span class="attr">format</span>=<span class="string">"string"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"progressColor"</span> <span class="attr">format</span>=<span class="string">"color"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">declare-styleable</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这里，我根据需求定义了两个属性，分别为direction和progressColor</p>
<blockquote>
<ul>
<li>direction表示进度条的绘制方向，有两个值，分别为“left”和“right”</li>
</ul>
</blockquote>
<p>“left”表示从左到右进行显示,“right”表示从右向左进行显示</p>
<blockquote>
<ul>
<li>progressColor表示进度条的显示背景颜色</li>
</ul>
</blockquote>
<h2 id="RatioProgress分析："><a href="#RatioProgress分析：" class="headerlink" title="RatioProgress分析："></a><font color="#C4573C" size="4" face="黑体">RatioProgress分析：</font></h2><blockquote>
<ul>
<li>通过rectBgBounds 绘制背景矩形，进行占位，背景设置为透明的</li>
<li><p>通过rectProgressBounds来绘制进度条，背景颜色就是通过如下自定义属性进行设置</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sus:progressColor="@color/CommonTextSelect"</div></pre></td></tr></table></figure>
</li>
<li><p>bgPaint和progressPaint分别为绘制背景和进度条的画笔</p>
</li>
</ul>
</blockquote>
<font color="#C4573C" size="3" face="黑体">关键步骤之重写onDraw方法</font><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">super</span>.onDraw(canvas);</div><div class="line">    canvas.drawRect(rectBgBounds, bgPaint);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (TextUtils.equals(direction, <span class="string">"left"</span>)) &#123;</div><div class="line">        rectProgressBounds = <span class="keyword">new</span> RectF(<span class="number">0</span>, <span class="number">0</span>, progress, layout_height);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (TextUtils.equals(direction, <span class="string">"right"</span>)) &#123;</div><div class="line">        rectProgressBounds = <span class="keyword">new</span> RectF(getWidth() - progress, <span class="number">0</span>, getWidth(), layout_height);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        rectProgressBounds = <span class="keyword">new</span> RectF(<span class="number">0</span>, <span class="number">0</span>, progress, layout_height);</div><div class="line">    &#125;</div><div class="line">    canvas.drawRect(rectProgressBounds, progressPaint);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>&gt;<em> 这里根据direction属性来设置rectProgressBounds 的坐标位置<br><br>&gt;</em> 我在 setupBounds()中通过start方法开启一个线程<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">final</span> Runnable r = <span class="keyword">new</span> Runnable() &#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        running = <span class="keyword">true</span>;</div><div class="line">        Log.e(<span class="string">"thread"</span>, <span class="string">"progress="</span>+progress);</div><div class="line">        Log.e(<span class="string">"thread"</span>, <span class="string">"getWidth()="</span>+getWidth());</div><div class="line">        <span class="keyword">while</span> (progress &lt; getWidth()) &#123;</div><div class="line">            incrementProgress();</div><div class="line">            <span class="comment">//progress++;</span></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Thread.sleep(sleepDelay);</div><div class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        running = <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">if</span> (!running) &#123;</div><div class="line">        progress = <span class="number">0</span>;</div><div class="line">        Thread s = <span class="keyword">new</span> Thread(r);</div><div class="line">        s.start();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>&gt;* 并通过incrementProgress方法递增progress，然后再通过handler发消息不断进行绘制<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">  * Increment the progress by 1 (of 100)</span></div><div class="line"><span class="comment">  */</span></div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">incrementProgress</span><span class="params">()</span> </span>&#123;</div><div class="line">     isProgress = <span class="keyword">true</span>;</div><div class="line">     progress++;</div><div class="line">     <span class="comment">/*</span></div><div class="line"><span class="comment">      * if (progress &gt; 200) progress = 100;</span></div><div class="line"><span class="comment">      */</span></div><div class="line">     spinHandler.sendEmptyMessage(<span class="number">0</span>);</div><div class="line"> &#125;</div></pre></td></tr></table></figure><br><br><font color="#C4573C" size="3" face="黑体">RatioProgress 完整代码：</font><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RatioProgress</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// Sizes (with defaults)</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> layout_height = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> layout_width = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="comment">// Colors (with defaults)</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> bgColor = Color.TRANSPARENT;</div><div class="line"></div><div class="line">    <span class="comment">//private int progressColor = 0xFF339933;</span></div><div class="line"></div><div class="line">    <span class="comment">// Paints</span></div><div class="line">    <span class="keyword">private</span> Paint progressPaint = <span class="keyword">new</span> Paint();</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Paint bgPaint = <span class="keyword">new</span> Paint();</div><div class="line"></div><div class="line">    <span class="comment">// Rectangles</span></div><div class="line">    <span class="keyword">private</span> RectF rectBgBounds = <span class="keyword">new</span> RectF();</div><div class="line"></div><div class="line">    <span class="keyword">private</span> RectF rectProgressBounds = <span class="keyword">new</span> RectF();</div><div class="line"></div><div class="line">    <span class="keyword">int</span> progress = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">boolean</span> isProgress;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String direction;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * progress的颜色</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> progressColor;</div><div class="line">    </div><div class="line">    <span class="keyword">boolean</span> running;</div><div class="line">    </div><div class="line">    <span class="keyword">int</span> sleepDelay;</div><div class="line">    </div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSleepDelay</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> sleepDelay;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSleepDelay</span><span class="params">(<span class="keyword">int</span> sleepDelay)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.sleepDelay = sleepDelay;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Handler spinHandler = <span class="keyword">new</span> Handler() &#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * This is the code that will increment the progress variable and so</span></div><div class="line"><span class="comment">         * spin the wheel</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">            invalidate();</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RatioProgress</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> attrs</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RatioProgress</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> attrs</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> defStyleAttr</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RatioProgress</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</div><div class="line">        </div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * 获得我们所定义的自定义样式属性</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        TypedArray a = context.getTheme().obtainStyledAttributes(attrs, R.styleable.RatioProgress, defStyleAttr, <span class="number">0</span>);</div><div class="line">        <span class="keyword">int</span> n = a.getIndexCount();</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">int</span> attr = a.getIndex(i);</div><div class="line">            <span class="keyword">switch</span> (attr)</div><div class="line">            &#123;</div><div class="line">            <span class="keyword">case</span> R.styleable.RatioProgress_direction:</div><div class="line">                direction = a.getString(attr);</div><div class="line">                Log.e(<span class="string">"direction-----------------"</span>, direction);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> R.styleable.RatioProgress_progressColor:</div><div class="line">                progressColor = a.getColor(attr, Color.TRANSPARENT);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        a.recycle();</div><div class="line">        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</div><div class="line">        <span class="comment">// Share the dimensions</span></div><div class="line">        layout_width = w;</div><div class="line">        Log.i(<span class="string">"layout_width"</span>, layout_width + <span class="string">""</span>);</div><div class="line"></div><div class="line">        layout_height = h;</div><div class="line">        Log.i(<span class="string">"layout_height"</span>, layout_height + <span class="string">""</span>);</div><div class="line">        setupBounds();</div><div class="line">        setupPaints();</div><div class="line">        invalidate();</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setupPaints</span><span class="params">()</span> </span>&#123;</div><div class="line">        bgPaint.setColor(bgColor);</div><div class="line">        bgPaint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line">        bgPaint.setStyle(Style.FILL);</div><div class="line"></div><div class="line">        progressPaint.setColor(progressColor);</div><div class="line">        progressPaint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line">        progressPaint.setStyle(Style.FILL);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setupBounds</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> width = getWidth(); <span class="comment">// this.getLayoutParams().width;</span></div><div class="line">        Log.i(<span class="string">"width"</span>, width + <span class="string">""</span>);</div><div class="line">        <span class="keyword">int</span> height = getHeight(); <span class="comment">// this.getLayoutParams().height;</span></div><div class="line">        Log.i(<span class="string">"height"</span>, height + <span class="string">""</span>);</div><div class="line">        rectBgBounds = <span class="keyword">new</span> RectF(<span class="number">0</span>, <span class="number">0</span>, width, height);</div><div class="line">        start();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDraw(canvas);</div><div class="line"></div><div class="line">        canvas.drawRect(rectBgBounds, bgPaint);</div><div class="line"></div><div class="line">        Log.i(<span class="string">"progress"</span>, progress + <span class="string">""</span>);</div><div class="line">        <span class="keyword">if</span> (TextUtils.equals(direction, <span class="string">"left"</span>)) &#123;</div><div class="line">            rectProgressBounds = <span class="keyword">new</span> RectF(<span class="number">0</span>, <span class="number">0</span>, progress, layout_height);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (TextUtils.equals(direction, <span class="string">"right"</span>)) &#123;</div><div class="line">            rectProgressBounds = <span class="keyword">new</span> RectF(getWidth() - progress, <span class="number">0</span>, getWidth(), layout_height);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            rectProgressBounds = <span class="keyword">new</span> RectF(<span class="number">0</span>, <span class="number">0</span>, progress, layout_height);</div><div class="line">        &#125;</div><div class="line">        canvas.drawRect(rectProgressBounds, progressPaint);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * Increment the progress by 1 (of 100)</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">incrementProgress</span><span class="params">()</span> </span>&#123;</div><div class="line">        isProgress = <span class="keyword">true</span>;</div><div class="line">        progress++;</div><div class="line">        <span class="comment">/*</span></div><div class="line"><span class="comment">         * if (progress &gt; 200) progress = 100;</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        spinHandler.sendEmptyMessage(<span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * Increment the progress by 1 (of 100)</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unIncrementProgress</span><span class="params">()</span> </span>&#123;</div><div class="line">        isProgress = <span class="keyword">true</span>;</div><div class="line">        progress--;</div><div class="line">        <span class="comment">/*</span></div><div class="line"><span class="comment">         * if (progress &lt; 1) progress = 100;</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        spinHandler.sendEmptyMessage(<span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * Set the progress to a specific value</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProgress</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</div><div class="line"></div><div class="line">        progress = i;</div><div class="line">        spinHandler.sendEmptyMessage(<span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">final</span> Runnable r = <span class="keyword">new</span> Runnable() &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            running = <span class="keyword">true</span>;</div><div class="line">            Log.e(<span class="string">"thread"</span>, <span class="string">"progress="</span>+progress);</div><div class="line">            Log.e(<span class="string">"thread"</span>, <span class="string">"getWidth()="</span>+getWidth());</div><div class="line">            <span class="keyword">while</span> (progress &lt; getWidth()) &#123;</div><div class="line">                incrementProgress();</div><div class="line">                <span class="comment">//progress++;</span></div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    Thread.sleep(sleepDelay);</div><div class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            running = <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">if</span> (!running) &#123;</div><div class="line">            progress = <span class="number">0</span>;</div><div class="line">            Thread s = <span class="keyword">new</span> Thread(r);</div><div class="line">            s.start();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>## <font color="#C4573C" size="4" face="黑体">布局以及代码中的使用：</font><br>### <font color="#C4573C" size="4" face="黑体">布局文件</font>

<p>这里在LinearLayout 中定义了两个RatioProgress<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:sus</span>=<span class="string">"http://schemas.android.com/apk/res/com.soulrelay.ratioprogress"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span> &gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">com.soulrelay.ratioprogress.RatioProgress</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/left_ratio_progress"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"4dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">sus:direction</span>=<span class="string">"left"</span></span></div><div class="line"><span class="tag">        <span class="attr">sus:progressColor</span>=<span class="string">"@color/CommonTextSelect"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">com.soulrelay.ratioprogress.RatioProgress</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/right_ratio_progress"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"4dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"4dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">sus:direction</span>=<span class="string">"right"</span> </span></div><div class="line"><span class="tag">        <span class="attr">sus:progressColor</span>=<span class="string">"@color/CommonSelect"</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="实际java代码中的控制"><a href="#实际java代码中的控制" class="headerlink" title="实际java代码中的控制"></a><font color="#C4573C" size="4" face="黑体">实际java代码中的控制</font></h3><p>这里主要是设置leftRatioProgress和rightRatioProgress的宽度，以及通过设置View中的线程休眠时间来控制进度条可以同时相遇<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</div><div class="line">    </div><div class="line">    RatioProgress leftRatioProgress;</div><div class="line">    RatioProgress rightRatioProgress;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        </div><div class="line">        WindowManager manager = ((WindowManager) <span class="keyword">this</span></div><div class="line">                .getSystemService(Context.WINDOW_SERVICE));</div><div class="line"></div><div class="line">        DisplayMetrics dm = <span class="keyword">new</span> DisplayMetrics();</div><div class="line">        manager.getDefaultDisplay().getMetrics(dm);</div><div class="line">        <span class="keyword">final</span> <span class="keyword">int</span> w = dm.widthPixels;</div><div class="line"></div><div class="line">        leftRatioProgress = (RatioProgress) findViewById(R.id.left_ratio_progress);</div><div class="line">        LayoutParams lp = leftRatioProgress.getLayoutParams();</div><div class="line">        lp.width = w/<span class="number">3</span>;</div><div class="line">        leftRatioProgress.setLayoutParams(lp);</div><div class="line">        </div><div class="line">        rightRatioProgress = (RatioProgress) findViewById(R.id.right_ratio_progress);</div><div class="line">        LayoutParams lp1 = rightRatioProgress.getLayoutParams();</div><div class="line">        lp1.width = w*<span class="number">2</span>/<span class="number">3</span>;</div><div class="line">        rightRatioProgress.setLayoutParams(lp1);</div><div class="line">        </div><div class="line">        leftRatioProgress.setSleepDelay(<span class="number">6</span>);</div><div class="line">        rightRatioProgress.setSleepDelay(<span class="number">3</span>);</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>实际代码中我是根据用户的点赞数来分割屏幕宽度，设置View中的休眠时间</p>
<p>以下代码仅供参考：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">  * 进度条形式显示赞数的比例</span></div><div class="line"><span class="comment">  *</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> matchInfo</span></div><div class="line"><span class="comment">  * <span class="doctag">@author</span> sushuai</span></div><div class="line"><span class="comment">  */</span></div><div class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initRatioProgress</span><span class="params">(MatchInfo matchInfo)</span> </span>&#123;</div><div class="line">     <span class="keyword">int</span> width = SystemUtil.getScreenDisplayMinWidth(context);</div><div class="line">     <span class="keyword">int</span> leftWeight = matchInfo.getTeam1().getLikes();</div><div class="line">     <span class="keyword">int</span> rightWeight = matchInfo.getTeam2().getLikes();</div><div class="line">     <span class="keyword">int</span> leftWidth = <span class="number">0</span>, rightWidth = <span class="number">0</span>;</div><div class="line">     <span class="keyword">if</span> (leftWeight == <span class="number">0</span> &amp;&amp; rightWeight == <span class="number">0</span>) &#123;</div><div class="line">         leftWidth = rightWidth = width / <span class="number">2</span>;</div><div class="line">     &#125; <span class="keyword">else</span> <span class="keyword">if</span> (leftWeight == <span class="number">0</span>) &#123;</div><div class="line">         rightWidth = width;</div><div class="line">     &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rightWeight == <span class="number">0</span>) &#123;</div><div class="line">         leftWidth = width;</div><div class="line">     &#125; <span class="keyword">else</span> &#123;</div><div class="line">         leftWidth = width * leftWeight / (leftWeight + rightWeight);</div><div class="line">         rightWidth = width * rightWeight / (leftWeight + rightWeight);</div><div class="line">     &#125;</div><div class="line"></div><div class="line">     <span class="keyword">if</span> (leftRatioProgress != <span class="keyword">null</span>) &#123;</div><div class="line">         LayoutParams lp = leftRatioProgress.getLayoutParams();</div><div class="line">         lp.width = leftWidth;</div><div class="line">         leftRatioProgress.setLayoutParams(lp);</div><div class="line">         <span class="keyword">if</span> (leftWidth &gt;= rightWidth) &#123;</div><div class="line">             leftRatioProgress.setSleepDelay(<span class="number">1</span>);</div><div class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span> (leftWidth != <span class="number">0</span>) &#123;</div><div class="line">             leftRatioProgress.setSleepDelay(rightWidth / leftWidth);</div><div class="line">         &#125;</div><div class="line"></div><div class="line">     &#125;</div><div class="line"></div><div class="line">     <span class="keyword">if</span> (rightRatioProgress != <span class="keyword">null</span>) &#123;</div><div class="line">         LayoutParams lp = rightRatioProgress.getLayoutParams();</div><div class="line">         lp.width = rightWidth;</div><div class="line">         rightRatioProgress.setLayoutParams(lp);</div><div class="line">         <span class="keyword">if</span> (leftWidth &gt;= rightWidth &amp;&amp; rightWidth != <span class="number">0</span>) &#123;</div><div class="line">             rightRatioProgress.setSleepDelay(leftWidth / rightWidth);</div><div class="line">         &#125; <span class="keyword">else</span> &#123;</div><div class="line">             rightRatioProgress.setSleepDelay(<span class="number">1</span>);</div><div class="line"></div><div class="line">         &#125;</div><div class="line">     &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h1 id="其它"><a href="#其它" class="headerlink" title="其它"></a><font color="#C4573C" size="5" face="黑体">其它</font></h1><h2 id="Demo下载："><a href="#Demo下载：" class="headerlink" title="Demo下载："></a><font color="#C4573C" size="4" face="黑体">Demo下载：</font></h2><p><a href="http://download.csdn.net/detail/s003603u/9532387" target="_blank" rel="external">传送门</a></p>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a><font color="#C4573C" size="4" face="黑体">参考链接：</font></h2><p><a href="http://blog.csdn.net/wangjinyu501/article/details/38298737" target="_blank" rel="external">1、http://blog.csdn.net/wangjinyu501/article/details/38298737</a><br><a href="http://blog.csdn.net/lmj623565791/article/details/24252901/" target="_blank" rel="external">1、http://blog.csdn.net/lmj623565791/article/details/24252901/</a></p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> View </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android-architecture之MVC、MVP、MVVM、Data-Binding]]></title>
      <url>/2016/05/27/Android-architecture%E4%B9%8BMVC%E3%80%81MVP%E3%80%81MVVM%E3%80%81Data-Binding/</url>
      <content type="html"><![CDATA[<h1 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a><font color="#C4573C" size="5" face="黑体">传送门</font></h1><p>这里是之前分享的关于Android架构的一篇ppt，可以作为简要的参考<br><a href="http://blog.csdn.net/s003603u/article/details/51485709" target="_blank" rel="external">Android Architecture（Is Activity God？）</a></p>
<h1 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a><font color="#C4573C" size="5" face="黑体">MVC</font></h1><h2 id="结构简介"><a href="#结构简介" class="headerlink" title="结构简介"></a><font color="#C4573C" size="4" face="黑体">结构简介</font></h2><p>各个模块的关系以及功能<br><img src="http://img.blog.csdn.net/20160516105225460" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20160516155514982" alt="这里写图片描述"></p>
<h2 id="实例分析"><a href="#实例分析" class="headerlink" title="实例分析"></a><font color="#C4573C" size="4" face="黑体">实例分析</font></h2><p><img src="http://img.blog.csdn.net/20160516161401197" alt="这里写图片描述"></p>
<font color="#C4573C" size="3" face="黑体">Controller控制器式</font>

<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">ActionBarActivity</span> <span class="keyword">implements</span> <span class="title">OnWeatherListener</span>, <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> WeatherModel weatherModel;</div><div class="line">    <span class="keyword">private</span> Dialog loadingDialog;</div><div class="line">    <span class="keyword">private</span> EditText cityNOInput;</div><div class="line">    <span class="keyword">private</span> TextView city;</div><div class="line">    <span class="keyword">private</span> TextView cityNO;</div><div class="line">    <span class="keyword">private</span> TextView temp;</div><div class="line">    <span class="keyword">private</span> TextView wd;</div><div class="line">    <span class="keyword">private</span> TextView ws;</div><div class="line">    <span class="keyword">private</span> TextView sd;</div><div class="line">    <span class="keyword">private</span> TextView wse;</div><div class="line">    <span class="keyword">private</span> TextView time;</div><div class="line">    <span class="keyword">private</span> TextView njd;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        weatherModel = <span class="keyword">new</span> WeatherModelImpl();</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 初始化View</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">        cityNOInput = findView(R.id.et_city_no);</div><div class="line">        city = findView(R.id.tv_city);</div><div class="line">        cityNO = findView(R.id.tv_city_no);</div><div class="line">        temp = findView(R.id.tv_temp);</div><div class="line">        wd = findView(R.id.tv_WD);</div><div class="line">        ws = findView(R.id.tv_WS);</div><div class="line">        sd = findView(R.id.tv_SD);</div><div class="line">        wse = findView(R.id.tv_WSE);</div><div class="line">        time = findView(R.id.tv_time);</div><div class="line">        njd = findView(R.id.tv_njd);</div><div class="line">        findView(R.id.btn_go).setOnClickListener(<span class="keyword">this</span>);</div><div class="line"></div><div class="line">        loadingDialog = <span class="keyword">new</span> ProgressDialog(<span class="keyword">this</span>);</div><div class="line">        loadingDialog.setTitle(加载天气中...);</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 显示结果</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> weather</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayResult</span><span class="params">(Weather weather)</span> </span>&#123;</div><div class="line">        WeatherInfo weatherInfo = weather.getWeatherinfo();</div><div class="line">        city.setText(weatherInfo.getCity());</div><div class="line">        cityNO.setText(weatherInfo.getCityid());</div><div class="line">        temp.setText(weatherInfo.getTemp());</div><div class="line">        wd.setText(weatherInfo.getWD());</div><div class="line">        ws.setText(weatherInfo.getWS());</div><div class="line">        sd.setText(weatherInfo.getSD());</div><div class="line">        wse.setText(weatherInfo.getWSE());</div><div class="line">        time.setText(weatherInfo.getTime());</div><div class="line">        njd.setText(weatherInfo.getNjd());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 隐藏进度对话框</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hideLoadingDialog</span><span class="params">()</span> </span>&#123;</div><div class="line">        loadingDialog.dismiss();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">            <span class="keyword">case</span> R.id.btn_go:</div><div class="line">                loadingDialog.show();</div><div class="line">                weatherModel.getWeather(cityNOInput.getText().toString().trim(), <span class="keyword">this</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(Weather weather)</span> </span>&#123;</div><div class="line">        hideLoadingDialog();</div><div class="line">        displayResult(weather);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">()</span> </span>&#123;</div><div class="line">        hideLoadingDialog();</div><div class="line">        Toast.makeText(<span class="keyword">this</span>, 获取天气信息失败, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span>  T <span class="title">findView</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> (T) findViewById(id);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<font color="#C4573C" size="3" face="黑体">Model模型</font><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">WeatherModel</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getWeather</span><span class="params">(String cityNumber, OnWeatherListener listener)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeatherModelImpl</span> <span class="keyword">implements</span> <span class="title">WeatherModel</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getWeather</span><span class="params">(String cityNumber, <span class="keyword">final</span> OnWeatherListener listener)</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">/*数据层操作*/</span></div><div class="line">        VolleyRequest.newInstance().newGsonRequest(http:<span class="comment">//www.weather.com.cn/data/sk/ + cityNumber + .html,</span></div><div class="line">                Weather.class, <span class="keyword">new</span> Response.Listener() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Weather weather)</span> </span>&#123;</div><div class="line">                        <span class="keyword">if</span> (weather != <span class="keyword">null</span>) &#123;</div><div class="line">                            listener.onSuccess(weather);</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            listener.onError();</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;, <span class="keyword">new</span> Response.ErrorListener() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onErrorResponse</span><span class="params">(VolleyError error)</span> </span>&#123;</div><div class="line">                        listener.onError();</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">    &#125;</div></pre></td></tr></table></figure><br><br>## <font color="#C4573C" size="4" face="黑体">总结</font><br>&gt;<em> 扩展性好、维护性、模块职责明确<br>&gt;</em> 耦合性低（解耦）、V和M非真正意义上的分离<br><br><font color="#C4573C" size="3" face="黑体">什么时候适合使用MVC设计模式？</font>

<p>当一个小的项目且无需频繁修改需求就不用MVC框架来设计了，那样反而觉得代码过度设计，代码臃肿。一般在大的项目中，且业务逻辑处理复杂，页面显示比较多，需要模块化设计的项目使用MVC就有足够的优势了。</p>
<h1 id="MVP"><a href="#MVP" class="headerlink" title="MVP"></a><font color="#C4573C" size="5" face="黑体">MVP</font></h1><h2 id="结构简介-1"><a href="#结构简介-1" class="headerlink" title="结构简介"></a><font color="#C4573C" size="4" face="黑体">结构简介</font></h2><p><img src="http://img.blog.csdn.net/20160513112553811" alt="Drawing" width="1000px" height="170px"><br><img src="http://img.blog.csdn.net/20160513164339063" alt="这里写图片描述"></p>
<h2 id="为什么使用MVP模式"><a href="#为什么使用MVP模式" class="headerlink" title="为什么使用MVP模式"></a><font color="#C4573C" size="4" face="黑体">为什么使用MVP模式</font></h2><p>在Android开发中，Activity并不是一个标准的MVC模式中的Controller，它的首要职责是加载应用的布局和初始化用户界面，并接受并处理来自用户的操作请求，进而作出响应。随着界面及其逻辑的复杂度不断提升，Activity类的职责不断增加，以致变得庞大臃肿。当我们将其中复杂的逻辑处理移至另外的一个类（Presneter）中时，Activity其实就是MVP模式中View，它负责UI元素的初始化，建立UI元素与Presenter的关联（Listener之类），同时自己也会处理一些简单的逻辑（复杂的逻辑交由Presenter处理）.</p>
<p>另外，回想一下你在开发Android应用时是如何对代码逻辑进行单元测试的？是否每次都要将应用部署到Android模拟器或真机上，然后通过模拟用户操作进行测试？然而由于Android平台的特性，每次部署都耗费了大量的时间，这直接导致开发效率的降低。而在MVP模式中，处理复杂逻辑的Presenter是通过interface与View(Activity)进行交互的，这说明了什么？说明我们可以通过自定义类实现这个interface来模拟Activity的行为对Presenter进行单元测试，省去了大量的部署及测试的时间。</p>
<h2 id="实例分析-1"><a href="#实例分析-1" class="headerlink" title="实例分析"></a><font color="#C4573C" size="4" face="黑体">实例分析</font></h2><font color="#C4573C" size="3" face="黑体">MVP模式</font>

<p>View与Model并不直接交互，而是使用Presenter作为View与Model之间的桥梁。其中Presenter中同时持有Viwe层以及Model层的Interface的引用，而View层持有Presenter层Interface的引用。当View层某个界面需要展示某些数据的时候，首先会调用Presenter层的某个接口，然后Presenter层会调用Model层请求数据，当Model层数据加载成功之后会调用Presenter层的回调方法通知Presenter层数据加载完毕，最后Presenter层再调用View层的接口将加载后的数据展示给用户。这就是MVP模式的整个核心过程。</p>
<font color="#C4573C" size="3" face="黑体">官方模式图</font>


<p><a href="https://github.com/googlesamples/android-architecture" target="_blank" rel="external">android-architecture官方传送门</a><br><img src="http://img.blog.csdn.net/20160513113256749" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20160513113408353" alt=""></p>
<font color="#C4573C" size="3" face="黑体">案例</font>

<p>这里以<font color="#C4573C" size="3" face="黑体">暴风体育</font>中的<font color="#C4573C" size="3" face="黑体">话题列表</font>为例来进行介绍：</p>
<p><img src="http://img.blog.csdn.net/20160513121034417" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20160516163914095" alt="这里写图片描述"></p>
<font color="#C4573C" size="3" face="黑体">TopicModel </font>

<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TopicModel</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 加载话题列表首页数据</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> listener</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadTopicList</span><span class="params">(Context context, TopicModelImpl.OnLoadTopicListListener listener)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 从本地数据库中获取我关注的话题数据</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> listener</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function">ArrayList&lt;TopicItem&gt; <span class="title">loadFollowTopic</span><span class="params">(Context context, TopicModelImpl.OnLoadTopicListListener listener)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 全部话题加载更多数据</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> paramMap</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> listener</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadMoreAllTopic</span><span class="params">(Context context, Map&lt;String, String&gt; paramMap, TopicModelImpl.OnLoadTopicListListener listener)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 更新我关注的话题的最新帖子数和帖子最近的更新时间</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> threadItem</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> listener</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateThreadItem</span><span class="params">(<span class="keyword">final</span> Context context, ThreadItem threadItem, TopicModelImpl.OnLoadTopicListListener listener)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<font color="#C4573C" size="3" face="黑体">TopicPresenter </font>

<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TopicPresenter</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 加载话题列表首页数据</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadTopicList</span><span class="params">(Context context)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 全部话题加载更多数据</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> paramMap</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadMoreAllTopic</span><span class="params">(Context context, Map&lt;String, String&gt; paramMap)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function">ArrayList&lt;TopicItem&gt; <span class="title">loadFollowTopic</span><span class="params">(Context context)</span></span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<font color="#C4573C" size="3" face="黑体">TopicView </font>

<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TopicView</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showProgress</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addTopics</span><span class="params">(List&lt;TopicItem&gt; topicList)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addSwipeUpItem</span><span class="params">(SwipeUpItem item)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addLoadMoreTopics</span><span class="params">(List&lt;TopicItem&gt; topicList)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">hideProgress</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showLoadFailMsg</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">//二次请求需要重新刷新界面</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">notifyAdapter</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<font color="#C4573C" size="3" face="黑体">TopicModelImpl</font><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * DES：</span></div><div class="line"><span class="comment"> * Created by sushuai on 2016/4/13.</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TopicModelImpl</span> <span class="keyword">implements</span> <span class="title">TopicModel</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"TopicModelImpl"</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 加载话题列表首页数据</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> listener</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadTopicList</span><span class="params">(<span class="keyword">final</span> Context context, <span class="keyword">final</span> OnLoadTopicListListener listener)</span> </span>&#123;</div><div class="line">        AsyncHttpRequest.doASynGetRequest(context, UrlContainer.HOME_TOPIC, <span class="keyword">null</span>, <span class="keyword">true</span>, <span class="keyword">new</span> AsyncHttpRequest.CallBack() &#123;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fail</span><span class="params">(String ret)</span> </span>&#123;</div><div class="line">                listener.onFailure(Net.ErrorNo.NO_DATA);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String data)</span> </span>&#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    ArrayList&lt;TopicItem&gt; items = (ArrayList&lt;TopicItem&gt;) TopicListDataParseUtils.readJsonTopicLists(data, listener);</div><div class="line">                    <span class="comment">//items.addAll(0, loadFollowTopic(context, listener));</span></div><div class="line">                    <span class="keyword">if</span> (items != <span class="keyword">null</span>) &#123;</div><div class="line">                        listener.onSuccess(items);</div><div class="line">                    &#125;</div><div class="line">                &#125; <span class="keyword">catch</span> (JSONException e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                    listener.onFailure(Net.ErrorNo.ERROR_JSON);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 从本地数据库中获取我关注的话题数据</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> listener</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;TopicItem&gt; <span class="title">loadFollowTopic</span><span class="params">(Context context, <span class="keyword">final</span> OnLoadTopicListListener listener)</span> </span>&#123;</div><div class="line">        ArrayList&lt;TopicItem&gt; items = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        ArrayList&lt;ThreadItem&gt; ThreadItems = (ArrayList&lt;ThreadItem&gt;) FollowTopicDao.getInstance(context).getLatest3Topics();</div><div class="line">        <span class="keyword">if</span> (ThreadItems.size() &lt;= <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span> items;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ThreadItems.size(); i++) &#123;</div><div class="line">            ThreadItem threadItem = ThreadItems.get(i);</div><div class="line">            updateThreadItem(context, threadItem, listener);</div><div class="line">        &#125;</div><div class="line">        TopicItem meItem = <span class="keyword">new</span> TopicItem();</div><div class="line">        meItem.setType(TopicAdapter.TYPE_TOPIC_TITLE_ME);</div><div class="line">        items.add(meItem);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ThreadItems.size(); i++) &#123;</div><div class="line">            TopicItem topicItem = <span class="keyword">new</span> TopicItem();</div><div class="line">            topicItem.setType(TopicAdapter.TYPE_TOPIC_THREAD);</div><div class="line">            topicItem.setOther(ThreadItems.get(i));</div><div class="line">            items.add(topicItem);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> items;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 更新我关注的话题的最新帖子数和帖子最近的更新时间</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> threadItem</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> listener</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateThreadItem</span><span class="params">(<span class="keyword">final</span> Context context, <span class="keyword">final</span> ThreadItem threadItem, <span class="keyword">final</span> OnLoadTopicListListener listener)</span> </span>&#123;</div><div class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">        map.put(Net.Field.id, String.valueOf(threadItem.getId()));</div><div class="line">        <span class="keyword">final</span> <span class="keyword">int</span> prePosts = threadItem.getCount();</div><div class="line">        AsyncHttpRequest.doASynGetRequest(context, UrlContainer.GET_TOPIC_POSTS, (HashMap&lt;String, String&gt;) map, <span class="keyword">true</span>, <span class="keyword">new</span> AsyncHttpRequest.CallBack() &#123;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fail</span><span class="params">(String ret)</span> </span>&#123;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String data)</span> </span>&#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    JSONObject jo = <span class="keyword">new</span> JSONObject(data);</div><div class="line">                    <span class="keyword">int</span> errno = DataParseUtils.getJsonInt(jo, Net.Field.errno);</div><div class="line">                    <span class="keyword">if</span> (errno == Net.ErrorNo.SUCCESS) &#123;</div><div class="line">                        JSONObject jsonObj = DataParseUtils.getJsonObj(jo, Net.Field.data);</div><div class="line">                        <span class="keyword">int</span> count = DataParseUtils.getJsonInt(jsonObj, Net.Field.count);</div><div class="line">                        <span class="keyword">long</span> latest_update_tm = DataParseUtils.getJsonLong(jsonObj, Net.Field.latest_update_tm);</div><div class="line">                        threadItem.setUpdateCount(count - prePosts);</div><div class="line">                        threadItem.setCount(count);</div><div class="line">                        threadItem.setUpdateTime(latest_update_tm);</div><div class="line">                        FollowTopicDao.getInstance(context).updatePostsById(threadItem.getId(), count);</div><div class="line">                        listener.onUpdateThreadItem();</div><div class="line">                    &#125;</div><div class="line">                &#125; <span class="keyword">catch</span> (JSONException e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 全部话题加载更多数据</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> paramMap</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> listener</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadMoreAllTopic</span><span class="params">(Context context, Map&lt;String, String&gt; paramMap, <span class="keyword">final</span> OnLoadTopicListListener listener)</span> </span>&#123;</div><div class="line">        AsyncHttpRequest.doASynGetRequest(context, UrlContainer.TOPIC_LIST, (HashMap&lt;String, String&gt;) paramMap, <span class="keyword">true</span>, <span class="keyword">new</span> AsyncHttpRequest.CallBack() &#123;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fail</span><span class="params">(String ret)</span> </span>&#123;</div><div class="line">                listener.onFailure(Net.ErrorNo.NO_DATA);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String data)</span> </span>&#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    ArrayList&lt;TopicItem&gt; items = (ArrayList&lt;TopicItem&gt;) TopicListDataParseUtils.readMoreAllTopic(data, listener);</div><div class="line">                    <span class="keyword">if</span> (items != <span class="keyword">null</span>) &#123;</div><div class="line">                        listener.onLoadMoreAllTopics(items);</div><div class="line">                    &#125;</div><div class="line">                &#125; <span class="keyword">catch</span> (JSONException e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                    listener.onFailure(Net.ErrorNo.ERROR_JSON);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnLoadTopicListListener</span> </span>&#123;</div><div class="line">        <span class="comment">//加载话题列表首页数据成功</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(List&lt;TopicItem&gt; list)</span></span>;</div><div class="line"></div><div class="line">        <span class="comment">//加载话题列表首页数据失败</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="keyword">int</span> erroNo)</span></span>;</div><div class="line"></div><div class="line">        <span class="comment">//全部话题加载更多相关配置</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onLoadMoreSwipeUp</span><span class="params">(SwipeUpItem item)</span></span>;</div><div class="line"></div><div class="line">        <span class="comment">//回去加载更多数据</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onLoadMoreAllTopics</span><span class="params">(List&lt;TopicItem&gt; list)</span></span>;</div><div class="line"></div><div class="line">        <span class="comment">//更新我关注的话题的相关数据</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onUpdateThreadItem</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><font color="#C4573C" size="3" face="黑体">TopicPresenterImpl</font><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * DES：</span></div><div class="line"><span class="comment"> * Created by sushuai on 2016/4/13.</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TopicPresenterImpl</span> <span class="keyword">implements</span> <span class="title">TopicPresenter</span>, <span class="title">TopicModelImpl</span>.<span class="title">OnLoadTopicListListener</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"TopicPresenterImpl"</span>;</div><div class="line">    <span class="keyword">private</span> TopicModel mTopicModel;</div><div class="line">    <span class="keyword">private</span> TopicView mTopicView;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TopicPresenterImpl</span><span class="params">(TopicView topicView)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.mTopicModel = <span class="keyword">new</span> TopicModelImpl();</div><div class="line">        <span class="keyword">this</span>.mTopicView = topicView;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadTopicList</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        mTopicModel.loadTopicList(context, <span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadMoreAllTopic</span><span class="params">(Context context, Map&lt;String, String&gt; paramMap)</span> </span>&#123;</div><div class="line">        mTopicModel.loadMoreAllTopic(context, paramMap, <span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;TopicItem&gt; <span class="title">loadFollowTopic</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mTopicModel.loadFollowTopic(context,<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(List&lt;TopicItem&gt; list)</span> </span>&#123;</div><div class="line">        mTopicView.hideProgress();</div><div class="line">        mTopicView.addTopics(list);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="keyword">int</span> erroNo)</span> </span>&#123;</div><div class="line">        mTopicView.hideProgress();</div><div class="line">        mTopicView.showLoadFailMsg();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLoadMoreSwipeUp</span><span class="params">(SwipeUpItem item)</span> </span>&#123;</div><div class="line">        mTopicView.addSwipeUpItem(item);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLoadMoreAllTopics</span><span class="params">(List&lt;TopicItem&gt; list)</span> </span>&#123;</div><div class="line">        mTopicView.addLoadMoreTopics(list);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpdateThreadItem</span><span class="params">()</span> </span>&#123;</div><div class="line">        mTopicView.notifyAdapter();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><font color="#C4573C" size="3" face="黑体">TabTopicFragment</font><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 话题</span></div><div class="line"><span class="comment"> * SuShuai</span></div><div class="line"><span class="comment"> * 2016/4/12 14:39</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TabTopicFragment</span> <span class="keyword">extends</span> <span class="title">BaseFragment</span> <span class="keyword">implements</span> <span class="title">TopicAdapter</span>.<span class="title">AdapterCallback</span>, <span class="title">TopicView</span>, <span class="title">IHandlerMessage</span>, <span class="title">XListView</span>.<span class="title">IXListViewListener</span> </span>&#123;</div><div class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename parameter arguments, choose names that match</span></div><div class="line">    <span class="comment">// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"TabTopicFragment"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ARG_PARAM1 = <span class="string">"param1"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ARG_PARAM2 = <span class="string">"param2"</span>;</div><div class="line"></div><div class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types of parameters</span></div><div class="line">    <span class="keyword">private</span> String mParam1;</div><div class="line">    <span class="keyword">private</span> String mParam2;</div><div class="line">    <span class="keyword">private</span> XListView listView;</div><div class="line">    <span class="keyword">private</span> TopicAdapter topicAdapter;</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;TopicItem&gt; topicList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;TopicItem&gt; homeList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;TopicItem&gt; followTopicList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    <span class="keyword">private</span> TopicPresenter mTopicPresenter;</div><div class="line">    <span class="keyword">private</span> CommonHandler&lt;TabTopicFragment&gt; handler;</div><div class="line">    <span class="keyword">private</span> SwipeUpItem swipeUpItem;</div><div class="line">    <span class="keyword">private</span> View rootView;</div><div class="line">    <span class="keyword">private</span> String after = <span class="string">""</span>;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TabTopicFragment</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// Required empty public constructor</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * Use this factory method to create a new instance of</span></div><div class="line"><span class="comment">     * this fragment using the provided parameters.</span></div><div class="line"><span class="comment">     *</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> param1 Parameter 1.</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> param2 Parameter 2.</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> A new instance of fragment TabTopicFragment.</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types and number of parameters</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TabTopicFragment <span class="title">newInstance</span><span class="params">(String param1, String param2)</span> </span>&#123;</div><div class="line">        TabTopicFragment fragment = <span class="keyword">new</span> TabTopicFragment();</div><div class="line">        Bundle args = <span class="keyword">new</span> Bundle();</div><div class="line">        args.putString(ARG_PARAM1, param1);</div><div class="line">        args.putString(ARG_PARAM2, param2);</div><div class="line">        fragment.setArguments(args);</div><div class="line">        <span class="keyword">return</span> fragment;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAttach</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onAttach(context);</div><div class="line">        LogHelper.e(TAG, <span class="string">"SuS--&gt; onAttach: "</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        <span class="keyword">if</span> (getArguments() != <span class="keyword">null</span>) &#123;</div><div class="line">            mParam1 = getArguments().getString(ARG_PARAM1);</div><div class="line">            mParam2 = getArguments().getString(ARG_PARAM2);</div><div class="line">        &#125;</div><div class="line">        mTopicPresenter = <span class="keyword">new</span> TopicPresenterImpl(<span class="keyword">this</span>);</div><div class="line">        LogHelper.e(TAG, <span class="string">"SuS--&gt; onCreate: "</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span></div><div class="line"><span class="function"><span class="params">                             Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        LogHelper.e(TAG, <span class="string">"whb--&gt; onCreateView: "</span>);</div><div class="line">        <span class="keyword">if</span> (rootView == <span class="keyword">null</span>) &#123;</div><div class="line">            rootView = inflater.inflate(R.layout.fragment_tab_topic, container, <span class="keyword">false</span>);</div><div class="line">            initViews(rootView);</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> rootView;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onActivityCreated</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        LogHelper.e(TAG, <span class="string">"SuS--&gt; onActivityCreated: "</span>);</div><div class="line">        <span class="keyword">super</span>.onActivityCreated(savedInstanceState);</div><div class="line">        initData();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">        handler = <span class="keyword">new</span> CommonHandler&lt;TabTopicFragment&gt;(<span class="keyword">this</span>);</div><div class="line">        topicAdapter = <span class="keyword">new</span> TopicAdapter(getActivity(), <span class="keyword">this</span>);</div><div class="line">        listView.setAdapter(topicAdapter);</div><div class="line">        <span class="keyword">if</span> (NetUtils.isNetworkAvaliable(getActivity())) &#123;</div><div class="line">            showLoadingView();</div><div class="line">            mTopicPresenter.loadTopicList(getActivity());</div><div class="line">            followTopicList = mTopicPresenter.loadFollowTopic(getActivity());</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">if</span> (topicList.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">                topicAdapter.update(topicList);</div><div class="line">                ToastUtils.toast(getActivity(), <span class="string">"没有网络"</span>);</div><div class="line">                listView.restListView();</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            showNetErroView(R.string.tips_net_error);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        setImmerseLayout(v.findViewById(R.id.common_back));</div><div class="line">        setTitleBar(v, R.string.tab_topic);</div><div class="line">        setLeftGone(v);</div><div class="line">        listView = (XListView) v.findViewById(R.id.lv_topic);</div><div class="line">        listView.setPullRefreshEnable(<span class="keyword">true</span>);</div><div class="line">        listView.setPullLoadEnable(<span class="keyword">true</span>);</div><div class="line">        listView.setAutoLoadEnable(<span class="keyword">true</span>);</div><div class="line">        listView.setXListViewListener(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAdapterCallback</span><span class="params">(<span class="keyword">int</span> eventId, Object obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isAdded()) &#123;</div><div class="line">            BaofengStatistics.onUmengEvent(getActivity(), BfCountConst.TopicConst.BBS_MOREFOLLOW_CLICK);</div><div class="line">            LogHelper.v(<span class="string">"umeng"</span>, <span class="string">"bbs_morefollow_click  计数一次"</span>);</div><div class="line">        &#125;</div><div class="line">        ActivityUtil.startActivity(getActivity(), MoreFollowTopicActivity.class, <span class="keyword">null</span>, <span class="keyword">false</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showProgress</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addTopics</span><span class="params">(List&lt;TopicItem&gt; topicList)</span> </span>&#123;</div><div class="line">        handler.obtainMessage(HandlerMsg.MSG_LOAD_TOPIC_LIST_SUC,</div><div class="line">                topicList).sendToTarget();</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addSwipeUpItem</span><span class="params">(SwipeUpItem item)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (item == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        handler.obtainMessage(HandlerMsg.MSG_LOAD_SWIPE_UP_ITEM,</div><div class="line">                item).sendToTarget();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLoadMoreTopics</span><span class="params">(List&lt;TopicItem&gt; topicList)</span> </span>&#123;</div><div class="line">        handler.obtainMessage(HandlerMsg.MSG_LOAD_MORE_TOPICS,</div><div class="line">                topicList).sendToTarget();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hideProgress</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// handler.obtainMessage(HandlerMsg.MSG_DISMISS_LOADING).sendToTarget();</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showLoadFailMsg</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (topicList == <span class="keyword">null</span> || topicList.size() == <span class="number">0</span>) &#123;</div><div class="line">            handler.obtainMessage(HandlerMsg.MSG_SHOW_EMPTY_CONTENT).sendToTarget();</div><div class="line">        &#125;<span class="keyword">else</span> &#123;</div><div class="line">            handler.obtainMessage(HandlerMsg.MSG_SHOW_FAIL).sendToTarget();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyAdapter</span><span class="params">()</span> </span>&#123;</div><div class="line">        handler.obtainMessage(HandlerMsg.MSG_NOTIFY_ADAPTER_CONTENT).sendToTarget();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handlerCallback</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (msg.what) &#123;</div><div class="line">            <span class="keyword">case</span> HandlerMsg.MSG_LOAD_TOPIC_LIST_SUC:</div><div class="line">                dealTopicListSuc(msg);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> HandlerMsg.MSG_LOAD_SWIPE_UP_ITEM:</div><div class="line">                SwipeUpItem item = (SwipeUpItem) msg.obj;</div><div class="line">                <span class="keyword">this</span>.swipeUpItem = item;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> HandlerMsg.MSG_LOAD_MORE_TOPICS:</div><div class="line">                dealLoadMoreTopics(msg);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> HandlerMsg.MSG_DISMISS_LOADING:</div><div class="line">                dismissLoadingView();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> HandlerMsg.MSG_SHOW_EMPTY_CONTENT:</div><div class="line">                showContentEmptyView();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> HandlerMsg.MSG_NOTIFY_ADAPTER_CONTENT:</div><div class="line">                topicAdapter.notifyDataSetChanged();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> HandlerMsg.MSG_SHOW_FAIL:</div><div class="line">                ToastUtils.toast(getActivity(),R.string.error_no);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dealLoadMoreTopics</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">        List&lt;TopicItem&gt; moreList = (List&lt;TopicItem&gt;) msg.obj;</div><div class="line">        <span class="keyword">int</span> count1 = listView.getLastVisiblePosition();</div><div class="line">        <span class="keyword">int</span> count2 = topicAdapter.getCount()-<span class="number">1</span>+<span class="number">2</span>;</div><div class="line">        <span class="keyword">if</span> (moreList.size() &lt; swipeUpItem.getLimit() &amp;&amp; count1 == count2) &#123;</div><div class="line">            ToastUtils.toast(getActivity(), <span class="string">"已到达底部"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (moreList.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            after = TabTopicUtil.getLastKey(moreList);</div><div class="line">        &#125;</div><div class="line">        TabTopicUtil.filterDuplicatedTopic(moreList,homeList);</div><div class="line">        <span class="keyword">this</span>.topicList.addAll(moreList);</div><div class="line">        topicAdapter.update(<span class="keyword">this</span>.topicList);</div><div class="line">        listView.restListView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dealTopicListSuc</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">        List&lt;TopicItem&gt; topicList = (List&lt;TopicItem&gt;) msg.obj;</div><div class="line">        <span class="keyword">if</span> (topicList.size() &lt;= <span class="number">0</span>) &#123;</div><div class="line">            showContentEmptyView();</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        after = TabTopicUtil.getLastKey(topicList);</div><div class="line">        TabTopicUtil.removeDuplicateWithOrder(topicList);</div><div class="line">        topicList.addAll(<span class="number">0</span>,followTopicList);</div><div class="line">        <span class="keyword">this</span>.topicList = (ArrayList&lt;TopicItem&gt;) topicList;</div><div class="line">        <span class="keyword">this</span>.homeList = (ArrayList&lt;TopicItem&gt;) topicList;</div><div class="line">        topicAdapter.update(topicList);</div><div class="line">        dismissLoadingView();</div><div class="line">        listView.restListView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">//handler.postDelayed(new Runnable() &#123;</span></div><div class="line">        <span class="comment">// @Override</span></div><div class="line">        <span class="comment">//public void run() &#123;</span></div><div class="line">        <span class="keyword">if</span> (NetUtils.isNetworkAvaliable(getActivity())) &#123;</div><div class="line">            mTopicPresenter.loadTopicList(getActivity());</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">if</span> (topicList.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">                ToastUtils.toast(getActivity(), <span class="string">"没有网络"</span>);</div><div class="line">                listView.restListView();</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            showNetErroView(R.string.tips_net_error);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// &#125;</span></div><div class="line">        <span class="comment">//&#125;, 2000);</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLoadMore</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        handler.postDelayed(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                Map&lt;String, String&gt; m = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">                <span class="keyword">int</span> size = topicList.size();</div><div class="line">                <span class="keyword">if</span> (size &lt;= <span class="number">0</span>)</div><div class="line">                    <span class="keyword">return</span>;</div><div class="line">                m.put(Net.Param.ID, String.valueOf(swipeUpItem.getId()));</div><div class="line">                m.put(Net.Param.AFTER, after);</div><div class="line">                m.put(Net.Param.LIMIT, String.valueOf(swipeUpItem.getLimit()));</div><div class="line">                <span class="keyword">if</span> (NetUtils.isNetworkAvaliable(getActivity())) &#123;</div><div class="line">                    mTopicPresenter.loadMoreAllTopic(getActivity(), m);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    ToastUtils.toast(getActivity(), <span class="string">"没有网络"</span>);</div><div class="line">                    listView.restListView();</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;, <span class="number">500</span>);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">            <span class="keyword">case</span> R.id.fragment_net_error_subTree:</div><div class="line">                reQuestData();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 重新请求数据</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">reQuestData</span><span class="params">()</span> </span>&#123;</div><div class="line">        dismissNetErroView();</div><div class="line">        dismissContentEmptyView();</div><div class="line">        <span class="keyword">if</span> (NetUtils.isNetworkAvaliable(getActivity())) &#123;</div><div class="line">            showLoadingView();</div><div class="line">            mTopicPresenter.loadTopicList(getActivity());</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            showNetErroView(R.string.tips_net_error);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HandlerMsg</span> </span>&#123;</div><div class="line">        <span class="comment">//获取话题列表成功</span></div><div class="line">        <span class="keyword">int</span> MSG_LOAD_TOPIC_LIST_SUC = <span class="number">2002</span>;</div><div class="line">        <span class="comment">//获取加载更多配置选项</span></div><div class="line">        <span class="keyword">int</span> MSG_LOAD_SWIPE_UP_ITEM = <span class="number">2003</span>;</div><div class="line">        <span class="comment">//加载更多话题</span></div><div class="line">        <span class="keyword">int</span> MSG_LOAD_MORE_TOPICS = <span class="number">2004</span>;</div><div class="line">        <span class="comment">//隐藏loading</span></div><div class="line">        <span class="keyword">int</span> MSG_DISMISS_LOADING = <span class="number">2005</span>;</div><div class="line">        <span class="comment">//显示空</span></div><div class="line">        <span class="keyword">int</span> MSG_SHOW_EMPTY_CONTENT = <span class="number">2006</span>;</div><div class="line">        <span class="comment">//二次请求刷新界面</span></div><div class="line">        <span class="keyword">int</span> MSG_NOTIFY_ADAPTER_CONTENT = <span class="number">2007</span>;</div><div class="line">        <span class="comment">//显示失败</span></div><div class="line">        <span class="keyword">int</span> MSG_SHOW_FAIL = <span class="number">2008</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroyView</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="comment">//        unbindDrawables(getView());</span></div><div class="line">        LogHelper.e(TAG, <span class="string">"whb--&gt; onDestroyView: "</span>);</div><div class="line">        <span class="keyword">super</span>.onDestroyView();</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onResume();</div><div class="line">        LogHelper.d(TAG, <span class="string">"SuS--&gt; onResume: "</span>);</div><div class="line">            BaofengStatistics.onUmengEvent(getActivity(), BfCountConst.TopicConst.BBS_CHANNELLIST_SHOW);</div><div class="line">            LogHelper.v(<span class="string">"umeng"</span>, <span class="string">"bbs_channelList_show  计数一次"</span>);</div><div class="line">        topicList.removeAll(followTopicList);</div><div class="line">        followTopicList = mTopicPresenter.loadFollowTopic(getActivity());</div><div class="line">        topicList.addAll(<span class="number">0</span>,followTopicList);</div><div class="line">        topicAdapter.notifyDataSetChanged();</div><div class="line">        <span class="comment">//initData();</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>## <font color="#C4573C" size="5" face="黑体">MVP与MVC的异同</font><br> MVC模式与MVP模式都作为用来分离UI层与业务层的一种开发模式被应用了很多年。在我们选择一种开发模式时，首先需要了解一下这种模式的利弊：<br><br> 无论MVC或是MVP模式都不可避免地存如下弊端，这就导致了这两种开发模式也许并不是很小型应用。<br>         &gt;<em>  额外的代码复杂度和学习成本<br><br>但比起他们的优点，这点弊端基本可以忽略了：<br>      &gt;</em> 降低耦合度<br>      &gt;<em> 模块职责划分明显<br>      &gt;</em>  利于测试驱动开发<br>      &gt;<em> 代码复用<br>      &gt;</em> 隐藏数据<br>      &gt;<em> 代码灵活性<br><br> 对于MVP与MVC这两种模式，它们之间也有很大的差异。以下是这两种模式之间最关键的差异：<br>     MVP模式：<br>&gt;</em> View不直接与Model交互，而是通过与Presenter交互来与Model间接交互<br>&gt;<em> Presenter与View的交互是通过接口来进行的，更有利于添加单元测试<br>&gt;</em> 通常View与Presenter是一对一的，但复杂的View可能绑定多个Presenter来处理逻辑<br><br>MVC模式：<br>&gt;<em> View可以与Model直接交互<br>&gt;</em> Controller是基于行为的，并且可以被多个View共享<br>&gt;* 可以负责决定显示哪个View<br># <font color="#C4573C" size="5" face="黑体">MVVM</font><br><img src="http://img.blog.csdn.net/20160513113127889" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20160513113209084" alt="这里写图片描述"><br># <font color="#C4573C" size="5" face="黑体">Data-Binding</font><br>## <font color="#C4573C" size="4" face="黑体">前言</font>

<blockquote>
<ul>
<li>第三方的数据绑定框架随时有停止更新的风险，官方的则相对更稳定一些</li>
<li>大量的findViewById，增加代码的耦合性</li>
<li>虽然可以通过注解框架抛弃大量的findViewById，但是注解注定要拖慢我们代码的速度，Data Binding则不会，官网文档说还会提高解析XML的速度</li>
</ul>
</blockquote>
<p>这里不赘述了，下面几篇文章都讲的很详细！</p>
<p><a href="https://github.com/LyndonChin/MasteringAndroidDataBinding/" target="_blank" rel="external">精通 Android Data Binding</a><br> <a href="http://blog.csdn.net/qibin0506/article/details/47393725" target="_blank" rel="external">Android官方数据绑定框架DataBinding(一)</a><br> <a href="http://blog.csdn.net/qibin0506/article/details/47720125" target="_blank" rel="external">Android官方数据绑定框架DataBinding(二)</a><br><a href="https://developer.android.com/topic/libraries/data-binding/index.html#build_environment" target="_blank" rel="external">官方Data Binding Library</a></p>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a><font color="#C4573C" size="4" face="黑体">参考链接：</font></h2><p>1、<a href="https://www.zhihu.com/question/21406685" target="_blank" rel="external">https://www.zhihu.com/question/21406685</a><br>2、<a href="http://liuling123.com/2015/12/mvp-pattern-android.html" target="_blank" rel="external">http://liuling123.com/2015/12/mvp-pattern-android.html</a><br>3、<a href="http://www.2cto.com/kf/201506/405766.html" target="_blank" rel="external">http://www.2cto.com/kf/201506/405766.html</a><br>4、<a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0313/2599.html" target="_blank" rel="external">http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0313/2599.html</a><br>5、<a href="http://blog.csdn.net/qibin0506/article/details/47393725" target="_blank" rel="external">http://blog.csdn.net/qibin0506/article/details/47393725</a><br>6、<a href="http://zjutkz.net/2016/04/13/%E9%80%89%E6%8B%A9%E6%81%90%E6%83%A7%E7%97%87%E7%9A%84%E7%A6%8F%E9%9F%B3%EF%BC%81%E6%95%99%E4%BD%A0%E8%AE%A4%E6%B8%85MVC%EF%BC%8CMVP%E5%92%8CMVVM/#plg_nld=1&amp;plg_auth=1&amp;plg_nld=1&amp;plg_dev=1&amp;plg_uin=1&amp;plg_usr=1&amp;plg_vkey=1&amp;plg_nld=1&amp;more?hmsr=toutiao.io&amp;utm_source=toutiao.io&amp;plg_uin=1&amp;plg_auth=1&amp;utm_medium=toutiao.io&amp;plg_dev=1&amp;plg_nld=1&amp;plg_usr=1&amp;plg_vkey=1" target="_blank" rel="external">http://zjutkz.net/2016/04/13/%E9%80%89%E6%8B%A9%E6%81%90%E6%83%A7%E7%97%87%E7%9A%84%E7%A6%8F%E9%9F%B3%EF%BC%81%E6%95%99%E4%BD%A0%E8%AE%A4%E6%B8%85MVC%EF%BC%8CMVP%E5%92%8CMVVM/#plg_nld=1&amp;plg_auth=1&amp;plg_nld=1&amp;plg_dev=1&amp;plg_uin=1&amp;plg_usr=1&amp;plg_vkey=1&amp;plg_nld=1&amp;more?hmsr=toutiao.io&amp;utm_source=toutiao.io&amp;plg_uin=1&amp;plg_auth=1&amp;utm_medium=toutiao.io&amp;plg_dev=1&amp;plg_nld=1&amp;plg_usr=1&amp;plg_vkey=1</a><br>7、<a href="http://blog.csdn.net/wusuopubupt/article/details/8817826" target="_blank" rel="external">http://blog.csdn.net/wusuopubupt/article/details/8817826</a><br>8、<a href="https://github.com/LyndonChin/MasteringAndroidDataBinding\" target="_blank" rel="external">https://github.com/LyndonChin/MasteringAndroidDataBinding\</a><br>9、<a href="https://github.com/googlesamples/android-architecture" target="_blank" rel="external">https://github.com/googlesamples/android-architecture</a><br>10、<a href="http://www.jianshu.com/p/569ab68da482" target="_blank" rel="external">http://www.jianshu.com/p/569ab68da482</a><br>11、<a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2016/0425/4178.html" target="_blank" rel="external">http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2016/0425/4178.html</a><br>12、<a href="http://blog.csdn.net/vector_yi/article/details/24719873" target="_blank" rel="external">http://blog.csdn.net/vector_yi/article/details/24719873</a></p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android Architecture </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android Architecture（Is Activity God？）]]></title>
      <url>/2016/05/27/Android%20Architecture%EF%BC%88Is%20Activity%20God%EF%BC%9F%EF%BC%89/</url>
      <content type="html"><![CDATA[<h2 id="分享MVC、MVP、MVVM和Data-Binding的简要PPT"><a href="#分享MVC、MVP、MVVM和Data-Binding的简要PPT" class="headerlink" title="分享MVC、MVP、MVVM和Data-Binding的简要PPT"></a>分享MVC、MVP、MVVM和Data-Binding的简要PPT</h2><p><img src="http://img.blog.csdn.net/20160523232126227" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232149915" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232222367" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232233101" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232243148" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232252805" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232303352" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232316180" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232325680" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232337231" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232356434" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232420294" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232440842" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20160523232451045" alt="这里写图片描述"></p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android Architecture </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[DroidPlugin插件化应用分析]]></title>
      <url>/2016/04/25/DroidPlugin%E6%8F%92%E4%BB%B6%E5%8C%96%E5%BA%94%E7%94%A8%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a><font color="#C4573C" size="5" face="黑体">简介</font></h2><p>DroidPlugin 是360手机助手在Android系统上实现的一种新的插件机制:它可以在无需安装、修改的情况下运行APK文件,此机制对改进大型APP的架构，实现多团队协作开发具有一定的好处<br>详情请查看DroidPlugin的<a href="https://github.com/Qihoo360/DroidPlugin" target="_blank" rel="external">github地址</a></p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a><font color="#C4573C" size="5" face="黑体">背景</font></h2><blockquote>
<ul>
<li>将项目中某个相对独立的功能模块分解出来</li>
<li>例如：语音搜索功能模块独立出来，这样减少了项目中依赖包的数量，减少了项目中某些包的层层依赖关系，将语音搜索模块独立成一个单独的apk</li>
<li>可以独立开发语音搜索模块</li>
<li>假设主项目为Host，依赖library为DroidPlugin，独立出来的语音模块生成为voice.apk</li>
</ul>
</blockquote>
<h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a><font color="#C4573C" size="5" face="黑体">应用</font></h2><p> 这里将独立出来的语音搜索模块打包成单独的apk，放在项目的assets目录下</p>
<p>项目中的设置步骤：</p>
<blockquote>
<ul>
<li>导入DroidPlugin相关的library</li>
<li><p>在自己的Application当中添加如下代码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"> <span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate();</div><div class="line">    <span class="comment">//这里必须在super.onCreate方法之后，顺序不能变</span></div><div class="line">    PluginHelper.getInstance().applicationOnCreate(getBaseContext());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">attachBaseContext</span><span class="params">(Context base)</span> </span>&#123;</div><div class="line">    PluginHelper.getInstance().applicationAttachBaseContext(base);</div><div class="line">    <span class="keyword">super</span>.attachBaseContext(base);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>配置主应用AndroidManifest.xml中相关的组件和权限<br>这里需要注意DroidPlugin library中需要的权限以及组件要在主项目Host中声明<br>还有就是Host中的权限只能比voice的多，不能少，否则会有问题</p>
</li>
<li>读取assets里面的voice.apk并复制到sd上或者其他的可读取存储位置，然后再使用DroidPlugin进行安装，这里将需要用到的一些方法封装在PluginUtils工具类中。</li>
<li><p>当voice.apk通过插件式的形式安装完成以后，我们就可以通过如下方式启动voice.apk</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PluginUtils.startActivity(SearchResultActivity.<span class="keyword">this</span>,<span class="string">"com.storm.smart.voice"</span>);</div></pre></td></tr></table></figure>
</li>
<li><p>在Application或者MainActivty中加载voice.apk</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">    * 通过DroidPlugin插件安装voice.apk</span></div><div class="line"><span class="comment">    * 从sd卡根目录读取</span></div><div class="line"><span class="comment">    */</span></div><div class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">droidPluginInstall</span><span class="params">()</span> </span>&#123;</div><div class="line">       BfExecutor.getInstance().execute(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">               <span class="meta">@Override</span></div><div class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                   <span class="keyword">if</span> (PluginUtils.copyApkFromAssets(getApplicationContext(), <span class="string">"voice.apk"</span>,</div><div class="line">                           Environment.getExternalStorageDirectory().getAbsolutePath() + <span class="string">"/voice.apk"</span>)) &#123;</div><div class="line">                       PluginUtils.installApk(getApplicationContext(),</div><div class="line">                               Environment.getExternalStorageDirectory().getAbsolutePath() + <span class="string">"/voice.apk"</span>,</div><div class="line">                               <span class="string">"com.storm.smart.voice"</span>);</div><div class="line">                   &#125;</div><div class="line">               &#125;</div><div class="line">           &#125;);</div><div class="line">   &#125;</div><div class="line">   </div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 通过DroidPlugin插件安装voice.apk</span></div><div class="line"><span class="comment"> * 从data下读取，需要权限（有可能手机没有sd卡）</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">droidPluginInstall</span><span class="params">()</span> </span>&#123;</div><div class="line">	BfExecutor.getInstance().execute(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">			String path = <span class="string">"/data/data/"</span> + getApplicationContext().getPackageName() + <span class="string">"/files"</span> + <span class="string">"/voice.apk"</span>;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				String command = <span class="string">"chmod "</span> + <span class="string">"666"</span> + <span class="string">" "</span> + path;</div><div class="line">				Runtime runtime = Runtime.getRuntime();</div><div class="line">				runtime.exec(command);</div><div class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">				e.printStackTrace();</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (PluginUtils.copyApkFromAssets(getApplicationContext(), <span class="string">"voice.apk"</span>, path)) &#123;</div><div class="line">				PluginUtils.installApk(getApplicationContext(), path, <span class="string">"com.storm.smart.voice"</span>);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>PluginUtils全部代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PluginUtils</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">startActivity</span><span class="params">(Activity activity, String packageName)</span></span>&#123;</div><div class="line">        PackageManager pm = activity.getPackageManager();</div><div class="line">        Intent intent = pm.getLaunchIntentForPackage(packageName);</div><div class="line">        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">        activity.startActivity(intent);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 删除apk</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> activity</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> packageName</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">doUninstall</span><span class="params">( Activity activity, String packageName)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!PluginManager.getInstance().isConnected()) &#123;</div><div class="line">            Toast.makeText(activity, <span class="string">"服务未连接"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                PluginManager.getInstance().deletePackage(packageName, <span class="number">0</span>);</div><div class="line">                Toast.makeText(activity, <span class="string">"删除完成"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 应该在线程中安装，此方法仅供测试</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> activity</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> apkPath</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> packageName</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span>  <span class="title">installApk</span><span class="params">(Context context, String apkPath, String packageName)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!PluginManager.getInstance().isConnected()) &#123;</div><div class="line">            <span class="comment">//installTips(context,"插件服务正在初始化，请稍后再试。。。");</span></div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (PluginManager.getInstance().getPackageInfo(packageName, <span class="number">0</span>) != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="comment">//installTips(context,"已经安装了，不能再安装");</span></div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">               <span class="keyword">int</span> re = PluginManager.getInstance().installPackage(apkPath, <span class="number">0</span>);</div><div class="line">               <span class="keyword">if</span>(re == PluginManager.INSTALL_FAILED_NO_REQUESTEDPERMISSION)&#123;</div><div class="line">                   <span class="comment">//安装失败，文件请求的权限太多</span></div><div class="line">                   <span class="comment">//installTips(context,"安装失败，文件请求的权限太多");</span></div><div class="line">               &#125;<span class="keyword">else</span>&#123;</div><div class="line">                   <span class="comment">//安装完成</span></div><div class="line">                   <span class="comment">//installTips(context,"安装完成");</span></div><div class="line">                   <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">               &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;    </div><div class="line">    </div><div class="line">    <span class="comment">/**安装提示</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> tips</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">installTips</span><span class="params">(Context context,String tips)</span></span>&#123;</div><div class="line">    	 Looper.prepare();<span class="comment">//1、初始化Looper </span></div><div class="line">         Toast.makeText(context, tips, Toast.LENGTH_SHORT).show();</div><div class="line">         Looper.loop();<span class="comment">//4、启动消息循环</span></div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/** 将assets文件下的apk读取到读取到指定路径</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> fileName</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">copyApkFromAssets</span><span class="params">(Context context, String fileName, String path)</span> </span>&#123;  </div><div class="line">        <span class="keyword">boolean</span> copyIsFinish = <span class="keyword">false</span>;  </div><div class="line">        <span class="keyword">try</span> &#123;  </div><div class="line">            InputStream is = context.getAssets().open(fileName);  </div><div class="line">            File file = <span class="keyword">new</span> File(path);  </div><div class="line">            file.createNewFile();  </div><div class="line">            FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(file);  </div><div class="line">            <span class="keyword">byte</span>[] temp = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];  </div><div class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;  </div><div class="line">            <span class="keyword">while</span> ((i = is.read(temp)) &gt; <span class="number">0</span>) &#123;  </div><div class="line">                fos.write(temp, <span class="number">0</span>, i);  </div><div class="line">            &#125;  </div><div class="line">            fos.close();  </div><div class="line">            is.close();  </div><div class="line">            copyIsFinish = <span class="keyword">true</span>;  </div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;  </div><div class="line">            e.printStackTrace();  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">return</span> copyIsFinish;  </div><div class="line">    &#125;  </div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><font color="#C4573C" size="5" face="黑体">总结</font></h2><p>最终我们会发现在/data/data/【host packageName】下有一个Plugin文件夹，文件夹中有个【voice packageName】文件夹，里面有voice的相关数据<br>这样voice.apk就以插件的方式嵌入到我们的主应用中了。</p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 插件化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[移动支付（微信、支付宝、银联）集成]]></title>
      <url>/2016/04/05/%E7%A7%BB%E5%8A%A8%E6%94%AF%E4%BB%98%EF%BC%88%E5%BE%AE%E4%BF%A1%E3%80%81%E6%94%AF%E4%BB%98%E5%AE%9D%E3%80%81%E9%93%B6%E8%81%94%EF%BC%89%E9%9B%86%E6%88%90/</url>
      <content type="html"><![CDATA[<h2 id="微信支付"><a href="#微信支付" class="headerlink" title="微信支付"></a><font color="#C4573C" size="5" face="黑体">微信支付</font></h2><h3 id="Demo一直返回-1"><a href="#Demo一直返回-1" class="headerlink" title="Demo一直返回-1"></a><font color="#C4573C" size="4" face="黑体">Demo一直返回-1</font></h3><p>先去官网下载demo运行，第一次可以支付成功，以后就一直返回-1<br>如果是以客户端的官网demo进行测试的话，若一直返回-1，可采用如下方式处理：</p>
<blockquote>
<ul>
<li>删除微信缓冲数据<br>按如下步骤：设置-&gt;应用程序管理器-&gt;微信-&gt;清除数据</li>
<li>使用demo里的debug.keystore来测试<br>功能修改步骤：preferences-&gt;android-&gt;build-&gt;custom debug keystore-&gt;browse。 <h3 id="集成之后总是返回-1"><a href="#集成之后总是返回-1" class="headerlink" title="集成之后总是返回-1"></a><font color="#C4573C" size="4" face="黑体">集成之后总是返回-1</font></h3>可能产生问题的地方：包名不一致等其它原因（按照集成申请步骤来，这个应该很少发生）<h3 id="Demo中的订单模拟"><a href="#Demo中的订单模拟" class="headerlink" title="Demo中的订单模拟"></a><font color="#C4573C" size="4" face="黑体">Demo中的订单模拟</font></h3>其实微信支付的大部分工作是需要服务器端进行完成，微信支付的demo中，帮我们模拟了通过服务器生成订单，并返回prepayid的过程，然后demo中会拿着这些微信给我们模拟好的数据去进行支付，每次测试会向”微信测试”支付0.01元。demo中毕竟是模拟的，我们自己的集成一定是实实在在的，不过这里我并不会涉及到太多关于服务器端需要做什么<h3 id="客户端快速集成"><a href="#客户端快速集成" class="headerlink" title="客户端快速集成"></a><font color="#C4573C" size="4" face="黑体">客户端快速集成</font></h3>微信支付的demo比较冗余，我们把支付需要的东西单独摘出来,画箭头的文件可以copy到自己的工程中，根据实际业务或者代码设计进行修改。另外需要注意如下几点：</li>
<li>AndroidManifest.xml中package名字和项目包名一样；</li>
<li>将WXPayEntryActivity.java放在package.wxapi/下面</li>
<li>AndroidManifest.xml中添加.wxapi.WXPayEntryActivity（不添加，支付成功后无法跳转到相应的通知Activity界面）；</li>
</ul>
</blockquote>
<p><img src="http://img.blog.csdn.net/20160202105552636" alt="这里写图片描述"></p>
<h3 id="集成关键步骤"><a href="#集成关键步骤" class="headerlink" title="集成关键步骤"></a><font color="#C4573C" size="4" face="黑体">集成关键步骤</font></h3><p>从实际开发的角度来看PayActivity中需要添加的三个必备参数<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*****************************************************************</span></div><div class="line"><span class="comment"> * 微信支付需要的参数解释： APP_ID，商户号，API密钥</span></div><div class="line"><span class="comment">*****************************************************************/</span></div><div class="line"><span class="comment">// APP_ID</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String APP_ID = <span class="string">"xxxxxxxxxxxxxx"</span>;</div><div class="line"><span class="comment">// 商户号</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String MCH_ID = <span class="string">"yyyyyyyyyyyyyy"</span>;</div><div class="line"><span class="comment">// API密钥，在商户平台设置</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String API_KEY = <span class="string">"zzzzzzzzzzzzz"</span>;</div><div class="line">IWXAPI msgApi ;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">	<span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">...</div><div class="line">	msgApi = WXAPIFactory.createWXAPI(<span class="keyword">this</span>.getApplicationContext(), <span class="keyword">null</span>);</div><div class="line">   ...</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a><font color="#C4573C" size="4" face="黑体">基本流程</font></h4><blockquote>
<ul>
<li>点击微信支付-&gt;检测微信是否安装</li>
<li>未安装toast提示</li>
<li>已安装-&gt;根据需要兑换或者支付的产品id去服务器请求创建订单-&gt;创建订单成功-&gt;根据服务器返回的prepayid调用微信客户端进行微信支付-&gt;微信回调（无论成功、失败或者取消）-&gt;返回支付页面-&gt;去服务器校验订单-&gt;成功则根据校验结果进行相应业务跳转，校验异常可以强制用户进入订单列表页面进行再次比对校验（这个过程需要本地保存一下校验异常的订单，不过具体怎么处理校验异常可以自行制定策略）</li>
<li>一般校验订单是发生在微信客户端回调成功之后再去校验，但有一种情况也需要去校验，就是用户不是通过在微信中操作返回支付页面，而是通过home按键返回，这样支付页面就收不到微信的回调结果，即使已经支付成功，所以我们需要在支付页面回到前台的某个控制时机去再次校验一下订单</li>
<li>另外微信支付客户端的回调是在WXPayEntryActivity中完成的，这里可以自己再进一步封装处理</li>
</ul>
</blockquote>
<p>贴一些相关代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">	 * 微信支付使用</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">private</span> String <span class="title">genNonceStr</span><span class="params">()</span> </span>&#123;</div><div class="line">		Random random = <span class="keyword">new</span> Random();</div><div class="line">		<span class="keyword">return</span> MD5.getMessageDigest(String.valueOf(random.nextInt(<span class="number">10000</span>)).getBytes());</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 微信安装检测</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">checkApkExist</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span> (msgApi.isWXAppInstalled()) &#123;</div><div class="line">			<span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 微信支付：调用微信支付</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> prepayId 支付id</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">weiXinPay</span><span class="params">(String prepayId)</span> </span>&#123;</div><div class="line">		PayReq req = <span class="keyword">new</span> PayReq();</div><div class="line"></div><div class="line">		req.appId = APP_ID;</div><div class="line">		req.partnerId = MCH_ID;</div><div class="line">		req.prepayId = prepayId;</div><div class="line">		req.packageValue = <span class="string">"Sign=WXPay"</span>;</div><div class="line">		req.nonceStr = genNonceStr();</div><div class="line">		req.timeStamp = String.valueOf(System.currentTimeMillis() / <span class="number">1000</span>);</div><div class="line"></div><div class="line">		StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">		sb.append(<span class="string">"appid="</span>);</div><div class="line">		sb.append(req.appId);</div><div class="line">		sb.append(<span class="string">"&amp;noncestr="</span>);</div><div class="line">		sb.append(req.nonceStr);</div><div class="line">		sb.append(<span class="string">"&amp;package="</span>);</div><div class="line">		sb.append(req.packageValue);</div><div class="line">		sb.append(<span class="string">"&amp;partnerid="</span>);</div><div class="line">		sb.append(req.partnerId);</div><div class="line">		sb.append(<span class="string">"&amp;prepayid="</span>);</div><div class="line">		sb.append(req.prepayId);</div><div class="line">		sb.append(<span class="string">"&amp;timestamp="</span>);</div><div class="line">		sb.append(req.timeStamp);</div><div class="line">		sb.append(<span class="string">"&amp;key="</span>);</div><div class="line">		sb.append(API_KEY);</div><div class="line"></div><div class="line">		String appSign = MD5.getMessageDigest(sb.toString().getBytes()).toUpperCase();</div><div class="line"></div><div class="line">		req.sign = appSign;</div><div class="line">		msgApi.registerApp(APP_ID);</div><div class="line">		msgApi.sendReq(req);</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<h2 id="支付宝支付"><a href="#支付宝支付" class="headerlink" title="支付宝支付"></a><font color="#C4573C" size="4" face="黑体">支付宝支付</font></h2><h3 id="集成过程"><a href="#集成过程" class="headerlink" title="集成过程"></a><font color="#C4573C" size="4" face="黑体">集成过程</font></h3><p>其实支付宝支付的集成更加简单<br><img src="http://img.blog.csdn.net/20160202112703880" alt="这里写图片描述"></p>
<p>支付宝支付的demo上来是不能运行的，因为你缺少需要的参数,这里列举的是客户端需要的<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*****************************************************************</span></div><div class="line"><span class="comment"> * 支付宝支付需要的参数解释： 商户PID、商户收款账号、商户私钥</span></div><div class="line"><span class="comment">*****************************************************************/</span></div><div class="line"><span class="comment">// 商户PID</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PARTNER = <span class="string">"xxxxxxxxxxxxx"</span>;</div><div class="line"><span class="comment">// 商户收款账号</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SELLER = <span class="string">"yyyyyyyyyyy"</span>;</div><div class="line"><span class="comment">// 商户私钥，pkcs8格式</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String RSA_PRIVATE = <span class="string">"zzzzzzzzz"</span>;</div></pre></td></tr></table></figure></p>
<p>配置文件中不要忘记加入：(否则当手机没有安装支付宝客户端时无法调用支付成功)<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">      <span class="comment">&lt;!-- alipay sdk begin --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activity</span></span></div><div class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">"com.alipay.sdk.app.H5PayActivity"</span>            <span class="attr">android:configChanges</span>=<span class="string">"orientation|keyboardHidden|navigation|screenSize"</span></span></div><div class="line"><span class="tag"><span class="attr">android:exported</span>=<span class="string">"false"</span></span></div><div class="line"><span class="tag"><span class="attr">android:screenOrientation</span>=<span class="string">"behind"</span>            <span class="attr">android:windowSoftInputMode</span>=<span class="string">"adjustResize|stateHidden"</span> &gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- alipay sdk end --&gt;</span></div></pre></td></tr></table></figure></p>
<p>贴一下相关代码，较demo有些许改动:</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><font color="#C4573C" size="4" face="黑体">注意事项</font></h3><p>需要注意的地方：</p>
<blockquote>
<ul>
<li>私钥一定配置正确，我看有好多小伙伴会在sign(orderInfo)时获得的sign为null,最终导致做URL编码的时候报空指针，我也碰到过，就是服务器那边给的RSA_PRIVATE有问题。公钥客户端用不着</li>
<li>微信支付只需要传递一个prepayid，而支付宝支付需要穿三个参数，一个是订单号，一个是价格，一个是notify_url</li>
<li>支付宝支付创建订单以及订单校验的过程与微信支付类似，因为同在一个地方，要控制好相应的逻辑</li>
<li>注意一下price的单位，分和元不要搞错了<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * call alipay sdk pay. 调用支付宝SDK支付</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">alipay</span><span class="params">(String tradeNo, String price, String notify_url)</span> </span>&#123;</div><div class="line">	<span class="comment">// 订单</span></div><div class="line">	<span class="comment">// String orderInfo = getOrderInfo("测试的商品", "该测试商品的详细描述", "0.01");</span></div><div class="line"></div><div class="line">	String orderInfo = getOrderInfo(tradeNo, title,</div><div class="line">			payInfo, price, notify_url);</div><div class="line">	<span class="comment">// 对订单做RSA 签名</span></div><div class="line">	String sign = sign(orderInfo);</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">		<span class="comment">// 仅需对sign 做URL编码</span></div><div class="line">		sign = URLEncoder.encode(sign, <span class="string">"UTF-8"</span>);</div><div class="line">	&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// 完整的符合支付宝参数规范的订单信息</span></div><div class="line">	<span class="keyword">final</span> String payInfo = orderInfo + <span class="string">"&amp;sign=\""</span> + sign + <span class="string">"\"&amp;"</span> + getSignType();</div><div class="line"></div><div class="line">	Runnable payRunnable = <span class="keyword">new</span> Runnable() &#123;</div><div class="line"></div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">			<span class="comment">// 构造PayTask 对象</span></div><div class="line">			PayTask alipay = <span class="keyword">new</span> PayTask(PayActivity.<span class="keyword">this</span>);</div><div class="line">			<span class="comment">// 调用支付接口，获取支付结果</span></div><div class="line">			String result = alipay.pay(payInfo);</div><div class="line"></div><div class="line">			Message msg = <span class="keyword">new</span> Message();</div><div class="line">			msg.what = SDK_PAY_FLAG;</div><div class="line">			msg.obj = result;</div><div class="line">			mHandler.sendMessage(msg);</div><div class="line">		&#125;</div><div class="line">	&#125;;</div><div class="line"></div><div class="line">	<span class="comment">// 必须异步调用</span></div><div class="line">	ThreadPoolUtils.execute(payRunnable);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * create the order info. 创建支付宝订单信息</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getOrderInfo</span><span class="params">(String tradeNo, String subject, String body, String price, String notify_url)</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">// 签约合作者身份ID</span></div><div class="line">	String orderInfo = <span class="string">"partner="</span> + <span class="string">"\""</span> + PARTNER + <span class="string">"\""</span>;</div><div class="line"></div><div class="line">	<span class="comment">// 签约卖家支付宝账号</span></div><div class="line">	orderInfo += <span class="string">"&amp;seller_id="</span> + <span class="string">"\""</span> + SELLER + <span class="string">"\""</span>;</div><div class="line"></div><div class="line">	<span class="comment">// 商户网站唯一订单号</span></div><div class="line">	orderInfo += <span class="string">"&amp;out_trade_no="</span> + <span class="string">"\""</span> + tradeNo + <span class="string">"\""</span>;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (!TextUtils.isEmpty(subject)) &#123;</div><div class="line">		<span class="comment">// 商品名称</span></div><div class="line">		orderInfo += <span class="string">"&amp;subject="</span> + <span class="string">"\""</span> + subject + <span class="string">"\""</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (!TextUtils.isEmpty(body)) &#123;</div><div class="line">		<span class="comment">// 商品详情</span></div><div class="line">		orderInfo += <span class="string">"&amp;body="</span> + <span class="string">"\""</span> + body + <span class="string">"\""</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// 商品金额</span></div><div class="line">	orderInfo += <span class="string">"&amp;total_fee="</span> + <span class="string">"\""</span> + (Integer.parseInt(price) / <span class="number">100f</span>) + <span class="string">"\""</span>;</div><div class="line"></div><div class="line">	<span class="comment">// 服务器异步通知页面路径</span></div><div class="line">	orderInfo += <span class="string">"&amp;notify_url="</span> + <span class="string">"\""</span> + notify_url + <span class="string">"\""</span>;</div><div class="line"></div><div class="line">	<span class="comment">// 服务接口名称， 固定值</span></div><div class="line">	orderInfo += <span class="string">"&amp;service=\"mobile.securitypay.pay\""</span>;</div><div class="line"></div><div class="line">	<span class="comment">// 支付类型， 固定值</span></div><div class="line">	orderInfo += <span class="string">"&amp;payment_type=\"1\""</span>;</div><div class="line"></div><div class="line">	<span class="comment">// 参数编码， 固定值</span></div><div class="line">	orderInfo += <span class="string">"&amp;_input_charset=\"utf-8\""</span>;</div><div class="line"></div><div class="line">	<span class="comment">// 设置未付款交易的超时时间</span></div><div class="line">	<span class="comment">// 默认30分钟，一旦超时，该笔交易就会自动被关闭。</span></div><div class="line">	<span class="comment">// 取值范围：1m～15d。</span></div><div class="line">	<span class="comment">// m-分钟，h-小时，d-天，1c-当天（无论交易何时创建，都在0点关闭）。</span></div><div class="line">	<span class="comment">// 该参数数值不接受小数点，如1.5h，可转换为90m。</span></div><div class="line">	orderInfo += <span class="string">"&amp;it_b_pay=\"30m\""</span>;</div><div class="line"></div><div class="line">	<span class="comment">// extern_token为经过快登授权获取到的alipay_open_id,带上此参数用户将使用授权的账户进行支付</span></div><div class="line">	<span class="comment">// orderInfo += "&amp;extern_token=" + "\"" + extern_token + "\"";</span></div><div class="line"></div><div class="line">	<span class="comment">// 支付宝处理完请求后，当前页面跳转到商户指定页面的路径，可空</span></div><div class="line">	orderInfo += <span class="string">"&amp;return_url=\"m.alipay.com\""</span>;</div><div class="line"></div><div class="line">	<span class="comment">// 调用银行卡支付，需配置此参数，参与签名， 固定值 （需要签约《无线银行卡快捷支付》才能使用）</span></div><div class="line">	<span class="comment">// orderInfo += "&amp;paymethod=\"expressGateway\"";</span></div><div class="line"></div><div class="line">	<span class="keyword">return</span> orderInfo;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 支付宝支付使用 sign the order info. 对订单信息进行签名</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> content</span></div><div class="line"><span class="comment"> *            待签名订单信息</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sign</span><span class="params">(String content)</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> SignUtils.sign(content, RSA_PRIVATE);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 支付宝支付使用 get the sign type we use. 获取签名方式</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSignType</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> <span class="string">"sign_type=\"RSA\""</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<p>支付宝支付成功的回调(收到的msg.what为SDK_PAY_FLAG)<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">	 * 支付宝支付客户端回调成功</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> msg</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> theLayout</span></div><div class="line"><span class="comment">     */</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">aliSdkPaySuc</span><span class="params">(Message msg, PayActivity theLayout)</span> </span>&#123;</div><div class="line">		PayResult payResult = <span class="keyword">new</span> PayResult((String) msg.obj);</div><div class="line">		<span class="comment">// 支付宝返回此次支付结果及加签，建议对支付宝签名信息拿签约时支付宝提供的公钥做验签</span></div><div class="line">		String resultInfo = payResult.getResult();</div><div class="line">		String resultStatus = payResult.getResultStatus();</div><div class="line"></div><div class="line">		<span class="comment">// 判断resultStatus 为“9000”则代表支付成功，具体状态码代表含义可参考接口文档</span></div><div class="line">		<span class="keyword">if</span> (TextUtils.equals(resultStatus, <span class="string">"9000"</span>)) &#123;</div><div class="line">            <span class="comment">/*Toast.makeText(theLayout, "支付成功",</span></div><div class="line"><span class="comment">                    Toast.LENGTH_SHORT).show();*/</span></div><div class="line">            theLayout.payCheck();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">// 判断resultStatus 为非“9000”则代表可能支付失败</span></div><div class="line">            <span class="comment">// “8000”代表支付结果因为支付渠道原因或者系统原因还在等待支付结果确认，最终交易是否成功以服务端异步通知为准（小概率状态）</span></div><div class="line">            <span class="keyword">if</span> (TextUtils.equals(resultStatus, <span class="string">"8000"</span>)) &#123;</div><div class="line">                Toast.makeText(theLayout, <span class="string">"支付结果确认中"</span>,</div><div class="line">                        Toast.LENGTH_SHORT).show();</div><div class="line"></div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (TextUtils.equals(resultStatus, <span class="string">"4000"</span>)) &#123;</div><div class="line">                <span class="comment">// 其他值就可以判断为支付失败，包括用户主动取消支付，或者系统返回的错误</span></div><div class="line">                Toast.makeText(theLayout, <span class="string">"支付失败"</span>,</div><div class="line">                        Toast.LENGTH_SHORT).show();</div><div class="line"></div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(TextUtils.equals(resultStatus, <span class="string">"6001"</span>))&#123;</div><div class="line">                theLayout.payCount(<span class="string">"5"</span>,<span class="string">""</span>);</div><div class="line">                Toast.makeText(theLayout, <span class="string">"支付取消"</span>,</div><div class="line">                        Toast.LENGTH_SHORT).show();</div><div class="line"></div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(TextUtils.equals(resultStatus, <span class="string">"6002"</span>))&#123;</div><div class="line">                Toast.makeText(theLayout, <span class="string">"网络连接出错"</span>,</div><div class="line">                        Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">		theLayout.clickAliPay = <span class="keyword">false</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<h2 id="银联支付"><a href="#银联支付" class="headerlink" title="银联支付"></a><font color="#C4573C" size="5" face="黑体">银联支付</font></h2><p><a href="https://open.unionpay.com/ajweb/help/file/techFile?cateLog=Development_kit" target="_blank" rel="external">银联商家技术服务SDK下载地址</a><br><img src="http://img.blog.csdn.net/20160202140958653" alt="Drawing" width="250px"></p>
<p>##<font color="#C4573C" size="5" face="黑体">小结</font></p>
<blockquote>
<ul>
<li>关于微信支付和支付宝支付的坑，上面已经介绍很多了，如果还有问题的话，可以参考一下官方的FAQ </li>
<li>集成起来整体感觉支付宝支付要比微信支付容易点 </li>
<li>微信支付可以支付虚拟货币，但是支付宝需要走特殊通道开通 </li>
<li>银联支付暂时没做，因为商家账户申请的时间好长 </li>
<li>移动支付的过程处理需要在逻辑上做到严谨（对各种异常要提前预判），毕竟是跟钱有关的<br><img src="http://img.blog.csdn.net/20160202150907574" alt="这里写图片描述"></li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 移动支付 </tag>
            
            <tag> 微信 </tag>
            
            <tag> 支付宝 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[图片选取、拍摄、裁剪、上传]]></title>
      <url>/2016/04/05/%E5%9B%BE%E7%89%87%E9%80%89%E5%8F%96%E3%80%81%E6%8B%8D%E6%91%84%E3%80%81%E8%A3%81%E5%89%AA%E3%80%81%E4%B8%8A%E4%BC%A0/</url>
      <content type="html"><![CDATA[<h1 id="图片上传"><a href="#图片上传" class="headerlink" title="图片上传"></a>图片上传</h1><h2 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h2><p><img src="http://img.blog.csdn.net/20151230201831003" alt="Drawing" width="300px">       <img src="http://img.blog.csdn.net/20151230201757163" alt="Drawing" width="300px"></p>
<h2 id="图片上传前的准备"><a href="#图片上传前的准备" class="headerlink" title="图片上传前的准备"></a>图片上传前的准备</h2><h3 id="带圆角的方形图片"><a href="#带圆角的方形图片" class="headerlink" title="带圆角的方形图片"></a>带圆角的方形图片</h3><p>使用的第三方控件，主要关注如下一些文件</p>
<blockquote>
<ul>
<li>RoundedDrawable</li>
<li>RoundedImageView</li>
<li>RoundedTransformationBuilder</li>
<li>res目录下的anim、color以及values下的attrs</li>
</ul>
</blockquote>
<p>布局文件代码如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag"><span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></div><div class="line"><span class="tag"><span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res/com.soulrelay.uploadpic"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span> </span></div><div class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@color/f5f5f5"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">com.soulrelay.uploadpic.view.RoundedImageView</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/imageCover"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"50dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"center"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@drawable/default_cover_img"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:border_color</span>=<span class="string">"@color/border"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:border_width</span>=<span class="string">"1dip"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:corner_radius</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:mutate_background</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:oval</span>=<span class="string">"false"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/add_cover_txt"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_toRightOf</span>=<span class="string">"@id/imageCover"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"添加封面"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/_3e363d"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"15sp"</span> /&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="从下而上弹出的PopupWindow"><a href="#从下而上弹出的PopupWindow" class="headerlink" title="从下而上弹出的PopupWindow"></a>从下而上弹出的PopupWindow</h3><p>关注如下文件：</p>
<blockquote>
<ul>
<li>CoverSelelctPopupWindow</li>
<li>cover_select_pop_layout.xml</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CoverSelelctPopupWindow</span> <span class="keyword">extends</span> <span class="title">PopupWindow</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Button albumBtn, photoGraphBtn,cancelBtn;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> View mMenuView;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CoverSelelctPopupWindow</span><span class="params">(Activity context, OnClickListener itemsOnClick)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context);</div><div class="line">        LayoutInflater inflater = (LayoutInflater) context</div><div class="line">                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);</div><div class="line">        mMenuView = inflater.inflate(R.layout.cover_select_pop_layout, <span class="keyword">null</span>);</div><div class="line">        albumBtn = (Button) mMenuView.findViewById(R.id.btn_album);</div><div class="line">        photoGraphBtn = (Button) mMenuView.findViewById(R.id.btn_photo_graph);</div><div class="line">        <span class="comment">//startRecordBtn = (Button) mMenuView.findViewById(R.id.btn_upload_record);</span></div><div class="line">        cancelBtn = (Button) mMenuView.findViewById(R.id.btn_cancel_join);</div><div class="line">        <span class="comment">// 设置按钮监听</span></div><div class="line">        albumBtn.setOnClickListener(itemsOnClick);</div><div class="line">        photoGraphBtn.setOnClickListener(itemsOnClick);</div><div class="line"></div><div class="line">        <span class="comment">// 设置SelectPicPopupWindow的View</span></div><div class="line">        <span class="keyword">this</span>.setContentView(mMenuView);</div><div class="line">        <span class="comment">// 设置SelectPicPopupWindow弹出窗体的宽</span></div><div class="line">        <span class="keyword">this</span>.setWidth(LayoutParams.FILL_PARENT);</div><div class="line">        <span class="comment">// 设置SelectPicPopupWindow弹出窗体的高</span></div><div class="line">        <span class="keyword">this</span>.setHeight(LayoutParams.WRAP_CONTENT);</div><div class="line">        <span class="comment">// 设置SelectPicPopupWindow弹出窗体可点击</span></div><div class="line">        <span class="keyword">this</span>.setFocusable(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置SelectPicPopupWindow弹出窗体动画效果</span></div><div class="line">        <span class="keyword">this</span>.setAnimationStyle(R.style.AnimBottom);</div><div class="line">        <span class="comment">// 实例化一个ColorDrawable颜色为半透明</span></div><div class="line">        ColorDrawable dw = <span class="keyword">new</span> ColorDrawable(<span class="number">0x00FFFFFF</span>);</div><div class="line">        <span class="comment">// 设置SelectPicPopupWindow弹出窗体的背景</span></div><div class="line">        <span class="keyword">this</span>.setBackgroundDrawable(dw);</div><div class="line">        <span class="comment">// mMenuView添加OnTouchListener监听判断获取触屏位置如果在选择框外面则销毁弹出框</span></div><div class="line">        mMenuView.setOnTouchListener(<span class="keyword">new</span> OnTouchListener() &#123;</div><div class="line"></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>&#123;</div><div class="line"></div><div class="line">                <span class="keyword">int</span> height = mMenuView.findViewById(R.id.pop_layout).getTop();</div><div class="line">                <span class="keyword">int</span> y = (<span class="keyword">int</span>) event.getY();</div><div class="line">                <span class="keyword">if</span> (event.getAction() == MotionEvent.ACTION_UP) &#123;</div><div class="line">                    <span class="keyword">if</span> (y &lt; height) &#123;</div><div class="line">                        dismiss();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        cancelBtn.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                dismiss();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>布局文件：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span> &gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/pop_layout"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"175dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@color/f33e363d"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span> &gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/btn_album"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"20dip"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">"20dip"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"16dip"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"14sp"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@drawable/btn_report_selector"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@string/user_info_photo_album"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"@color/_3e363d"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/btn_photo_graph"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"20dip"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">"20dip"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"8dip"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"14sp"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@drawable/btn_report_selector"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@string/user_info_photo_camera"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"@color/_3e363d"</span> /&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/btn_cancel_join"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"16dip"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"20dip"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">"20dip"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"14sp"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@drawable/btn_report_selector"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@string/join_cancel_txt"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"@color/_6f6a6f"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="通过拍照以及相册获取图片"><a href="#通过拍照以及相册获取图片" class="headerlink" title="通过拍照以及相册获取图片"></a>通过拍照以及相册获取图片</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">android</span>.<span class="title">view</span>.<span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> RoundedImageView imgCover;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> TextView addCover;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> CoverSelelctPopupWindow coverSelelctPopupWindow;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTIVITY_ALBUM_REQUESTCODE = <span class="number">2000</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTIVITY_CAMERA_REQUESTCODE = <span class="number">2001</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTIVITY_MODIFY_PHOTO_REQUESTCODE = <span class="number">2002</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        initViews();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">        imgCover = (RoundedImageView) <span class="keyword">this</span>.findViewById(R.id.imageCover);</div><div class="line">        addCover = (TextView) <span class="keyword">this</span>.findViewById(R.id.add_cover_txt);</div><div class="line">        imgCover.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        addCover.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">            <span class="keyword">case</span> R.id.imageCover:</div><div class="line">            <span class="keyword">case</span> R.id.add_cover_txt:</div><div class="line">                coverSelelctPopupWindow = <span class="keyword">new</span> CoverSelelctPopupWindow(<span class="keyword">this</span>, itemsOnClick);</div><div class="line">                coverSelelctPopupWindow.showAtLocation(findViewById(R.id.add_cover_txt), Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">//设置layout在PopupWindow中显示的位置</span></div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 为弹出窗口实现监听类</span></div><div class="line">    <span class="keyword">private</span> OnClickListener itemsOnClick = <span class="keyword">new</span> OnClickListener() &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            coverSelelctPopupWindow.dismiss();</div><div class="line">            <span class="keyword">if</span> (CommonUtils.isFastDoubleClick()) &#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">                <span class="keyword">case</span> R.id.btn_album:</div><div class="line">                    Intent i = <span class="keyword">new</span> Intent(Intent.ACTION_PICK, <span class="keyword">null</span>);<span class="comment">// 调用android的图库</span></div><div class="line">                    i.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, <span class="string">"image/*"</span>);</div><div class="line">                    startActivityForResult(i, ACTIVITY_ALBUM_REQUESTCODE);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line"></div><div class="line">                <span class="keyword">case</span> R.id.btn_photo_graph:</div><div class="line">                    <span class="keyword">if</span> (CommonUtils.isExistCamera(MainActivity.<span class="keyword">this</span>)) &#123;</div><div class="line">                        Intent intent = <span class="keyword">new</span> Intent(MediaStore.ACTION_IMAGE_CAPTURE);<span class="comment">// 调用android自带的照相机</span></div><div class="line">                        Uri imageUri = Uri.fromFile(FileUtil.getHeadPhotoFileRaw());</div><div class="line">                        intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);</div><div class="line">                        intent.putExtra(MediaStore.Images.Media.ORIENTATION, <span class="number">0</span>);</div><div class="line">                        startActivityForResult(intent, ACTIVITY_CAMERA_REQUESTCODE);</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>,</div><div class="line">                                getResources().getString(R.string.user_no_camera),</div><div class="line">                                Toast.LENGTH_SHORT).show();</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</div><div class="line">        <span class="keyword">switch</span> (requestCode) &#123;</div><div class="line">            <span class="keyword">case</span> ACTIVITY_ALBUM_REQUESTCODE:</div><div class="line">                <span class="keyword">if</span> (resultCode == Activity.RESULT_OK) &#123;</div><div class="line">                    <span class="keyword">if</span>(data.getData() == <span class="keyword">null</span>)&#123;</div><div class="line">                        ToastUtils.toast(<span class="keyword">this</span>, getString(R.string.pic_not_valid));</div><div class="line">                        <span class="keyword">return</span>;</div><div class="line">                    &#125;</div><div class="line">                    CommonUtils.cutPhoto(<span class="keyword">this</span>, data.getData(), <span class="keyword">true</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> ACTIVITY_CAMERA_REQUESTCODE:</div><div class="line">                <span class="keyword">if</span> (resultCode == Activity.RESULT_OK) &#123;</div><div class="line">                    BitmapFactory.Options bitmapOptions = <span class="keyword">new</span> BitmapFactory.Options();</div><div class="line">                    bitmapOptions.inSampleSize = <span class="number">2</span>;</div><div class="line">                    <span class="keyword">int</span> degree = FileUtil.readPictureDegree(FileUtil.getHeadPhotoDir() + FileUtil.HEADPHOTO_NAME_RAW);</div><div class="line">                    Bitmap cameraBitmap = BitmapFactory.decodeFile(FileUtil.getHeadPhotoDir() + FileUtil.HEADPHOTO_NAME_RAW, bitmapOptions);</div><div class="line">                    cameraBitmap = FileUtil.rotaingImageView(degree, cameraBitmap);</div><div class="line">                    FileUtil.saveCutBitmapForCache(<span class="keyword">this</span>,cameraBitmap);</div><div class="line">                    CommonUtils.cutPhoto(<span class="keyword">this</span>, Uri.fromFile(FileUtil.getHeadPhotoFileRaw()), <span class="keyword">true</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> ACTIVITY_MODIFY_PHOTO_REQUESTCODE:</div><div class="line"><span class="comment">//                Bundle bundle = data.getExtras();</span></div><div class="line"><span class="comment">//                if (bundle != null) &#123;</span></div><div class="line"><span class="comment">//                    Bitmap bitmap = bundle.getParcelable("data");</span></div><div class="line"><span class="comment">//                    if (bitmap == null) &#123;</span></div><div class="line"><span class="comment">//                        return;</span></div><div class="line"><span class="comment">//                    &#125;</span></div><div class="line"><span class="comment">//                    headImg.setImageBitmap(bitmap);</span></div><div class="line"><span class="comment">//                &#125;</span></div><div class="line">                String coverPath = FileUtil.getHeadPhotoDir()  + FileUtil.HEADPHOTO_NAME_TEMP;</div><div class="line">                Bitmap bitmap = BitmapFactory.decodeFile(coverPath);</div><div class="line">                imgCover.setImageBitmap(bitmap);</div><div class="line">                <span class="comment">//接下来是完成上传功能</span></div><div class="line">               <span class="comment">/* HttpUtil.uploadCover(this, UrlContainer.UP_LIVE_COVER + "?uid="</span></div><div class="line"><span class="comment">                        + LoginUtils.getInstance(this), coverPath, this);*/</span></div><div class="line">                <span class="comment">//成功之后删除临时图片</span></div><div class="line">                FileUtil.deleteTempAndRaw();</div><div class="line"></div><div class="line">                <span class="keyword">break</span>;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="拍照获取图片失败的问题"><a href="#拍照获取图片失败的问题" class="headerlink" title="拍照获取图片失败的问题"></a>拍照获取图片失败的问题</h2><p>过程中发现，如果拍照获取图片的存储路径与裁切后存储的路径一致的话会出现问题，所以分别设置了两个路径，请参考</p>
<blockquote>
<ul>
<li>FileUtil<br>相关代码<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUtil</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"FileUtil"</span>;</div><div class="line">    <span class="comment">// 用户头像保存位置</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String HEADPHOTO_PATH = <span class="string">"/Android/data/com.soulrelay.uploadpic/"</span>;</div><div class="line"></div><div class="line">    <span class="comment">// 剪切头像时临时保存头像名字，完成或取消时删除</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> String HEADPHOTO_NAME_TEMP = <span class="string">"user_photo_temp.jpg"</span>;</div><div class="line">    <span class="comment">//拍照临时存取图片</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> String HEADPHOTO_NAME_RAW = <span class="string">"user_photo_raw.jpg"</span>;</div><div class="line"></div><div class="line">    <span class="comment">// 剪切壁纸图片</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String WALLPAPER = <span class="string">"wallpaper.jpg"</span>;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCropPath</span><span class="params">(String path)</span> </span>&#123;</div><div class="line">        String storageState = Environment.getExternalStorageState();</div><div class="line">        <span class="keyword">if</span> (Environment.MEDIA_REMOVED.equals(storageState)) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        String dirPath = Environment.getExternalStorageDirectory().getAbsolutePath() + HEADPHOTO_PATH + <span class="string">"cache"</span> + File.separator;</div><div class="line"></div><div class="line">        String s = MD5.Md5Encode(path)+<span class="string">".jpg"</span>;</div><div class="line">        <span class="keyword">return</span> dirPath + s;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 用户头像保存路径</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getHeadPhotoDir</span><span class="params">()</span> </span>&#123;</div><div class="line">        String storageState = Environment.getExternalStorageState();</div><div class="line">        <span class="keyword">if</span> (Environment.MEDIA_REMOVED.equals(storageState)) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        String path = Environment.getExternalStorageDirectory().getAbsolutePath() + HEADPHOTO_PATH;</div><div class="line">        SDCardUtil.mkdirs(path);</div><div class="line">        <span class="keyword">return</span> path;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 剪切头像时临时保存头像名字，完成或取消时删除</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> File <span class="title">getHeadPhotoFileTemp</span><span class="params">()</span> </span>&#123;</div><div class="line">        File file = <span class="keyword">new</span> File(getHeadPhotoDir() + HEADPHOTO_NAME_TEMP);</div><div class="line">        <span class="keyword">return</span> file;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 剪切头像时临时保存头像名字，完成或取消时删除(用于拍照时存储原始图片)</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> File <span class="title">getHeadPhotoFileRaw</span><span class="params">()</span> </span>&#123;</div><div class="line">        File file = <span class="keyword">new</span> File(getHeadPhotoDir() + HEADPHOTO_NAME_RAW);</div><div class="line">        <span class="keyword">return</span> file;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 获取剪切壁纸图片</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> File <span class="title">getWallPaperFile</span><span class="params">()</span> </span>&#123;</div><div class="line">        File file = <span class="keyword">new</span> File(getHeadPhotoDir() + WALLPAPER);</div><div class="line">        <span class="keyword">return</span> file;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveCutBitmapForCache</span><span class="params">(Context context, Bitmap bitmap)</span> </span>&#123;</div><div class="line">        File file = <span class="keyword">new</span> File(getHeadPhotoDir() + <span class="comment">/*File.separator +*/</span> HEADPHOTO_NAME_RAW);</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            FileOutputStream out = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line">            bitmap.compress(Bitmap.CompressFormat.JPEG, <span class="number">85</span>, out);</div><div class="line">            out.flush();</div><div class="line">            out.close();</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 读取图片属性：旋转的角度</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> path 图片绝对路径</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> degree旋转的角度</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">readPictureDegree</span><span class="params">(String path)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> degree  = <span class="number">0</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            ExifInterface exifInterface = <span class="keyword">new</span> ExifInterface(path);</div><div class="line">            <span class="keyword">int</span> orientation = exifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);</div><div class="line">            <span class="keyword">switch</span> (orientation) &#123;</div><div class="line">                <span class="keyword">case</span> ExifInterface.ORIENTATION_ROTATE_90:</div><div class="line">                    degree = <span class="number">90</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> ExifInterface.ORIENTATION_ROTATE_180:</div><div class="line">                    degree = <span class="number">180</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> ExifInterface.ORIENTATION_ROTATE_270:</div><div class="line">                    degree = <span class="number">270</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> degree;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 旋转图片</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> angle</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> bitmap</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span> Bitmap</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">rotaingImageView</span><span class="params">(<span class="keyword">int</span> angle , Bitmap bitmap)</span> </span>&#123;</div><div class="line">        <span class="comment">//旋转图片 动作</span></div><div class="line">        Matrix matrix = <span class="keyword">new</span> Matrix();;</div><div class="line">        matrix.postRotate(angle);</div><div class="line">        System.out.println(<span class="string">"angle2="</span> + angle);</div><div class="line">        <span class="comment">// 创建新的图片</span></div><div class="line">        Bitmap resizedBitmap = Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>,</div><div class="line">                bitmap.getWidth(), bitmap.getHeight(), matrix, <span class="keyword">true</span>);</div><div class="line">        <span class="keyword">return</span> resizedBitmap;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * Delete the file/dir from the local disk</span></div><div class="line"><span class="comment">     * </span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteFile</span><span class="params">(String filePath)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(filePath)) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        File file = <span class="keyword">new</span> File(filePath);</div><div class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</div><div class="line">            Log.w(TAG, <span class="string">"the file is not exist while delete the file"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> deleteDir(file);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * Delete the file from the local disk</span></div><div class="line"><span class="comment">     * </span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> dir</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteDir</span><span class="params">(File dir)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (dir.isDirectory()) &#123;</div><div class="line">            String[] children = dir.list();</div><div class="line">            <span class="keyword">if</span> (children != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="comment">// 递归删除目录中的子目录下</span></div><div class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; children.length; i++) &#123;</div><div class="line">                    <span class="keyword">boolean</span> success = deleteDir(<span class="keyword">new</span> File(dir, children[i]));</div><div class="line">                    <span class="keyword">if</span> (!success) &#123;</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (!dir.canRead() || !dir.canWrite()) &#123;</div><div class="line">            Log.w(TAG, <span class="string">"has no permission to can or write while delete the file"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 目录此时为空，可以删除</span></div><div class="line">        <span class="keyword">return</span> dir.delete();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 删除临时文件（拍照的原始图片以及临时文件）</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteTempAndRaw</span><span class="params">()</span> </span>&#123;</div><div class="line">       deleteFile(FileUtil.getHeadPhotoDir()  + FileUtil.HEADPHOTO_NAME_TEMP);</div><div class="line">       deleteFile(FileUtil.getHeadPhotoDir()  + FileUtil.HEADPHOTO_NAME_RAW);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h2 id="拍照获取图片角度不正确的问题"><a href="#拍照获取图片角度不正确的问题" class="headerlink" title="拍照获取图片角度不正确的问题"></a>拍照获取图片角度不正确的问题</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">case</span> ACTIVITY_CAMERA_REQUESTCODE:</div><div class="line">             <span class="keyword">if</span> (resultCode == Activity.RESULT_OK) &#123;</div><div class="line">                 BitmapFactory.Options bitmapOptions = <span class="keyword">new</span> BitmapFactory.Options();</div><div class="line">                 bitmapOptions.inSampleSize = <span class="number">2</span>;</div><div class="line">                 <span class="keyword">int</span> degree = FileUtil.readPictureDegree(FileUtil.getHeadPhotoDir() + FileUtil.HEADPHOTO_NAME_RAW);</div><div class="line">                 Bitmap cameraBitmap = BitmapFactory.decodeFile(FileUtil.getHeadPhotoDir() + FileUtil.HEADPHOTO_NAME_RAW, bitmapOptions);</div><div class="line">                 cameraBitmap = FileUtil.rotaingImageView(degree, cameraBitmap);</div><div class="line">                 FileUtil.saveCutBitmapForCache(<span class="keyword">this</span>,cameraBitmap);</div><div class="line">                 CommonUtils.cutPhoto(<span class="keyword">this</span>, Uri.fromFile(FileUtil.getHeadPhotoFileRaw()), <span class="keyword">true</span>);</div><div class="line">             &#125;</div><div class="line">             <span class="keyword">break</span>;</div></pre></td></tr></table></figure>
<p>如果不存在图片角度的问题可以直接调用(我测试的时候发现：型号相同，系统版本相同的手机上也有可能存在角度不统一的问题，如果有更好的处理方法，欢迎指教！)<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CommonUtils.cutPhoto(<span class="keyword">this</span>, Uri.fromFile(FileUtil.getHeadPhotoFileRaw()), <span class="keyword">true</span>);</div></pre></td></tr></table></figure></p>
<h2 id="上传成功之后删除临时文件"><a href="#上传成功之后删除临时文件" class="headerlink" title="上传成功之后删除临时文件"></a>上传成功之后删除临时文件</h2><p>可以根据服务器接口形式，来进行图片上传，我这边上传的格式是<br>传入两个参数</p>
<blockquote>
<ul>
<li>uid    用户id</li>
<li>image    图片二进制数据<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">case</span> ACTIVITY_MODIFY_PHOTO_REQUESTCODE:</div><div class="line">               String coverPath = FileUtil.getHeadPhotoDir()  + FileUtil.HEADPHOTO_NAME_TEMP;</div><div class="line">               Bitmap bitmap = BitmapFactory.decodeFile(coverPath);</div><div class="line">               imgCover.setImageBitmap(bitmap);</div><div class="line">               <span class="comment">//接下来是完成上传功能</span></div><div class="line">              <span class="comment">/* HttpUtil.uploadCover(this, UrlContainer.UP_LIVE_COVER + "?uid="</span></div><div class="line"><span class="comment">                       + LoginUtils.getInstance(this), coverPath, this);*/</span></div><div class="line">               <span class="comment">//成功之后删除临时图片</span></div><div class="line">               FileUtil.deleteTempAndRaw();</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h2 id="图片上传以及上传之后的处理"><a href="#图片上传以及上传之后的处理" class="headerlink" title="图片上传以及上传之后的处理"></a>图片上传以及上传之后的处理</h2><p>大家可以在自己的网络请求中按照如下方式处理，然后根据上传成功和失败的回调做相应的事情<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="function">ublic <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">uploadCover</span><span class="params">(<span class="keyword">final</span> Context context, <span class="keyword">final</span> String url, <span class="keyword">final</span> String path,</span></span></div><div class="line"><span class="function"><span class="params">                                   <span class="keyword">final</span> UploadLiveCoverListener listener)</span> </span>&#123;</div><div class="line">        ThreadPoolUtils.execute(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="comment">// 添加密钥</span></div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    HttpClient client = <span class="keyword">new</span> DefaultHttpClient();</div><div class="line">                    MultipartEntity multipartContent = getEntity(context,</div><div class="line">                            <span class="keyword">new</span> HashMap&lt;String, String&gt;());</div><div class="line">                    FileBody fileBody = <span class="keyword">new</span> FileBody(<span class="keyword">new</span> File(path), <span class="string">"image/jpeg"</span>, <span class="string">"UTF-8"</span>);</div><div class="line">                    multipartContent.addPart(<span class="string">"image"</span>, fileBody);</div><div class="line">                    String ret = doPost(context, url, multipartContent, client);</div><div class="line">                    JSONObject json = <span class="keyword">new</span> JSONObject(ret);</div><div class="line">                    <span class="keyword">int</span> status = json.getInt(<span class="string">"status"</span>);</div><div class="line">                    <span class="keyword">if</span> (status == <span class="number">0</span>) &#123;</div><div class="line">                        JSONObject resultO = json.getJSONObject(<span class="string">"result"</span>);</div><div class="line">                        String imgUrl = resultO.getString(<span class="string">"img_url"</span>);</div><div class="line">                        listener.onUploadSuccess(imgUrl);</div><div class="line">                    &#125;<span class="keyword">else</span> &#123;</div><div class="line">                        listener.onUploadFail(status);</div><div class="line">                    &#125;</div><div class="line">                    deleteTempAndRaw(path);</div><div class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                    listener.onUploadFail(-<span class="number">1</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<h2 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a>代码下载</h2><p>源代码地址：<a href="http://download.csdn.net/detail/s003603u/9384582" target="_blank" rel="external">选我选我选我</a></p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> view </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RxLoginAndRegister]]></title>
      <url>/2016/03/29/RxLoginAndRegister/</url>
      <content type="html"><![CDATA[<h1 id="RxLoginAndRegister"><a href="#RxLoginAndRegister" class="headerlink" title="RxLoginAndRegister"></a>RxLoginAndRegister</h1><p>主要包含客户端和服务端两个部分：</p>
<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>使用RxJava和Retrofit搭配完成基本的登录和注册功能</p>
<blockquote>
<ul>
<li>RxJava：一个在 Java VM 上使用可观测的序列来组成异步的、基于事件的程序的库（说到根上，它就是一个实现异步操作的库）</li>
<li>Retrofit: 类型安全的网络库，封装了okhttp</li>
</ul>
</blockquote>
<h3 id="登录api"><a href="#登录api" class="headerlink" title="登录api"></a>登录api</h3><p>一个带有两个参数的post请求<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LoginApi</span> </span>&#123;</div><div class="line">    <span class="meta">@FormUrlEncoded</span></div><div class="line">    <span class="meta">@POST</span>(<span class="string">"/LoginServer/login.php"</span>)</div><div class="line">    <span class="function">Observable&lt;ResultReturn&gt; <span class="title">login</span><span class="params">(@Field(<span class="string">"email"</span>)</span> String email, @<span class="title">Field</span><span class="params">(<span class="string">"password"</span>)</span> String password)</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意：具体使用方法请参考详细代码 ，其它相关概念不再赘述。</p>
<p><img src="https://raw.githubusercontent.com/feifei003603/RxLoginAndRegister/master/app/src/main/res/raw/login.jpg" alt="image"></p>
<p><img src="https://github.com/feifei003603/RxLoginAndRegister/blob/master/app/src/main/res/raw/register.jpg?raw=true" alt="image"></p>
<h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p>初衷：就是想自己搭建一个最最基本的服务器！</p>
<p>功能：完成了一个最基本的登录和注册流程</p>
<p>注意：代码结构相对简单！仅供需要的朋友进行参考</p>
<p>部分代码参考github上的一个demo，一时间找不到那个demo的链接了，同时根据本案例自身需求做了一些调整</p>
<p>相关介绍：</p>
<blockquote>
<ul>
<li>集成安装环境：WampServer 即在window下的apache、php和mysql的服务器软件</li>
<li>集成开发环境：Zend Studio12.5.1</li>
<li>数据传输类型：JSON<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"success"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"msg"</span>: <span class="string">"Login success"</span>,</div><div class="line">    <span class="attr">"result"</span>: &#123;</div><div class="line">        <span class="attr">"name"</span>: <span class="string">"ss"</span>,</div><div class="line">        <span class="attr">"email"</span>: <span class="string">"123@qq.com"</span>,</div><div class="line">        <span class="attr">"contact"</span>: <span class="string">"123"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h3 id="修改数据库配置文件"><a href="#修改数据库配置文件" class="headerlink" title="修改数据库配置文件"></a>修改数据库配置文件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment"> * All database connection variables</span></div><div class="line"><span class="comment"> */</span></div><div class="line"> </div><div class="line">define(<span class="string">"DB_HOST"</span>, <span class="string">"localhost"</span>);</div><div class="line">define(<span class="string">"DB_USER"</span>, <span class="string">"root"</span>);</div><div class="line">define(<span class="string">"DB_PASSWORD"</span>, <span class="string">""</span>);</div><div class="line">define(<span class="string">"DB_NAME"</span>, <span class="string">"simplelogin"</span>);</div></pre></td></tr></table></figure>
<h3 id="数据库的连接-数据表的创建-相关数据操作api"><a href="#数据库的连接-数据表的创建-相关数据操作api" class="headerlink" title="数据库的连接 数据表的创建 相关数据操作api"></a>数据库的连接 数据表的创建 相关数据操作api</h3><p>参考db_apis.php</p>
<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>参考login.php</p>
<h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>参考register.php</p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RxJava </tag>
            
            <tag> Retrofit </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
